const {
    create,
    globals
} = require('../../dawn_newest/out/Debug/Debug/dawn.node');
const fs = require('fs');
Object.assign(globalThis, globals);
let navigator = {
    gpu: create([]),
};

if (!navigator.gpu) {
    throw new Error("WebGPU not supported on this browser");
}

function loadShader(file) {
    try {
        const data = fs.readFileSync(file, 'utf8');
        return data;
    } catch (err) {
        console.error('Failed to load shader:', err);
    }
}
const ApiUxcXcnEFKIQr = new Uint8Array([-2485, 5620, -998, -1115, -1265, -4718, -7428, -5321, 3742, 5936, 3217, -1140, -2209, 2602, -6311, -711])
const EzADbDljxTULKS = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const PCuQxBwaFefPJG = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const ZEyuH = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const SqoESKynGKjYdOhLTgBn = new Float32Array([2944, -979, 8911, 6894, -1146, 6682, -706, -1139, -9173, 9006, 4326, 430, -1597, 3289, 5247, -7758, -9846, -2901, 4918, -348, -9252, 7609, 8017, -7228, 2161, -7556, 9456, 3005, -6077, -9970, 1013, -36, -8014, 7854, 2290, 1196, -4160, -6960, 8610, 7347, 7002, 3477, 5338, -6289, 2824, -3529, -4848, 6636, -7701, -2874, 4606, -7387, -2310, -8509, -7419, 9834, -9651, 1209, 3789, -2972, 553, 2428, 1663, -8898, -5314, 9039, 4056, 9765, -5282, 1768, 2574, 5715, 9388, 9068, -4933, 9870, 559, -9231, -5410, 1296, 8851, -8904, -7842, 6380, -1434])
const SobaIoLhHkIBHxAMiMZ = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const jcukDB = new Int8Array([9634, 4803, -5476, -2646, 6396, 6830, -3141, -6350, 5821, 9727, 2114, 8658, -6591, -524, 888, -9496, -6831, -7115, 4612, -3085, -504, 4143, 1342, -7734])
const WaUJvjKsisJQufLCVjyC = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const yWAwXUYcIoRKCcmbs = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const qsdDJLDlOor = new Int8Array([6627, 6947, -6743, -9446, 9704, 3224, -6266, -9201, 1957, 422, -1216, -3913, -221, -8797, 3255, 1368, 8163, -2783, 5769, 4124, -1046, 362, -8227, 5685, -6182, -1311, 4242, 5557, 5015, -8563, -3017, 4616, 4376, -4327, -5277, -5663, 7447, -6268, -7738, -3855, -3914, 8104, -918, 5615, 2495, 3392, -3434, 3150, 7359, -6297, 9012, -7640, 611, 5503, -4733, -9891, -5821, 3953, 5947, -185, -9936, 3357, -6867, -2246, 4041, 7250, 5557, 1923, 5221, -6524, -5094, 1358, 8889, 4266, 8173, -7040, -2821, -3848, -2524, -8207, 7121, -614, 6619, -6046, 4409, -3247, -3317, 3297, 5029, -2351, -9259, 6476, -6219, 3211, 5941, -8026, -228, 3818, -2784, 3220, 5920, -7084, 248, 203, -3598, 4345, -286, 2623, -7670, -5759, 3630, -6010])
const czDWW = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const pgIPtCbYHvxZvlPm = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const bsBfGiICZEviIDeV = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const mAjfnFv = new Int8Array([-6333, -5651, -5027, -6852, -7084, -5167, -8207, -6803, -1615, -469, 1808, 8100, 7939, 703, -8448, -3040, 2199, 4520, 2162, 8556, 7759, 1368, 1205, 7389, -5261, 3991, 5383, -9081, 8904, 3283, 4498, 6201, -9824, -9317, 3194, 6107, -8895, 5234, 2369, -1539, 4784, -5676, 575, -6011, 4109, -3973, -3846, -4366, -5319, -3565, 1760, 345, -9457, -7395, 5830, 2955, 4229, 7953, -3925, 1702, 6749, 170, -7378, 988, 5089, -8579, -2619, 790, -3101, -182, -9764, 1530, 7574, -9192, -4833, -7548, -1127, -8953, 1901, -9720, -6528, 265, -9503, -9614, -3561, 3132, -4537, 3405, -9253, -6281, -6091, 8032, 352, 1899, -991, -1486, 720, 9651, 1363, -7473, -1622, 8319, 5748, 7109, 5931, 1923, 3634, 4499, -3008, 6647, -5755, 6345, -3051, 6067, -1937, 8276, 1288, 3680, 1973, -7141, -6654, 1801, -5315, -3185, 6903, 556, -4473, -2950, -4372, 3562, 4687, 615, 4155, -3686, 2112, 4073, 1256, 3193, -2319, -5539, 6392, -7518, 273, -1901, 2100, -2498, 1945, 7116, 2185, -333, -4750, -5058, 1057, -2128, -6603, -7838])
const zUzFUD = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const FBnhUOElwHnMdkDosdnJ = new Float32Array([7268, -8946, -1018, 3661, 3677, -116, -210, -8436, -2207, 1297, 1995, 793, 5759, -2656, 2651, 191, 6324, 9861, -8667, 156, 317, -6034, -1667, -8801, -8445, -4761, 6407, -2324, -4047, 3878, -9203, 1862, -727, 6638, 4949, 1132, 7705, -7906, -7564, 854, -8414, 1451, 5535, -6751, -2213, 5391, 5768, 4531, -8452, -6222, -1723, -6065, -7192, 3305, 9698, -9694, -5767, 4947, -1399, 7456, -8772, -9163, -7823, 2741, 2262, -9457, 3639, -2221, 7279, -3501, 3948, 4191, 1114, 3144, 2891, -5206, 2435, -8349, -9973, -5383, -2288, -6099, 8840, -2671, 418, -5766, 7136, 2963, -5845, -2930, 6784, 7386, -3372, 2487, -5475, -1475, 7176, 7844, -7353, 8819, -1393, -4416, -8266, 5481, 1879, 102, 1191, 7228, 4250, 3344, 2639, -9122, -3311, -3067, -9928, -8487, 8167, 1286, -2636, -1685, 6323, 7174, 4610, -8457, -3867, -8426, 7252, 3650, 7593, 7920, -6503, 1379, -7083, 3533, 1727, -3247, -3859, -3895, -2710, -9639, -1782, -7868, 9874, 6959, -5157, -2492, 8630, -925, 5502, 8278, 4198, -4593, 1545, 3293, -5641, -7430, -6592, 9203, 891, 2021, -2307, 2894, 8281, 3788, -3465, -7357, -9690, 5256, 1966, -3655, -742, -2058, -6593, -9854, -6082, 765, -8074, 4556, 5978, 1531, -7514, -4688, 7108, -101, 3742, 9847, 7525, 4637, 8849, 3264, 1128, -4677, -4462, 9772, 565, -5928])
const aZyZS = new Uint8Array([438, -5244, -4856, -5459, 4840, -5280, -8620, -8035, 2266, 5153, -968, -5024, -2350, 1173, -3789, -9716, -4352, -7112, -9270, 751, -5942, -4413, -9023, 6977, -501, 4635, -8598, -9579, -3772, 4525, 9339, -3108, -1999, -5901, -4937, 6050, -2192, -5066, -7157, -8219, 9932, 9808, 4136, 1215, 3363, -5400, 3322, 5180, 4210, -325, 8131, -4981, -7009, -7730, -1013, 8075, -1111, -6066, -6011, 9375, -4816, 2529, 6013, -4547, 9374, -493, 7833, -2042, -3697, -445, 3853, 6317, 2027, 2551, 5873, 8989, 8966, 4995, 788, -2307, 3299, -9830, 9577, 4155, 4882, 3473, 1842, 2875, 2437, -1068, 7096, -6786, 9179, -7546, -717, -9847, 8963, 2294, 5529, 8838, -4137, 3290, -3447, 305, -5195, -9697, 5137, 5518])
const iEkQxCq = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const ddJwGQCMNAu = loadShader('../WebGlitch/rsrcs/shaders/compute/1/compute.wgsl');
const uFgRwgx = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const sGsRXdXxiHnvzFoI = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const BtouSTuB = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const SrMTTIXRatIIZDkEkd = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const GGQvrherUfGvTo = loadShader('../WebGlitch/rsrcs/shaders/compute/1/compute.wgsl');
const nVOfNRHx = new Int8Array([3876, -6915, 5440, 6344, -7010, 1889, -5671, -5258, -120, -7535, -3478, -8525, -7276, -5213, 2746, 7618, -8163, -7810, 1384, 3972, -1053, 2040, -2621, 9436, 9436, 8525, -4307, 2852, -3058, -9456, 6107, 8046, -5519, -8017, 8538, 2022, -9208, -4809, -877, 6418, 3394, -7352, 1669, -6819, -334, -3605, -807, 1808, -9870, -7792, 6592, -1525, 6441, 221, 6696, 9669, -6967, -8133, -578, -5934, 1341, -4602, 9788, 6322, -5743, 4322, -2267, -2450, -6125, 4991, -6929, 9645, 7490, 3057, 7174, -9228, -3862, -5241, -640, 1465, -1593, 9666, -3493, 1552, 1229, -2827, 1373, 4026, 3624, 8130, -2647, -4989, -9318, -178, 2882, 582, 2992, -5934, -8808, -9118, -7732, 5306, -6992, 3226, -7628, 5866, 2987, 4021, 8868, -2439, -9161, 1493, 4633, -9363, 2501, -2715, 7815, -7468, 6467, -5623, 3385, -6954, 8020, -191, -9542, 8724, -41, 6940, -912, -3543, 8509, 4165, -6003, -3449, -1442, 2431, -9454, -3246, 5121, -4166, -2439, 4400, 3710, -5977, -9543, -2555, -459, -2092, -2346, 5916, -3449, 454, -4697, 4240, 3881, -8751, 9923, -4277, -1849, 6467, 2824, 1287, 5637, -2713, 7198, -3797, -1178, 7068, 5500, -6637, 2484, 6271, -6392, 6653, -6965, 6244, -6863, -966, -3177, -465, 1840, 3861, 2913, -1311, -7531, 13, 7885, 9742, 9822, 1575, -6265, 1435, -2419, -2240, 9299, 625, -3444, -371, -4393, -6173, -1253, 5756, 8464, 2886, 7725, -5360, 4591, 104, -9570, 7007, -6204, -4896, 3581, -8782, 886, 568, -8564, 2800, 1192, 8724, 9652, -212, -4691, 8677, -486, -3016, 5970, -2576, -6131, -6373, -9150, -9195, -4733, -9524, -2955, 204, 4894, 2103, -8995, 8111, 8231, -4330, 7868, 3365, -2771, 6792, -5240, 2332, 125, 2861, -1913, 9770, 9531, -7076, -2493, 529, 2391, 7201, -1293, -9508, 5249, -9639, -2904, 21, -365, 6621, -1433, 6689, -5718, -3410, 5087, 8668, -8831, 306, -7380, 7625, 1065, -308, 502, -5800, 7010, 2927, -8873, 6479, 5545, -5304, 7118, -5471, -6333, 5256, -3766, 860, 1282, 7501, 8450, -9061, -2032, -4498, -7438, 846, 7859, 4838, 9609, -7611, -317, 3174, -3919, 318, 343, 2035, -4177, -6500, 3921, 759, 7199, -763, -9121, 3674, 7422, 5577, 9458, -1509, 3822, 3303, 124, -4743, -9605, 7120, 8264, -8839, 241, -5186, -899, -1065, 558, 7966, 6321, 8902, 7176, -1274, -9852, -4613, -1712, 3361, 3612, 3815, -7587, 5266, -2140, -5578, -1343, 4052, -9496, 1465, -3812, -9880, -4136, 3120, -603, -6368, 7707, 5648, 104, -355, 6213, -190, 802, -8454, -2878, -7278, 7351, 7913, 9908, 7027, 9376, 1832, 8617, -7002, 7917, -1859, -269, 3965, -3305, 5713, 7273, -4344, 3366, -792, 6342, 7446, 3685, -2412, 8361, 5126, 5986, -1917, -7815, -6872, -3022, -8037, -2642, -9347, 8985, -4254, 2823, -8870, -5975, 3996, 2319, -94, -4076, -9948, -4321, -1996, 406, -370, 932, -3429, -9788, 2949, -4003, 7577, -8965, 4807, -7837, 2168, 3120, 2750, -8314, -3993, -5752, -9358, 3736, -7696, 7811, -7196, -6986, -1164, -7362, 4289, -2647, 4329, 7846, 1202, 3024, 8749, 3286, 7908, 2301, 7535, 976, -2318, -5547, 9791, 9365, 9119, 7330, -211, 2908, -3295, -2886, 8693, -6658, -6382, -9275, -6723, -2993, 5764, 3858, 1607, -5374, -9126, 6689, 3846, 2621, -5734, -5944, -9832, -7170, -2603])
const PhpcpzREnviFlgc = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const ETFSalPi = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const FPuAiXBKSnfDSZMxDW = new Int8Array([840, -5611, -6298, 2364, -3438, 7989, -6288, 3573, -6674, -1288, 952, -6393])
const uDrChfoJMAM = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const KMvIWUoB = new Float32Array([1069, -7203, -6190, 5450, -1832, 2021, 1673, -3368, 4344, 3402, 9653, -4013, -6791, -9001, 4865, 8909, -8789, -2898, 5767, -4087, -616, 9900, 6902, -3791, 5924, 2470, -6355, 8134, -8230, 5738, -6374, -7152, 403, 5533, -2343, -9227, 3180, -1191, 3082, 2130, -4619, -7397, -2186, -7273, -9869, -998, -316, -2967, -2248, 8918, -9892, -5437, 2963, -5108, -3395, 4879, 8465, -4911, 9946, -7815, -335, -2202, 6025, 6500, -1632, -9859, 6361, -5676, -9487, 1552, 2360, -5106, -5365, 5263, -854, -5105, 3306, -8748, -1, 3302, -1775, 8480, 6767, 1609, 7710, -4373, -1330, 6354, 2072, 868, -3934, -2001, -4335, 4472, 9821, -8479, -3974, 3322, 5247, -638, -5505, 979, -4476, 5941, 129, -3017, -7485, 6079, -2111, 3277, 8586, 5360, 2141, -3982, 4731, -9408, 4153, 9843, -3040, 7461, -3280, -9155, -6057, 1704, -1919, 7068, -2939, -3503, -2638, 4298, -6836, -847, -315, 5441, 5766, -5579, 5164, 9566, 8872, 1780, -3190, -2343, 8014, 9738, -9350, 6385, 9919, -3464, -4838, 140, -8879, 5172, 998, 1983, -5415, -7819, -8472, -4461, -6201, -4565, 5799, 8552, 2532, -5029, -8133, -5477, 5261, 9936, -192, 3237, -3128, -4228, 8497, 4689, -3509, 538, -7996, 6495, 8060, 1926, -2453, -7186, 6740, 3854, -9704, -887, -9199, -7891, 1867, 5943, 8083, 1365, -5422, 7066, -3148, 5812, -2592, -9053, -8016, -9282, -6129, 6883, -3155, 9741, 5475, -8990, -9960, -719, 1917, -898, -8573, 2655, -4825, -3298, -8000, 7347, 558, -2411, -7892, 3582, -6012, 2039, 4162, 7720, 8931, -6832, 6380, 7724, 1932, -209, 3132, 4891, 7178, 6058, 3785, 2716, -2202, -2623, 6580, 1721, -9504, 2886, -8005, -2567, -2211, -1916, 7587, 1909, -9400, -7127, 1567, -3348, 4326, -9427, -1980, -5514, -9985, -1399, 9161, -1189, 158, -1451, 8654, 6671, -63, -2161, -7367, -8766, -4028, -5362, -868, 3505, -9645, 4443, 9604, 878, -1215, 5836, -4353, -7875, 7682, -4059, -2411, -4998, 8768, -5817, -9712, -1569, 2734, -5603, 6514, -9869, -69, -1752, 1403, -5748, -2143, -1669, 7476, -5588, -4799, 3752, 1634, -2313, 2441, -4098, -8334, -1326, 3810, 8915, -5436, 3504, -5802, -7158, -9766, 5474, -4942, -7602, -7898, -8207, -4440, -1333, -7755, -2850, 1145, -890, -1436, -1090, 9908, 8189, -6977, -499, -8539, -8798, -4511, -4041, -4389, 8168, -1875, -8464, -1680, 5025, -3492, 3145, -5176, -2024, 1080, 7512, 9680, 2133, -5605, 6466, 4235, -4304, 2822, -2918, 1406, 9829, -7753, -7927, 9662, -6421, -6262, -8561, -2491, -3636, 7346, 4537, 3934, -1854, -3923, -8529, 8281, 3476, 1950, -340, -3578, -3821, 5022, -6087, 2707, -8618, -7543, -3592, -1365, 1490, -9883, 3080, 4040, 5125, -8645, -8956, -8381, -8794])
const iWWrEGzfJeZt = new Int8Array([-6044, -9420, 6728, 8461, 2089, 7839, -837, -1015, 5550, 7058, 8883, 8179, 3649, -1109, 5519, 750, -3885, -252, 271, -9016])
const McbFLBfvolMf = loadShader('../WebGlitch/rsrcs/shaders/compute/1/compute.wgsl');
const fNKQae = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const RVqivrWychXS = new Int8Array([3169, 9743, -8896, 2661, -4415, -719, -5243, -376, 3317, -225, -8090, -5288, 330, -6885, 6295, -9792, -1355, -4507, -7209, -5837, 611, 8881, 9837, -8967, 782, 7325, 2595, 499, 1386, 3583, -7316, -3834, -3257, 1130, 4706, -8461, -4530, 9003, -1550, 6683, -5296, -9072, -1577, 5725, -2943, 9846, -5056, 542, 6933, -4729, 101, -7271, -8756, 2706, 256, 5038, -4810, 8959, 5827, 5033, -2641, -6456, 589, 9981, -321, -590, 6165, 2112])
const gmYTEUHBMdz = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const Avnxdpj = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const NRwZXwlniXZiOLUlgQcj = new Int8Array([7811, -5956, -268, -1360, -9954, 62, -2403, -1476, 7826, -645, 3011, 5987, 8879, 5655, -500, 5074, 993, -1682, -3692, 1046, 9787, -3812, -9742, -6235, 2948, 7603, -463, 9610, -4700, -569, -4084, -9161, -228, 3195, -654, -8784, -2078, 3316, 1824, 134, -7671, -9593, -5244, -9523, -3754, -2524, -3409, -5271, 9883, 6252, -5787, -858, 4632, 6588, -4093, -3533, -1723, -7794, 1398, -6665, 9540, -9162, 7034, 8686, -627, 3112, 470, -5309, -8044, 4108, -7278, 6428, 7876, -383, -8447, -1510, 2706, 2369, -7751, 9305, 5264, -2106, -2109, 6608, 1735, 4438, -533, -4311, -1077, -9875, 4908, -3245, 639, -2507, -8350, -5659, 5653, -296, 8667, -5126, 7643, 8443, 8993, -5117, -8351, 3710, -7125, 3484, 6461, -1023, 4115, 4083, 2671, -4600, -3035, 5552, 3551, 7070, -2210, -4690, -5415, 5215, -4156, 8668, -8308, -2321, 1407, -5962, 1114, -2405, -7924, -9895, -6646, 4218, 1213, 1014, -4854, -7327, -8009, -6584, -7782, -5548, 2913, -2136, 6504, -1666, 5383, -5614, -1096, 1644, 4669, 8183, 2604, 2898, 4837, -7190, 4535, -639, 2705, 4426, 8111, -6292, -6346, 4626, 5839, -508, 8919, -8478, -2498, -5127, 8731, -6169, -4267, -9409, 6304, 3962, -7678, -3410, 7984, -6947, -924, -4819, -5043, -2830, -4117, 4362, 6632, 7656, -5493, 5969, 4196, 2825, -913, -7277, -4030, 2350, -7356, 1919, -4783, 4809, 8660, -4384, 7052, 1986, -2667, 3630, -6793, -7771, 7060, 5070, 5551, 5283, -9052, -7847, -861, 7625, 9380, 3376, -5710, 1791, 9431, 5485, 6497, 7467, 1346, 1841, -4481, -7563, -5696, -7905, 7053, -8379, 9107, -8750, 458, 2488, 4663, -9071, 3507, 5110])
const pzrajfyDSog = new Uint8Array([5076, 7169, -5910, 1008, 4116, 6329, 9838, 5086, -526, 8911, 6646, 3938, 6489, 5026, 9721, 5926, 4557, 6282, 876, -786, -3479, 9098, -4977, 8795, 3986, 9907, 2842, 7159, 5929, -2410, 5738, 9871, 1929, 5641, 2394, -9590, -7764, -1489, 1290, -9721, 9624, 4118, 8851, -4228, -2304, 2335, 5653, 9254, -4083, 955, -1375, 1544, -3365, -2869, -2274, 4861, -9922, 2620, -4949, 2615, -8525, -1350, -6657, 955, -5836, -4402, -4841, 9902, 4988, 5496, 7751, -4215, 5400, -8081, 1066, 127, -6736, 4872, -4221, 8094, 2488, 6733, -585, -7218, 4608, 2738, -8686, -4105, 9088, -8900, -5173, -3304, 5837, 2457, -5227, 4651, 1942, -5382, 794, -8878, -98, 8500, 2698, 4798, 5194, 1773, 4775, 3697, -9256, -325, -1119, -4292, 1422, 2476, -499, -2773, -5566, 906, 8696, 9158, 6605, 2320, 4471, -399, 1516, -3989, -6546, -8951, -6998, 9000, 250, -9783, -2950, -7788, -8134, 6132, 8836, -8713, -7908, 2130, 4532, 6535, -3041, 1438, -638, 6714, -5132, -1134, 7780, 863, 9014, -8250, 7491, -9763, -2172, 3438, 3061, 7683, 6913, -2111, 8640, 5253, -2755, 5879, 5216, 6915, -3688, -5955, -4195, -8847, -2798, -949, 4417, 1609, 3780, -5842, -1140, -3312, -19, -8762, 2974, -7880, -146, -2871, 437, 3595, -2916, 5348, -4276, 5430, -4976, 6029, -3667, -1952, 2921, -6482, -2868, 6761, -468, 919, -9258, 8780, 5195, 6265, 8027, -2366, -1881, 6455, -9580, -3713, -8455, -7852, -8896, 6577, 2944, 6671, -48, 6731, -6178, 8461, 9781, 324, -1570, 2478, 5557, 5973, -651, -8837, -7819, 4947, 3530, -3972, -7224, -4945, 7387, 8180, -7472, 2331, 7059, 2498, -7288, -1342, 319, -5373, 3621, 630, -9007, -1370, -2378, 8978, 2490, 6473, -9526, 2582, -3349, 9817, 6058, -2768, 287, 81, 9553, 4111, 8943, 8800, -9248, -6002, -2246, 5099, 9995, 8288, 7468, 1973, 8633, -8333, 7476, 1357, 1925, -6180, 7090, -4603, 9859, -3169, 4638, 1860, -8929, -9648, -6886, 386, 8389, 3638, 7975, 9681, 1410, -4288, 6437, 4212, 2752, 7625, 4222, 4433, -8685, 1050, -3860, -5292, -3016, 2697, -754, -8856, -2919, -1818, -6145, -1392, -9255, 2153, 5562, -5766, -3344, 7284, 9645, 8500, 7839, -5705, -7698, -6579, -2535, 8598, 6119, -6168, -2685, 6495, -7304, 3351, -6674, -5048, -2810, 5288, 1, 7667, -6449, -4153, 1746, -7979, 3749, -8594, -4681, -7785, -1070, -2781, -5250, -644, -6087, -7934, 846, -8929, -5141, 3889, 8615, -9737, -3180, -3317, -4763, 6641, -2889, -646, 4710, 3449, 7869, 9774, 2773, -6641, 1195, 3761, -9184, -8151, -5514, -8195, -3219, -8406, 8006, -7099, 4120, -3683, -8295, -2645, 2486, -4614, 8833, -8566, -6848, -6411, -9162, -4258, -7857, -5500, 9673, 2044, -4896, 4618, -9529, -4101, -1721, -9984, 2774, 7412, -9422, 2241, -909, 3429, -8632, 4970, -505, -7519, -4478, 6328, 3299, -4027])
const uztYJE = new Uint8Array([-6962, -4626, -1233, 5381, 271, -2806, -8307, -2414, 837, -5395, 1097, -2802, 6388, -749, 6652, -237, 3959, 581, 8875, 4576, 9679, 6830, 4540, 4289, 4228, 7896, -7213, -9637, 3630, 6972, -6491, 282, -8575, -8782, 836, 2945, -1486, -4837, -1120, 30, 817, -5267, 8970, 2009, -1027, 2669, -8227, -5774, 4308, -4310, -8443, -7303, -218, 1764, 1142, -2536, 634, 6305, 779, 3775, -6663, -2319, -4985, 9925, 6755, -5724, 2548, -1431, -1557, 9506, -2274, -3969, -3429, -174, 781, -7260, -6422, 7249, -6032, 8104, -8, 3621, -1803, 2011, 9968, 6179, 5978, 1336, -2709, 7290, -7881, -7756, -8130, 1190, -8024, 7838, -5829, 5193, 3916, 2378, 7184, -6362, 3054, -8206, 5203, 2676, 5556, 4814, 4366, 2416, 3605, 5683, -8467, -5636, -9751, -7743, -1155, -4939, -5284, 4816, -7485, 8902, 6935, -5722, 8065, 1014, -3717, -9575, 7556, -4040, -6836, -5761, 3703, -5501, -8968, -8145, -8407, -7884, -4311, -6837, 2170, 6395, 4950, -2393, 5557, 4083, -3185, -3497, -3267, 943, 7080, -5174, 2150, 8581, -8877, 4758, -6424, -4292, 7233, 8350, 9325, 2068, 869, 4990, 9687, 4785, -8787, -8428, 1960, 5000, -7589, 5946, -1905, 309, -3638, -4048, -767, -9621, -4321, 8367, 8898, -5974, -3590, 5008, -4018, 2418, -947, 4629, 5214, -5691, 4684, 1753, -9844, -7988, -5423, 4954, -2606, -1190, 5428, -6392, -8312, 8045, -9468, 9211, 7532, -2539, -2941, 238, 7550, 9954, -8535, 4330, 7274, 7670, 5963, 4130, -7018, -1171, -1813, 2354, -7799, 802, -9937, -6728, 9563, 2, 1594, -6986, -5269, 1518, 268, 8213, -7671, 1871, -6160, 3683, 3186, 1995, 665, -6806, 6657, -4877, 3224, 8347, -243, 9933, -4103, 9556, 3491, -5704, 3800, -5191, 4920, 3649, 3337, -468, -3396, -9095, 2018, -6094, 4513, 2501, -6130, -1110, 2175, -7416, -6524, 1348, 8524, 5523, 8810, 21, -7396, 7609, 1691, -3816, -4572, -6030, -4397, -8417, -6525, 4446, -5774, 4612])
const GrMTqODSloIcqtqiT = new Uint8Array([-3037, 9862, 8949, -8581, 6778, -6061, 6206, -8003, 5921, -8871, 5238, 6343, -758, 9474, -2614, -6001, 1625, -7949, 4046, 3293, -1069, -4977, 5513, 4120, 6798, -6478, 4882, 4011, 5538, 9659, -8419, 1777, -537, -3840, -9674, 5387, 240, -2384, -5537, -3686, 6761, 5416, 2188, 5186, 1040, -3674, -5365, -3954, -5679, 9724, 1317, -1847, 7878, -1899, 793, -8864, 5455, -6215, 9164, 7485, -5883, -4115, -7854, 4038, -7045, 5194, 8000, -8616, 1637, 9755, -884, -8622, -5319, -9144, -2927, 9497, 9413, 2753, -48, 4763, -9787, -9768, -937, -3134, -1070, -4616, 5416, -976, 1719, 6829, -7940, -6787, -4426, 2671, -4215, 3047, -4849, -255, -9797, 4440, 5428, 758, 3597, -225, -3833, -645, 7289, 124, 7176, 886, 5360, 424, 995, 4058, 8887, 7073, -9359, -5180, 4992, 8256, 5254, 1543, -4612, -3720, 1006, 8078, 9557, 3512, 8751, -399, 3646, 7852, -8915, 2556, -7229, 6556, -5914, 8745, 2075, 9889, 3968, 2418, -4922, 4344, 2495, 3230, -4757, -6659, 5925, 2317, 1247, -3907, -2090, -7362, 8227, 9994, -484, -6551, -5023, -6970])
const zIcaOJ = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const chVdZt = new Int8Array([-2794, 1840, -1149, 318, -8091, 1059, -7338, 9580])
const uzWcVgjpSV = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const fzocLDvRhuACtNTBu = new Uint8Array([1502, -8144, 1943, -7851, -4368, -3454, -3204, -6089, -9066, -7903, 1399, -452, 8099, -7679, -3946, 3632, -2705, -2069, -1329, 6674, -5494, 2329, 9052, 6556, -480, 5304, 4315, -5417, 2519, -9690, -3173, -6015, 6895, 507, 5308, 7435, -7291, 3812, -9650, -4846, -7311, 8940, 9552, -1669, 2836, 5759, 4458, 9119, -7579, 3387, -5260, 7292, 3729, -6640, -1745, -5319, 787, 549, -2048, -8445, 2486, -2714, -6250, -8330, 5404, 4783, -3401, 4003, 6103, -4234, 8253, 8973, -9770, -4265, -8439, -2612, 4533, -3491, 2741, 1489, 5960, 741, 6545, -8467, 6664, 1444, -6329, 8369, -712, -5278, -6230, -5114, 3784, -5029, 577, -1628, -6047, 5176, 4551, -7110, 1080, -4773, 2534, 8828, -4440, 1213, 8282, 3526, -3691, 483, 9413, -4435, -7390, 6485, 1214, -3440, 9231, 9986, 6304, -5205, 4174, -6553, 3077, -3983, -4524, 3195, -3157, -6762, -7645, -5042, 3575, 5478, -1850, -9105, -5591, -2714, 2554, 3485, -1498, -1454, -2819, -2826, -6119, -6916, 6267, 9553, 2071, -9858, -4114, 9592, 6951, 7375, 6822, -6786, 5424, 2549, -5004, 1315, -7100, -9984, 4692, 3603, 8462, -9591, -9351, -5287, -9588, -9726, 6370, -1756, 8159, -1927, 8167, 2773, 9622, -914, 3437, 110, -4121, -1759, 9055, 6700, 3422, -967, 7261, -1374, 9520, -8339, -9627, -5560, 2398, 338, 4009, 168, 3657, 9924, 8989, 3098, 8784, -2542, -5280, -2430, -1049, -8868, -6869, -339, -2231, 6933, 5205, 3747, -7296, 1189, -6288, 6198, 6037, 2201, -7668, -8938, 1352, -486, -4775, -7348, -978, -515, -5013, 9420, 3181, -6960, -8210, 4613, -8776, 4111, -9680, 1405, 6837, -6729, 7171, -7251, -2347, 5217, 1246, 5055, -7439, 5691, 845, 5952, 2555, 5516, -8104, -4051, -1187, 8266, 4191, -9090, 9368, 3222, -7513, 6979, -5112, 726, 8349, -9407, 6766, 3065, 84, 566, -2858, 8812, 1127, -3848, 6824, 2138, -2500, -8501, 9797, 1698, -3951, 4394, 4181, -4156, -5786, -9718, -438, 7684, 9501, 6156, -3423, 2444, 1790, 707, 1872, -6971, 535, 3365, -6904, -701, -5913, 4069, 8617, 9431, 1089, 5303, 8949, -9630, 9610, 6677, -3189, 219, 9340, 7457, -6909, -5309, 6811, 7371, -6925, -9357, 4505, 1129, 114, -2719, -1571, 9718, -612, -5751, -6308, 4621, -2549, 4622, 7566, -6212, 1554, 3271, -7136, -5707, -8790, 7081, 8867, -8701, 7835, -6788, -4783, 5781, 2434, 5973, -686, -1899, -4296, -6541, -4220, -1110, -9978, -5874, 8326, -4798, 7521, -7379, 5595, -6966, -2252, -2451, -9641, 2507, 4619, -84, -2291, 52, 4919, 9308, -8880, 3807, 3454, 6049, 1381, 8014, 8081, 8414, -8693, -3128, -4968, 2192, 9629, 9625, 3368, 4905, -4575, -5531, 9592, 6872, 8105, 8067, 5605, 4438, -9453, -8147, -314, 8677, 1401, -3144, -1128, -2939, 995, -5251, -4823, -1908, -2067, -7247, -9939, 5346, -2500, 1720, -1368, -9700, -280, 7685, 6795, 1369, -1997, -5301, 7258, -8976, 4568, 3006, -2950, -5355, -8430, -5432, 6798, -9573, -8681, -3704, 7569, -773, -8377, 4512, 5645, 3302])
const JCkWufM = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const TRQXcBEwXAQyYmy = new Int8Array([-5475, 1006, -9433, 1617, 8046, 4163, -3711, -175, 5088, 9659, -1648, -1050, -4018, 5061, -3143, 6210, -4721, -6877, -4282, -2832, 1770, 948, -8791, 1320, 7094, -2918, -4546, 5793, -4874, 4381, 5260, 3374, -300, -9414, 4213, -2462, 1198, -5015, -9617, -5600, -7066, 2952, -5679, 9496, -2804, -7339, -9315, 5218, 6473, 7594, -275, -4191, -485, -1103, 9997, -3248, 9758, 5209, -7869, 5509, -5854, -3365, 2014, 1264, 8797, 6079, -1002, 4273, 1365, -4517, 1498, 5045, -2646, -4006, -7040, -9859, -522, -9041, -7069, 6431, -7226, -3774, 8418, -8941, -8128, 8799, -2142, -1132, 8678, 585, -6756, -1068, -8899, -3920, 6753, -8052, -7437, 4552, 6047, -2867, -3269, 2769, 8959, 7785, 7292, 7063, 7779, 4016, 948, 7953, -5700, -6965, 3177, 3048, 3755, -6769, -7265, 7352, -2934, 4560, -5089, 6656, -3884, 289, -8203, -5558, 4346, 7958, 8470, 2564, 3898, 8825, -2725, -444, 5583, 3341, 680, 9757, -4780, -8115, -9964, -9207, 1822, 9983, -4364, -3737, 3069, 5941, 5681, -2767, 8054, -4627, -6052, 3371, 8691, 4789, 8512, -3342, -9232, 7541, 9824, -9492, -5163, -5216, -846, 8080, 2971, -8050, -2907, -8970, -8342, -4052, -5054, 6832, -700, 5964, 415, -9343, 4214, 1469, 1693, 820, 654, -3724, -1038, -8126, -1314, -8534, -8511, 8671, 4719, 6370, 9558, -9983, 1357, 6867, -4517, 1248, -9258, 667, 7125, 9916, -930, 3059, 9453, 2281, 7473, -89, -1083, -8428, 9334, 8993, 1317, 4981, -2681, -5751, 4857, 3936, -2164, -3019, 9231, 9244, 2066, 8558, -2917, 5364, 201, 9555, 6767, 6584, 4360, 2950, -1749, 5520, 2418, 8112, -1463, 7129, -2881, 9478, 4313, 6707, 6094, -9657, 6573, 5519, -311, -7257, -8759, 7538, 4679, 6653, 7084, 3710, 4539, 4167, 6106, 5834, 9098, 3116, -7376, -1435, 2717, -4151, -6770, 7575, 2231, -5000, 1760, 4175, 4193, 3587, -6537, 6440, -367, 4459, -367, -1037, 4810, 9224, 3866, -4190, -5001, 6220, -3036, -1978, 9854, 924, 8987, 2100, -3806, -4200, -7997, 35, 5955, -769, 335, 1851, 279, 9813, -3536, -1734, 8152, -1183, 8544, -2417, 2441, -3899, -7341, 7508, 8435, 2529, -9892, -7882, 3390, -5438, 7711, 782, 1203, 2427, -6305, 3325, -6659, 1585, -4160, 4564, 9070, -2260, -3876, -7941, 3705, -6984, 9878, 2695, -253, 3104, -7707, 4260, -4121, 6763, 2995, -7316, 4009, -402, -8469, 7338, -3835, 5045, 1895, 4639, -5545, -3178, -6640, 9665, 5567, 3239, -4343, -6993, 6920, -6385, 4702, -9410, 6438, 7592, 5001, -2134, 6886, -7876])
const TzdrCakVxJSPtca = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const oSkESW = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const GJBptwLbpfRWKkGXyU = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const cosdCZAHSQFjLTARht = loadShader('../WebGlitch/rsrcs/shaders/compute/1/compute.wgsl');

async function main() {
    const aCjNGUrrjfIuB = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const HtRpyNeV = await aCjNGUrrjfIuB.requestDevice();
    const QKhMibSVDq = HtRpyNeV.createCommandEncoder({
        label: "MojpYHPgA"
    });
    const eXSOarnevNAXWJw = QKhMibSVDq.beginComputePass({
        label: "pWQpgidiRpMZZiWo"
    });
    const RaRatWxCEl = HtRpyNeV.createShaderModule({
        label: "compute",
        code: cosdCZAHSQFjLTARht
    });
    const tMhEFjQgjdSCj = HtRpyNeV.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: RaRatWxCEl
        },
        label: "dEoyZpOdDxvQo",
        layout: "auto"
    });
    const ESfLxTwBQtEvVdEKBy = HtRpyNeV.createBuffer({
        label: "hDtVJbPnjnIrCrsxOdye",
        mappedAtCreation: false,
        size: 32,
        usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST | GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.INDIRECT
    });
    const lxEhHxhJiryYDEcsXB = HtRpyNeV.queue
    lxEhHxhJiryYDEcsXB.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, GJBptwLbpfRWKkGXyU);
    const XIyqbE = HtRpyNeV.createBindGroup({
        label: "tMhEFjQgjdSCj.bindGroup",
        layout: tMhEFjQgjdSCj.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    eXSOarnevNAXWJw.setBindGroup(0, XIyqbE);
    eXSOarnevNAXWJw.end();
    const NuoaF = QKhMibSVDq.finish();
    lxEhHxhJiryYDEcsXB.submit([NuoaF]);
    const IgMpnh = HtRpyNeV.createQuerySet({
        count: 1484,
        label: "ocvuHDTQUujzxlx",
        type: "occlusion"
    });
    const DMAJwgzlk = IgMpnh.count
    const IPixjXcrmPTIutnlVO = aCjNGUrrjfIuB.isFallbackAdapter
    const bsuvDsYOdW = HtRpyNeV.createCommandEncoder({
        label: "CgrtaLxp"
    });
    const yyUBHa = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "bgra8unorm",
        label: "qruITWOQsffpa",
        size: {
            width: 3390,
            height: 187,
            depthOrArrayLayers: 47
        },
        mipLevelCount: 3,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["bgra8unorm"]
    });
    const IqLZydZImZzFI = yyUBHa.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "bgra8unorm",
        label: "yozmUTBsHPo"
    });
    const nUKZnTNWZnbkNTxxAV = bsuvDsYOdW.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.35292788469072445,
                g: 0.8187863294144957,
                b: 0.7924499373627587,
                a: 1.7495089153305574
            },
            loadOp: "load",
            storeOp: "store",
            view: IqLZydZImZzFI
        }],
        label: "TsIdPFPEZRFdnQcQI",
        maxDrawCount: 289673401,
        occlusionQuerySet: IgMpnh
    });
    const drIWnFYAJRHavGqd = HtRpyNeV.createCommandEncoder({
        label: "vdKrGVGUDfoilXyB"
    });
    const yoTxJiHDfeFnbeR = drIWnFYAJRHavGqd.beginComputePass({
        label: "AlExKY"
    });
    const ELIJUMwecpkwxgiHsY = yoTxJiHDfeFnbeR.label
    yoTxJiHDfeFnbeR.end();
    const gFWClaK = HtRpyNeV.createShaderModule({
        label: "fragment",
        code: oSkESW
    });
    const HBuEZU = HtRpyNeV.createShaderModule({
        label: "vertex",
        code: TzdrCakVxJSPtca
    });
    const eIojbEg = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: gFWClaK,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "one-minus-dst-alpha",
                        srcFactor: "one-minus-dst"
                    }
                },
                format: "rg8unorm",
                writeMask: GPUColorWrite.RED | GPUColorWrite.ALPHA
            }]
        },
        label: "sTEbQsdm",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: HBuEZU
        }
    });
    nUKZnTNWZnbkNTxxAV.end();
    const RxAwXLSTcs = drIWnFYAJRHavGqd.finish();
    const sdHlzjHilCpYbu = bsuvDsYOdW.beginComputePass({
        label: "sDXruSOmrjV"
    });
    const kuFeoRq = sdHlzjHilCpYbu.label
    const nusVbBIeetrOwlcP = HtRpyNeV.createCommandEncoder({
        label: "VmSJIQODKX"
    });
    const SwVXHziKv = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r8unorm",
        label: "HcKppNPHoYEBYlnmOD",
        size: {
            width: 791,
            height: 735,
            depthOrArrayLayers: 23
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["r8unorm"]
    });
    const geQTjxnXzExrxCnyho = SwVXHziKv.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 4,
        format: "r8unorm",
        label: "KonYJNioFByQ"
    });
    const IijdAhrIHFbDCF = nusVbBIeetrOwlcP.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.12053616552118207,
                g: 0.8878624288962307,
                b: 1.9063747001476343,
                a: 0.5153551295268173
            },
            loadOp: "load",
            storeOp: "store",
            view: geQTjxnXzExrxCnyho,
            depthSlice: 0
        }],
        label: "AKBashioYDR",
        maxDrawCount: 4233277124,
        occlusionQuerySet: IgMpnh
    });
    const bOxwFCC = HtRpyNeV.createBuffer({
        label: "YlFJjqOQkTelfmbOrG",
        mappedAtCreation: false,
        size: 93434224,
        usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_SRC
    });
    IijdAhrIHFbDCF.setVertexBuffer(0, bOxwFCC);
    const vSbyz = tMhEFjQgjdSCj.label
    IijdAhrIHFbDCF.end();
    const yJJVFGl = IgMpnh.label
    const FHfnTITILeCboSU = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgba16float",
        label: "YIMEPUYiuofO",
        size: {
            width: 3129,
            height: 3269,
            depthOrArrayLayers: 19
        },
        mipLevelCount: 8,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba16float"]
    });
    const QfMeiNgNIE = FHfnTITILeCboSU.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 4,
        format: "rgba16float",
        label: "BAADURVAqgLtsW"
    });
    const HshpeSyqcAcdvtA = nusVbBIeetrOwlcP.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.9282600113147277,
                g: 0.08199552872971871,
                b: 1.5531088195087035,
                a: 0.6505192812794514
            },
            loadOp: "clear",
            storeOp: "store",
            view: QfMeiNgNIE
        }],
        label: "aBPvOEgtBFXQptBc",
        maxDrawCount: 3496283800,
        occlusionQuerySet: IgMpnh
    });
    const KSXOlxNskpZJE = HshpeSyqcAcdvtA.label
    const QfUWWXP = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: gFWClaK,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "src",
                        srcFactor: "one-minus-dst"
                    }
                },
                format: "rgba16float",
                writeMask: GPUColorWrite.RED | GPUColorWrite.ALL
            }]
        },
        label: "PSYSmY",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "back",
            frontFace: "ccw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: HBuEZU
        }
    });
    HshpeSyqcAcdvtA.setPipeline(QfUWWXP);
    sdHlzjHilCpYbu.end();
    lxEhHxhJiryYDEcsXB.writeBuffer(ESfLxTwBQtEvVdEKBy, 4, TRQXcBEwXAQyYmy);
    HshpeSyqcAcdvtA.setPipeline(QfUWWXP);
    const rSdKOuqiHZeHeWS = HtRpyNeV.createShaderModule({
        label: "vertex",
        code: JCkWufM
    });
    const SSPEm = HtRpyNeV.createBuffer({
        label: "trqGHOJrQwwk",
        mappedAtCreation: true,
        size: 98706332,
        usage: GPUBufferUsage.MAP_READ
    });
    lxEhHxhJiryYDEcsXB.submit([RxAwXLSTcs]);
    const vDforMdBByAoZDJxg = HtRpyNeV.createBuffer({
        label: "OXcdYZJhUv",
        mappedAtCreation: false,
        size: 237810852,
        usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST
    });
    const jpuuZcvnvcOqO = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: gFWClaK,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "bgra8unorm-srgb",
                writeMask: GPUColorWrite.ALPHA
            }]
        },
        label: "UMxqWjUcXCG",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "cw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: rSdKOuqiHZeHeWS
        }
    });
    const RSMmr = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "r8unorm",
        label: "aRJIzDOgFWWrZEeTQiQO",
        size: {
            width: 1869,
            height: 285,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["r8unorm"]
    });
    const ZAQSeZuLdhpa = RSMmr.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r8unorm",
        label: "QbNfCXIzeX"
    });
    const gygssrCbcEoqleq = bsuvDsYOdW.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.14265820482719027,
                g: 1.3154082969991123,
                b: 0.44427810481523244,
                a: 0.11176568470435555
            },
            loadOp: "clear",
            storeOp: "store",
            view: ZAQSeZuLdhpa
        }],
        label: "eYsozJKrRZBeWzlmq",
        maxDrawCount: 3477486278,
        occlusionQuerySet: IgMpnh
    });
    const rzpalkiTp = nusVbBIeetrOwlcP.label
    const ZSLIlIsaDvbi = HtRpyNeV.label
    const qoPxrNdShsTOHq = navigator.gpu.wgslLanguageFeatures
    const dRctJDqXUfJ = navigator.gpu.wgslLanguageFeatures
    const rtkVrrJ = aCjNGUrrjfIuB.features
    gygssrCbcEoqleq.setVertexBuffer(0, vDforMdBByAoZDJxg);
    const kViPRdhsaDGsiQbDw = HtRpyNeV.limits
    HshpeSyqcAcdvtA.end();
    const dCCBgBuD = nusVbBIeetrOwlcP.beginComputePass({
        label: "CeCOKTecgFxK"
    });
    dCCBgBuD.end();
    const CnodBrHn = HtRpyNeV.queue
    const VQapoLYnexllMC = navigator.gpu.wgslLanguageFeatures
    const KYZblwNiIcA = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: gFWClaK,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "src-alpha",
                        srcFactor: "dst-alpha"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "r8unorm",
                writeMask: GPUColorWrite.GREEN | GPUColorWrite.BLUE | GPUColorWrite.RED
            }]
        },
        label: "VTOAPTOOysYNKWY",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "back",
            frontFace: "ccw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: HBuEZU
        }
    });
    gygssrCbcEoqleq.setPipeline(KYZblwNiIcA);
    gygssrCbcEoqleq.draw(10);
    lxEhHxhJiryYDEcsXB.writeBuffer(ESfLxTwBQtEvVdEKBy, 12, fzocLDvRhuACtNTBu);
    const sgZfKm = jpuuZcvnvcOqO.label
    const VfFMMkGHuqWAcP = aCjNGUrrjfIuB.info
    CnodBrHn.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, uzWcVgjpSV);
    const wxnRHcmwdfreH = HtRpyNeV.createBindGroup({
        label: "tMhEFjQgjdSCj.bindGroup",
        layout: tMhEFjQgjdSCj.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    const WFyxkOphB = HtRpyNeV.queue
    const ncHXKiZBRSuZhXEiFJpR = HtRpyNeV.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: RaRatWxCEl
        },
        label: "zxRBSHwPOQuU",
        layout: "auto"
    });
    const VoJjJJkr = ZAQSeZuLdhpa.label
    const VvFXto = nusVbBIeetrOwlcP.finish();
    WFyxkOphB.submit([VvFXto]);
    gygssrCbcEoqleq.end();
    const zTMMdgdj = bsuvDsYOdW.finish();
    const mxuPHwpXyWvWDfSpcw = HtRpyNeV.label
    const nCvWnuEFChvqEodNJ = HtRpyNeV.createQuerySet({
        count: 911,
        label: "eDDGoTwWKAQRXNwiMc",
        type: "occlusion"
    });
    const PHedbRavYewypMgp = HtRpyNeV.createBuffer({
        label: "wxOCqcdXQkRtaj",
        mappedAtCreation: false,
        size: 52442292,
        usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.UNIFORM
    });
    const azqfjeZ = aCjNGUrrjfIuB.features
    const RRapqo = HtRpyNeV.createQuerySet({
        count: 272,
        label: "MOBOEZztDwEsVGY",
        type: "occlusion"
    });
    const YUTHUAOvwidCsdB = HtRpyNeV.createCommandEncoder({
        label: "renlaLpqDnLwbZoRK"
    });
    const afFjmPkiapjsyqw = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm-srgb",
        label: "EzdolKG",
        size: {
            width: 468,
            height: 709,
            depthOrArrayLayers: 17
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba8unorm"]
    });
    const HEYhZEjFXaWGA = afFjmPkiapjsyqw.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 2,
        format: "rgba8unorm-srgb",
        label: "btXoPQzhMqYME"
    });
    const MwTVDClyr = YUTHUAOvwidCsdB.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.18160379515632,
                g: 1.1837693265308267,
                b: 0.10090856308028706,
                a: 0.21466006082224331
            },
            loadOp: "clear",
            storeOp: "discard",
            view: HEYhZEjFXaWGA,
            depthSlice: 2
        }],
        label: "tJnKT",
        maxDrawCount: 2265654940,
        occlusionQuerySet: nCvWnuEFChvqEodNJ
    });
    const LMfTeTnoVRhwpFR = nCvWnuEFChvqEodNJ.type
    const ATxLbIiSPmDOrGheqCk = HtRpyNeV.queue
    const DFcKvdqpx = HtRpyNeV.createCommandEncoder({
        label: "qVqPmrnwFCxCdCyu"
    });
    const EYTsW = DFcKvdqpx.beginComputePass({
        label: "SayAjmWDNsbAQGFrNniA"
    });
    EYTsW.setPipeline(ncHXKiZBRSuZhXEiFJpR);
    const oOeyCdBjWPbLmZtyxno = tMhEFjQgjdSCj.label
    const ZLjzABzRhoBAkER = MwTVDClyr.label
    const Bfrcl = nCvWnuEFChvqEodNJ.count
    WFyxkOphB.writeBuffer(ESfLxTwBQtEvVdEKBy, 32, chVdZt);
    const XlrxWIhNDSY = HtRpyNeV.label
    ATxLbIiSPmDOrGheqCk.submit([zTMMdgdj]);
    MwTVDClyr.end();
    const wHcGYeWMGCax = YUTHUAOvwidCsdB.finish();
    const fDHdQxklERnaa = IgMpnh.label
    const SHSdXvfqKiPdAP = HtRpyNeV.createBuffer({
        label: "lRkpQQmaduiVgWpMqrK",
        mappedAtCreation: true,
        size: 121287620,
        usage: GPUBufferUsage.QUERY_RESOLVE
    });
    const NczhNMYTyfKBxOfyFYC = tMhEFjQgjdSCj.label
    const oADNZHW = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8uint",
        label: "pARAxfpOYbIVlhv",
        size: {
            width: 626,
            height: 681,
            depthOrArrayLayers: 7
        },
        mipLevelCount: 6,
        usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgba8uint"]
    });
    const NsbydxGpMllTJnmVe = DFcKvdqpx.label
    const TrCJY = aCjNGUrrjfIuB.info
    lxEhHxhJiryYDEcsXB.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, zIcaOJ);
    const uDzrXPasQ = HtRpyNeV.createBindGroup({
        label: "ncHXKiZBRSuZhXEiFJpR.bindGroup",
        layout: ncHXKiZBRSuZhXEiFJpR.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    EYTsW.setBindGroup(0, uDzrXPasQ);
    const vVJybowtDYXlFiof = HtRpyNeV.label
    const ouoUyNwFl = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: gFWClaK,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rgb10a2unorm",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.RED | GPUColorWrite.ALL
            }]
        },
        label: "sUruQxLWVWvqrij",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "back",
            frontFace: "ccw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: rSdKOuqiHZeHeWS
        }
    });
    const TSRjKVZjn = RRapqo.type
    const TjITkSsl = HtRpyNeV.createCommandEncoder({
        label: "QEBHmAzzylurErOO"
    });
    const GiiKBsXDGntY = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgba16float",
        label: "AzIIWujHRFmMHjVG",
        size: {
            width: 3260,
            height: 3547,
            depthOrArrayLayers: 23
        },
        mipLevelCount: 10,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgba16float"]
    });
    const XYvnpYilCX = GiiKBsXDGntY.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 9,
        format: "rgba16float",
        label: "oSxAGil"
    });
    const RRYLfnLdzx = TjITkSsl.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.6318145065720397,
                g: 1.8189651151200188,
                b: 0.8895168669698323,
                a: 1.4539425837404247
            },
            loadOp: "clear",
            storeOp: "store",
            view: XYvnpYilCX
        }],
        label: "Anvmokc",
        maxDrawCount: 1271784446,
        occlusionQuerySet: nCvWnuEFChvqEodNJ
    });
    const WkyjTfijE = RRYLfnLdzx.label
    CnodBrHn.submit([wHcGYeWMGCax]);
    const ZvHTwaggVtcL = IgMpnh.type
    CnodBrHn.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, GrMTqODSloIcqtqiT);
    const IQwOjqJiEnAwvDtCIrz = DFcKvdqpx.label
    EYTsW.setBindGroup(0, uDzrXPasQ);
    EYTsW.setPipeline(tMhEFjQgjdSCj);
    lxEhHxhJiryYDEcsXB.writeBuffer(vDforMdBByAoZDJxg, 1884328, uztYJE);
    RRYLfnLdzx.setPipeline(QfUWWXP);
    ATxLbIiSPmDOrGheqCk.writeBuffer(vDforMdBByAoZDJxg, 179098652, pzrajfyDSog);
    RRYLfnLdzx.setVertexBuffer(0, vDforMdBByAoZDJxg);
    const SuJMuBbCRDhUFoTVSCOe = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: gFWClaK,
            targets: [{
                blend: {
                    alpha: {
                        operation: "add",
                        dstFactor: "src-alpha-saturated",
                        srcFactor: "src-alpha-saturated"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rgba16float",
                writeMask: GPUColorWrite.GREEN | GPUColorWrite.RED
            }]
        },
        label: "vXFFouKZgvTlQ",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: HBuEZU
        }
    });
    RRYLfnLdzx.setVertexBuffer(0, vDforMdBByAoZDJxg);
    const LSUFNMTcx = HtRpyNeV.createBuffer({
        label: "uqqrHLA",
        mappedAtCreation: false,
        size: 33111260,
        usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST | GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.INDIRECT | GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_SRC
    });
    const JKOEjOUgkXYHJIK = RRYLfnLdzx.label
    const rmkVUwGDhsoAIcRqOq = ncHXKiZBRSuZhXEiFJpR.getBindGroupLayout(0);
    const YXIqAGtg = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    RRYLfnLdzx.draw(4);
    RRYLfnLdzx.end();
    const xYtvbUtUZe = TjITkSsl.finish();
    const DeHibazYWGYROu = geQTjxnXzExrxCnyho.label
    const ufMispXT = HtRpyNeV.createCommandEncoder({
        label: "BMDLIlZtlLxTiC"
    });
    WFyxkOphB.writeBuffer(vDforMdBByAoZDJxg, 133810740, NRwZXwlniXZiOLUlgQcj);
    EYTsW.setBindGroup(0, XIyqbE);
    EYTsW.setPipeline(ncHXKiZBRSuZhXEiFJpR);
    EYTsW.setBindGroup(0, uDzrXPasQ);
    EYTsW.dispatchWorkgroups(43, 245, 20);
    const rBTYGjbKEwLFRmUcIF = HtRpyNeV.createQuerySet({
        count: 3970,
        label: "xHtMgiEbUncaZG",
        type: "occlusion"
    });
    const FIaDHDHjaa = ncHXKiZBRSuZhXEiFJpR.label
    const pkhNySukTQMNdId = ncHXKiZBRSuZhXEiFJpR.getBindGroupLayout(0);
    const nvYMgSNvPeYKSgWdQr = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg16float",
        label: "xOMYGech",
        size: {
            width: 599,
            height: 724,
            depthOrArrayLayers: 11
        },
        mipLevelCount: 10,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rg16float"]
    });
    const DbnrXAcMZadDfawMS = nvYMgSNvPeYKSgWdQr.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 3,
        format: "rg16float",
        label: "iWdgBDdIEMg"
    });
    const kokUpCYKvatlXEogwtGE = ufMispXT.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.6791656919600053,
                g: 1.1173084529868291,
                b: 1.404358510846853,
                a: 0.33130777071927753
            },
            loadOp: "load",
            storeOp: "discard",
            view: DbnrXAcMZadDfawMS,
            depthSlice: 0
        }],
        label: "dSHmhsjIeYyPHCXBNaq",
        maxDrawCount: 2901646375,
        occlusionQuerySet: IgMpnh
    });
    kokUpCYKvatlXEogwtGE.end();
    lxEhHxhJiryYDEcsXB.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, Avnxdpj);
    const yaEkKHK = HtRpyNeV.createBindGroup({
        label: "ncHXKiZBRSuZhXEiFJpR.bindGroup",
        layout: ncHXKiZBRSuZhXEiFJpR.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    EYTsW.setBindGroup(0, uDzrXPasQ);
    EYTsW.setPipeline(tMhEFjQgjdSCj);
    EYTsW.setBindGroup(0, XIyqbE);
    EYTsW.dispatchWorkgroups(127, 55, 48);
    const wCUzOZoGKBsnggaRgFA = await navigator.gpu.getPreferredCanvasFormat();
    const GREFKXk = ufMispXT.label
    lxEhHxhJiryYDEcsXB.submit([xYtvbUtUZe]);
    const GMVZcOWAPM = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm",
        label: "dTJwdX",
        size: {
            width: 699,
            height: 919,
            depthOrArrayLayers: 23
        },
        mipLevelCount: 9,
        usage: GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const pFurV = navigator.gpu.wgslLanguageFeatures
    const DzuwVmCardkqGDN = CnodBrHn.label
    const cMdDojVgDFsQDZI = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm",
        label: "IAWOzXVVpKJE",
        size: {
            width: 773,
            height: 285,
            depthOrArrayLayers: 52
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.COPY_SRC | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const kwVWXUoneURYcdOSIH = cMdDojVgDFsQDZI.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba8unorm-srgb",
        label: "uCFircMYZukpYTHp"
    });
    const JsmotdHBEFGi = ufMispXT.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.852236318414388,
                g: 0.4431287837254738,
                b: 1.8808901797355675,
                a: 1.920912475605213
            },
            loadOp: "load",
            storeOp: "store",
            view: kwVWXUoneURYcdOSIH,
            depthSlice: 45
        }],
        label: "oYliCqYJtjIHLUdSolp",
        maxDrawCount: 2158045196,
        occlusionQuerySet: IgMpnh
    });
    JsmotdHBEFGi.setVertexBuffer(0, bOxwFCC);
    EYTsW.setBindGroup(0, wxnRHcmwdfreH);
    const kezCyOSYCHSdSlm = aCjNGUrrjfIuB.info
    const SyFqciiTHAWOm = ufMispXT.label
    const UwCPSJFLPnksJgvtK = aCjNGUrrjfIuB.limits
    JsmotdHBEFGi.end();
    const hGhPDTZhspMGUQU = aCjNGUrrjfIuB.info
    const LLdGqnpvF = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r16float",
        label: "DrVLUUEOwizfO",
        size: {
            width: 606,
            height: 494,
            depthOrArrayLayers: 35
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["r16float"]
    });
    const yXvzeAh = LLdGqnpvF.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r16float",
        label: "hMSsCwah"
    });
    const rsbDBKX = ufMispXT.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.6125470862393669,
                g: 0.3843935601251691,
                b: 0.13156775999922887,
                a: 0.6786080631443427
            },
            loadOp: "clear",
            storeOp: "discard",
            view: yXvzeAh,
            depthSlice: 34
        }],
        label: "jIFfvdRhZnUhLpf",
        maxDrawCount: 1492424823,
        occlusionQuerySet: rBTYGjbKEwLFRmUcIF
    });
    const pZCOg = rsbDBKX.label
    const ixciCPexgZseQ = YXIqAGtg.isFallbackAdapter
    const elyOoEggTgImBqijL = await navigator.gpu.getPreferredCanvasFormat();
    rsbDBKX.end();
    const HeweW = await navigator.gpu.getPreferredCanvasFormat();
    const HOONWCQ = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const VPAtKXqcoWYb = HtRpyNeV.queue
    const YXBenDNSQxQB = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba16float",
        label: "QTdzbASOHrjvNkXbxB",
        size: {
            width: 943,
            height: 453,
            depthOrArrayLayers: 5
        },
        mipLevelCount: 2,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rgba16float"]
    });
    const mEHIGOZVgIIhTHKUgCXi = YXBenDNSQxQB.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "rgba16float",
        label: "LNCSB"
    });
    const OzAWEYyWto = ufMispXT.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.8109803298255873,
                g: 1.9134541462739598,
                b: 1.0459964033137965,
                a: 0.7596317074950807
            },
            loadOp: "load",
            storeOp: "store",
            view: mEHIGOZVgIIhTHKUgCXi,
            depthSlice: 0
        }],
        label: "EpGqUfqBjBIAuSXcL",
        maxDrawCount: 1174744664,
        occlusionQuerySet: RRapqo
    });
    OzAWEYyWto.end();
    const LFVmNSiD = aCjNGUrrjfIuB.isFallbackAdapter
    const PXEKbVlFUPDUQlRJIvYm = aCjNGUrrjfIuB.isFallbackAdapter
    const KjIfyjAE = navigator.gpu.wgslLanguageFeatures
    const LevFUpXRThQHnC = ouoUyNwFl.label
    const EJqjwJXJIC = ATxLbIiSPmDOrGheqCk.label
    const putfRHLKjlly = oADNZHW.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 6,
        baseMipLevel: 0,
        format: "rgba8uint",
        label: "DEVbcUfvwYWrmB"
    });
    ATxLbIiSPmDOrGheqCk.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, gmYTEUHBMdz);
    const erhgrrdSiTr = HtRpyNeV.createBindGroup({
        label: "ncHXKiZBRSuZhXEiFJpR.bindGroup",
        layout: ncHXKiZBRSuZhXEiFJpR.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    VPAtKXqcoWYb.writeBuffer(LSUFNMTcx, 21436828, RVqivrWychXS);
    const QsXHqLukoB = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "bgra8unorm",
        label: "EAfOuOYhZaFwddgxl",
        size: {
            width: 1327,
            height: 1457,
            depthOrArrayLayers: 27
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["bgra8unorm"]
    });
    const ruWgxgNngKrrClpxqF = QsXHqLukoB.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 3,
        format: "bgra8unorm",
        label: "ZSIeedeIqU"
    });
    const xSwsFbyjfukKTWWkFm = ufMispXT.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.038970865220769,
                g: 1.3965671692504602,
                b: 1.156220231734812,
                a: 0.37721923428048854
            },
            loadOp: "clear",
            storeOp: "store",
            view: ruWgxgNngKrrClpxqF
        }],
        label: "xDFCil",
        maxDrawCount: 1251231650,
        occlusionQuerySet: RRapqo
    });
    xSwsFbyjfukKTWWkFm.end();
    const rOTiPpctRODVgaK = aCjNGUrrjfIuB.features
    const PTjfPmOJmChvOoE = HtRpyNeV.features
    const zichmD = EYTsW.label
    const LIgsbsGVKFNp = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm-srgb",
        label: "VsFoOlhrquItHtOzs",
        size: {
            width: 2952,
            height: 1711,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["bgra8unorm"]
    });
    const AGOMDxMeNKmtPsuQ = lxEhHxhJiryYDEcsXB.label
    const XWhHKEQQPBMn = nCvWnuEFChvqEodNJ.type
    ATxLbIiSPmDOrGheqCk.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, fNKQae);
    const pvrDMyKLkPHKlgq = HtRpyNeV.createBindGroup({
        label: "tMhEFjQgjdSCj.bindGroup",
        layout: tMhEFjQgjdSCj.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    const ADyroNPcFVnGJNyJNDUF = HtRpyNeV.createShaderModule({
        label: "compute",
        code: McbFLBfvolMf
    });
    const akLTHix = HtRpyNeV.createBuffer({
        label: "BHHll",
        mappedAtCreation: false,
        size: 108859496,
        usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.INDEX | GPUBufferUsage.VERTEX
    });
    lxEhHxhJiryYDEcsXB.writeBuffer(ESfLxTwBQtEvVdEKBy, 24, iWWrEGzfJeZt);
    const aAxGkaDdXDy = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "bgra8unorm",
        label: "qupiKkwJEqEmJDEF",
        size: {
            width: 714,
            height: 921,
            depthOrArrayLayers: 13
        },
        mipLevelCount: 3,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["bgra8unorm-srgb"]
    });
    const ddYzhexrnAbJtaNGxAi = aAxGkaDdXDy.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 2,
        format: "bgra8unorm-srgb",
        label: "iWfoUxndxkVxOOvffjuL"
    });
    const UNzvc = ufMispXT.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.5561667489172837,
                g: 1.0651454685101314,
                b: 1.8876224472118206,
                a: 0.1132669853019026
            },
            loadOp: "clear",
            storeOp: "discard",
            view: ddYzhexrnAbJtaNGxAi,
            depthSlice: 0
        }],
        label: "JBOTLvJMYNoFgzee",
        maxDrawCount: 1987666810,
        occlusionQuerySet: nCvWnuEFChvqEodNJ
    });
    UNzvc.setVertexBuffer(0, akLTHix);
    VPAtKXqcoWYb.writeBuffer(ESfLxTwBQtEvVdEKBy, 20, KMvIWUoB);
    const vFSWKJrWdECgJfftKgyL = YXIqAGtg.isFallbackAdapter
    UNzvc.setVertexBuffer(0, bOxwFCC);
    const JWQmSYmTxs = aCjNGUrrjfIuB.limits
    const dYzKdkxAenOBDoFNiOBo = HtRpyNeV.queue
    UNzvc.end();
    const pCoTPeZRsLF = HtRpyNeV.label
    const OoPBIENxcvSNXHm = HtRpyNeV.createBuffer({
        label: "sLBwpjRGTKhKLWhTT",
        mappedAtCreation: true,
        size: 182507248,
        usage: GPUBufferUsage.VERTEX | GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST | GPUBufferUsage.COPY_SRC
    });
    const EkCeuxemgZDQCtcJqk = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "djAGvqwJR",
        size: {
            width: 1911,
            height: 3457,
            depthOrArrayLayers: 42
        },
        mipLevelCount: 4,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["rg8unorm"]
    });
    const vEZVrtS = EkCeuxemgZDQCtcJqk.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 2,
        format: "rg8unorm",
        label: "HWCtsAGCw"
    });
    const HDWSUNburyea = ufMispXT.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.7664737131102881,
                g: 0.6850201513499397,
                b: 1.0616597808133992,
                a: 1.3116214133032265
            },
            loadOp: "load",
            storeOp: "store",
            view: vEZVrtS
        }],
        label: "KXXEHwQjanAC",
        maxDrawCount: 2602912970,
        occlusionQuerySet: IgMpnh
    });
    HDWSUNburyea.setVertexBuffer(0, vDforMdBByAoZDJxg);
    HDWSUNburyea.end();
    EYTsW.end();
    const OmShxON = DFcKvdqpx.finish();
    ATxLbIiSPmDOrGheqCk.submit([OmShxON]);
    const VrBkRYajKKWzJWNuqwIP = ufMispXT.label
    const RmUvWdgmBOTkbwfT = ncHXKiZBRSuZhXEiFJpR.label
    const XAolaEuSHXRAvYywHG = await navigator.gpu.getPreferredCanvasFormat();
    const gnrNqutpOzycwaa = ncHXKiZBRSuZhXEiFJpR.getBindGroupLayout(0);
    const czhLwbDzwhbpkWdofs = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rgb10a2unorm",
        label: "KKiWiwKBNrVcFlQ",
        size: {
            width: 3152,
            height: 221,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rgb10a2unorm"]
    });
    const NvnrowJRcvw = czhLwbDzwhbpkWdofs.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgb10a2unorm",
        label: "IRqkAHqrYdHDd"
    });
    const qbUlS = ufMispXT.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.9803985410572571,
                g: 1.2673783728262085,
                b: 0.33564528111872427,
                a: 1.1697843253931777
            },
            loadOp: "load",
            storeOp: "discard",
            view: NvnrowJRcvw
        }],
        label: "CpbcxfxMrmDUPLN",
        maxDrawCount: 760095642,
        occlusionQuerySet: IgMpnh
    });
    qbUlS.end();
    const vDhsZz = aCjNGUrrjfIuB.limits
    const JxAeyrvMzOenSHPR = ufMispXT.finish();
    VPAtKXqcoWYb.submit([JxAeyrvMzOenSHPR]);
    const nxCWKDNVY = HtRpyNeV.createShaderModule({
        label: "fragment",
        code: uDrChfoJMAM
    });
    const NGpExNPZNvHMTX = RRapqo.type
    const htdKI = HtRpyNeV.createCommandEncoder({
        label: "bXQsS"
    });
    const NoOMfulqNCkPa = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rgb10a2unorm",
        label: "bwtHRNVTwVRiqJVqHzq",
        size: {
            width: 3555,
            height: 395,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgb10a2unorm"]
    });
    const YhjRaxBeiLahE = NoOMfulqNCkPa.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgb10a2unorm",
        label: "cGdAjOVcaDD"
    });
    const fDzZfgBrbqknO = htdKI.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.5528736628215274,
                g: 0.8190316303137481,
                b: 1.3879096858592939,
                a: 1.4755831598589828
            },
            loadOp: "load",
            storeOp: "discard",
            view: YhjRaxBeiLahE
        }],
        label: "lkpPMv",
        maxDrawCount: 2222075143,
        occlusionQuerySet: rBTYGjbKEwLFRmUcIF
    });
    fDzZfgBrbqknO.setPipeline(ouoUyNwFl);
    const qKBOikkFqY = ncHXKiZBRSuZhXEiFJpR.label
    const AGzDdIQOpXWrXAsenA = ncHXKiZBRSuZhXEiFJpR.getBindGroupLayout(0);
    const VfBHS = aCjNGUrrjfIuB.info
    const sykWEgHY = navigator.gpu.wgslLanguageFeatures
    const XqjYyFKVDutIrtR = fDzZfgBrbqknO.label
    fDzZfgBrbqknO.setVertexBuffer(0, akLTHix);
    const GCctfgbVl = ouoUyNwFl.label
    const wABGOthxPSbk = HtRpyNeV.createQuerySet({
        count: 661,
        label: "HBkbSsDoadV",
        type: "occlusion"
    });
    const yfRKpfpPmzmvzAWXj = HtRpyNeV.createBuffer({
        label: "cFvFBc",
        mappedAtCreation: true,
        size: 217045412,
        usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC
    });
    const StzoveQTMBQ = HtRpyNeV.features
    const hZDGxUmifnLi = wABGOthxPSbk.type
    const saEAnaoOHwb = HtRpyNeV.createBuffer({
        label: "HPyzK",
        mappedAtCreation: false,
        size: 248921500,
        usage: GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.INDEX
    });
    const LimRPmFyCOZBQZimDwia = htdKI.label
    const wRAyiIcaCjtc = HtRpyNeV.createCommandEncoder({
        label: "aQVGOr"
    });
    const kmLtk = wRAyiIcaCjtc.beginComputePass({
        label: "ZhvDlSJhhhLsosPLo"
    });
    kmLtk.setPipeline(tMhEFjQgjdSCj);
    kmLtk.setBindGroup(0, XIyqbE);
    kmLtk.dispatchWorkgroups(165, 245, 27);
    const dlVneYYiKkM = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const tITqZ = HtRpyNeV.limits
    const BZiOX = ncHXKiZBRSuZhXEiFJpR.getBindGroupLayout(0);
    const xWqMuvjKRGjtqMd = ncHXKiZBRSuZhXEiFJpR.label
    const WHEcZv = QfUWWXP.label
    fDzZfgBrbqknO.setPipeline(ouoUyNwFl);
    VPAtKXqcoWYb.writeBuffer(LSUFNMTcx, 30779548, FPuAiXBKSnfDSZMxDW);
    const owXYtHq = dlVneYYiKkM.isFallbackAdapter
    const LRxzfikKS = HtRpyNeV.createBuffer({
        label: "EFrJyCxjoLAuf",
        mappedAtCreation: true,
        size: 236834612,
        usage: GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST
    });
    fDzZfgBrbqknO.end();
    const vzUgvVfmwzQrlo = ncHXKiZBRSuZhXEiFJpR.label
    const NKIqEP = aCjNGUrrjfIuB.features
    const JywJKZmVIjUTOcIbmlxw = RRapqo.count
    const nRmby = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba16float",
        label: "bDhsjsvRvS",
        size: {
            width: 805,
            height: 1021,
            depthOrArrayLayers: 18
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgba16float"]
    });
    const uvusjylzMw = nRmby.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "rgba16float",
        label: "bLkgpbuLBZb"
    });
    const NWXIADSzItgSMGp = htdKI.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.6021294419356866,
                g: 0.07630992414892601,
                b: 0.7012867644276679,
                a: 1.657204168614594
            },
            loadOp: "load",
            storeOp: "store",
            view: uvusjylzMw,
            depthSlice: 8
        }],
        label: "mrrwofFKncHesIm",
        maxDrawCount: 1919601112,
        occlusionQuerySet: nCvWnuEFChvqEodNJ
    });
    const ZcyVIUdX = NWXIADSzItgSMGp.label
    const pwndZayxocZXvTsO = ncHXKiZBRSuZhXEiFJpR.label
    VPAtKXqcoWYb.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, ETFSalPi);
    const SfFArnevwkMSeYGDnZTn = HtRpyNeV.createBindGroup({
        label: "tMhEFjQgjdSCj.bindGroup",
        layout: tMhEFjQgjdSCj.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    const oUaQnepDgRVRcbya = HtRpyNeV.features
    const hhxHU = NWXIADSzItgSMGp.label
    const jpvDsVFPVSO = HtRpyNeV.createShaderModule({
        label: "vertex",
        code: PhpcpzREnviFlgc
    });
    kmLtk.end();
    const FkBEzTFhQEy = wRAyiIcaCjtc.finish();
    const QmcGCFtMkjejseoHM = HtRpyNeV.queue
    const jgBqDOWzn = HtRpyNeV.createBuffer({
        label: "sppXVGL",
        mappedAtCreation: true,
        size: 190905676,
        usage: GPUBufferUsage.MAP_READ
    });
    ATxLbIiSPmDOrGheqCk.writeBuffer(vDforMdBByAoZDJxg, 220256616, nVOfNRHx);
    const lplrTqTyztHCbCFRwLJL = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const TpzdIrGbHywnTpO = ATxLbIiSPmDOrGheqCk.label
    const leCKprjgQsOjQdiu = QmcGCFtMkjejseoHM.label
    const JSmzAtLkZWDs = tMhEFjQgjdSCj.getBindGroupLayout(0);
    const RVBxisjXeDoYc = navigator.gpu.wgslLanguageFeatures
    const VcnsbAshXgZNpc = HtRpyNeV.createShaderModule({
        label: "compute",
        code: GGQvrherUfGvTo
    });
    ATxLbIiSPmDOrGheqCk.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, SrMTTIXRatIIZDkEkd);
    const WwoyxpQHHBBndAGYg = HtRpyNeV.createBindGroup({
        label: "ncHXKiZBRSuZhXEiFJpR.bindGroup",
        layout: ncHXKiZBRSuZhXEiFJpR.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    const AqNMbsMRvt = RRapqo.label
    const LPMmnKxJmwRhktvUXozF = HtRpyNeV.features
    const SGdpWNEnCoIOsHsRqSYn = YXIqAGtg.features
    const owvdg = HtRpyNeV.createCommandEncoder({
        label: "WbTxTYdjaTCvpO"
    });
    const PFnhXS = ncHXKiZBRSuZhXEiFJpR.getBindGroupLayout(0);
    NWXIADSzItgSMGp.end();
    const AHJLcHLdrM = htdKI.finish();
    const YCeGSAdpxfTOO = HOONWCQ.features
    const ajtSAlhzFyDvj = nCvWnuEFChvqEodNJ.type
    const jCgbX = IqLZydZImZzFI.label
    const nSolEpZFfWgBfILobI = yyUBHa.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "mBNXopqOqKJjrJkJK"
    });
    const GmKGEbWaneqmWYT = HtRpyNeV.createBuffer({
        label: "edgXznDrzOtITUmNAVRQ",
        mappedAtCreation: false,
        size: 95185524,
        usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_SRC | GPUBufferUsage.UNIFORM
    });
    const QSAkxdLqJUqCPgIvAp = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r16float",
        label: "umZVyolSxFzWlfcQTKM",
        size: {
            width: 459,
            height: 308,
            depthOrArrayLayers: 40
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["r16float"]
    });
    const UWgQIoxRZVtCNPhscI = QSAkxdLqJUqCPgIvAp.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 2,
        format: "r16float",
        label: "ZZJLH"
    });
    const eqwgOiunpDZgIjFfKqX = owvdg.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.445446786446397,
                g: 0.2734398512578613,
                b: 0.9973446910893236,
                a: 1.5508628667179973
            },
            loadOp: "load",
            storeOp: "discard",
            view: UWgQIoxRZVtCNPhscI,
            depthSlice: 9
        }],
        label: "nIlfvxGbWoEANIZcJDl",
        maxDrawCount: 2623169852,
        occlusionQuerySet: rBTYGjbKEwLFRmUcIF
    });
    eqwgOiunpDZgIjFfKqX.setVertexBuffer(0, bOxwFCC);
    const qnchIjrdDK = nCvWnuEFChvqEodNJ.count
    const vERhLEkRxit = ATxLbIiSPmDOrGheqCk.label
    CnodBrHn.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, BtouSTuB);
    const wZomrwWz = HtRpyNeV.createBindGroup({
        label: "tMhEFjQgjdSCj.bindGroup",
        layout: tMhEFjQgjdSCj.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    VPAtKXqcoWYb.submit([FkBEzTFhQEy]);
    const HSkrLDfDi = tMhEFjQgjdSCj.label
    const UDQtEaDcnmxvdeqMxRu = HtRpyNeV.createCommandEncoder({
        label: "tIpxYnRBbWtWXokjdbER"
    });
    const PsQqCjKvOkYjWyYyXAJh = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm",
        label: "yVlFQajKMuobZAdiSILq",
        size: {
            width: 560,
            height: 616,
            depthOrArrayLayers: 18
        },
        mipLevelCount: 8,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgba8unorm"]
    });
    const NdtZARzdd = PsQqCjKvOkYjWyYyXAJh.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 6,
        format: "rgba8unorm",
        label: "upEjjhqcEw"
    });
    const UBHRnZWn = UDQtEaDcnmxvdeqMxRu.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.4787511074058217,
                g: 0.8174817953966427,
                b: 1.7955969092279023,
                a: 1.219863854892672
            },
            loadOp: "load",
            storeOp: "discard",
            view: NdtZARzdd,
            depthSlice: 0
        }],
        label: "cHstEOTpw",
        maxDrawCount: 815338458,
        occlusionQuerySet: nCvWnuEFChvqEodNJ
    });
    QmcGCFtMkjejseoHM.submit([AHJLcHLdrM]);
    const fgJoAVAzHvdlSgh = nCvWnuEFChvqEodNJ.label
    UBHRnZWn.setVertexBuffer(0, bOxwFCC);
    eqwgOiunpDZgIjFfKqX.setVertexBuffer(0, vDforMdBByAoZDJxg);
    const rmNHKC = HtRpyNeV.createCommandEncoder({
        label: "mLyqjWqadV"
    });
    const mfwGOW = lplrTqTyztHCbCFRwLJL.info
    const yRITVshqW = HtRpyNeV.createShaderModule({
        label: "vertex",
        code: sGsRXdXxiHnvzFoI
    });
    const CyPmTpCgAnJoGnrddl = HtRpyNeV.features
    const DSZvrKkt = wABGOthxPSbk.count
    const WECkAAa = await navigator.gpu.getPreferredCanvasFormat();
    const vYOMrBbUynCj = HtRpyNeV.createShaderModule({
        label: "vertex",
        code: uFgRwgx
    });
    const ZYkbOPxzjPeRVIiqGt = rmNHKC.beginComputePass({
        label: "YwaUipwswnTIFjkfHcaq"
    });
    ZYkbOPxzjPeRVIiqGt.end();
    const nyzTDRbVNTkazOzhk = rmNHKC.beginComputePass({
        label: "tjzFkVCPPi"
    });
    nyzTDRbVNTkazOzhk.setBindGroup(0, erhgrrdSiTr);
    const jBVjXByKNsSXKA = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: nxCWKDNVY,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "src-alpha",
                        srcFactor: "one-minus-constant"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "dst-alpha",
                        srcFactor: "dst-alpha"
                    }
                },
                format: "rgba8unorm",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.ALL | GPUColorWrite.RED | GPUColorWrite.BLUE
            }]
        },
        label: "AGdvN",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "cw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: yRITVshqW
        }
    });
    UBHRnZWn.setPipeline(jBVjXByKNsSXKA);
    const kOBEuXvgUHPyurCW = HtRpyNeV.createQuerySet({
        count: 1067,
        label: "JcLtE",
        type: "occlusion"
    });
    const QNFCBeqIGHg = HtRpyNeV.createCommandEncoder({
        label: "hISYhsbsdsTL"
    });
    const udTltNvHovPGMbAWqGb = lplrTqTyztHCbCFRwLJL.features
    const YfRbsQRxDLt = rBTYGjbKEwLFRmUcIF.label
    const XEIWmahRioJDLF = HtRpyNeV.limits
    const XqmWLjQcGwKI = QmcGCFtMkjejseoHM.label
    eqwgOiunpDZgIjFfKqX.setVertexBuffer(0, bOxwFCC);
    const nOHzbusvYL = HtRpyNeV.createCommandEncoder({
        label: "EurkigiaKgiAKrAU"
    });
    nyzTDRbVNTkazOzhk.setBindGroup(0, WwoyxpQHHBBndAGYg);
    const qieYUbDhCA = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "bgra8unorm",
        label: "zmelgDUUmpJsKvf",
        size: {
            width: 225,
            height: 703,
            depthOrArrayLayers: 63
        },
        mipLevelCount: 6,
        usage: GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["bgra8unorm"]
    });
    const XWVeIk = qieYUbDhCA.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "bgra8unorm",
        label: "qRCSrW"
    });
    const pshyXOapgzdXTCRrBbkQ = nOHzbusvYL.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.9334518726090282,
                g: 0.968328230666895,
                b: 0.034972359038169865,
                a: 1.8334128666925278
            },
            loadOp: "clear",
            storeOp: "store",
            view: XWVeIk,
            depthSlice: 9
        }],
        label: "mFqgdb",
        maxDrawCount: 1233630705,
        occlusionQuerySet: nCvWnuEFChvqEodNJ
    });
    const CdFBS = wABGOthxPSbk.type
    const ZfNElFrUYshaiAD = wABGOthxPSbk.count
    UBHRnZWn.setPipeline(jBVjXByKNsSXKA);
    const BaIaeVJumbqSNBshVY = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    nyzTDRbVNTkazOzhk.setBindGroup(0, wZomrwWz);
    nyzTDRbVNTkazOzhk.setPipeline(tMhEFjQgjdSCj);
    nyzTDRbVNTkazOzhk.setBindGroup(0, wZomrwWz);
    nyzTDRbVNTkazOzhk.setPipeline(ncHXKiZBRSuZhXEiFJpR);
    const yQAjK = dYzKdkxAenOBDoFNiOBo.label
    eqwgOiunpDZgIjFfKqX.end();
    const HfonibkbI = owvdg.finish();
    lxEhHxhJiryYDEcsXB.submit([HfonibkbI]);
    const poRLcGRRzDyrA = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const uHFtpfjHnKpKlgA = HtRpyNeV.label
    const QtPmqBg = HtRpyNeV.createShaderModule({
        label: "compute",
        code: ddJwGQCMNAu
    });
    const RckkATqg = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: nxCWKDNVY,
            targets: [{
                blend: {
                    alpha: {
                        operation: "add",
                        dstFactor: "one-minus-dst-alpha",
                        srcFactor: "src"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "one-minus-constant",
                        srcFactor: "constant"
                    }
                },
                format: "bgra8unorm",
                writeMask: GPUColorWrite.BLUE
            }]
        },
        label: "ILdfRDmZIWMmXPPCRE",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: vYOMrBbUynCj
        }
    });
    pshyXOapgzdXTCRrBbkQ.setPipeline(RckkATqg);
    const EnOUn = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const IRARSExiTKU = HtRpyNeV.createTexture({
        dimension: "1d",
        sampleCount: 1,
        format: "r32uint",
        label: "gZZrsVdkjyDOm",
        size: {
            width: 1864,
            height: 1,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.STORAGE_BINDING,
        viewFormats: ["r32uint"]
    });
    pshyXOapgzdXTCRrBbkQ.end();
    const kccocWvQPVPanipQ = nOHzbusvYL.finish();
    const rRHjQ = HtRpyNeV.createShaderModule({
        label: "fragment",
        code: iEkQxCq
    });
    const JezBcTApSgpCYeMcvk = HtRpyNeV.createBuffer({
        label: "xZCAiPPlcgBwObvHg",
        mappedAtCreation: true,
        size: 205088772,
        usage: GPUBufferUsage.VERTEX | GPUBufferUsage.INDIRECT | GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE
    });
    const TjsUrpTEcExIdEUtLWB = nyzTDRbVNTkazOzhk.label
    const aGCVyRJyIA = HtRpyNeV.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: VcnsbAshXgZNpc
        },
        label: "GiuTjUjFRz",
        layout: "auto"
    });
    nyzTDRbVNTkazOzhk.end();
    const pOcedIitvTYun = navigator.gpu.wgslLanguageFeatures
    const UududElbewteQ = QNFCBeqIGHg.beginComputePass({
        label: "SqinzXygSof"
    });
    const KhIplvbjPxYyBHGXMbo = tMhEFjQgjdSCj.getBindGroupLayout(0);
    const BVrQBcujeSiZl = BaIaeVJumbqSNBshVY.isFallbackAdapter
    const jGFvqwzD = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rg8unorm",
        label: "qDUegDhifrPcgbbZTv",
        size: {
            width: 3661,
            height: 2114,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rg8unorm"]
    });
    const qfryr = jGFvqwzD.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg8unorm",
        label: "ugQhdUVhies"
    });
    const LzyCvrToyLn = rmNHKC.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.12362378463996726,
                g: 1.2496699395285702,
                b: 1.975791710499398,
                a: 1.6803262754395467
            },
            loadOp: "load",
            storeOp: "discard",
            view: qfryr
        }],
        label: "lVTLkGkXWreZCXBL",
        maxDrawCount: 1077655839,
        occlusionQuerySet: kOBEuXvgUHPyurCW
    });
    UududElbewteQ.setBindGroup(0, SfFArnevwkMSeYGDnZTn);
    const DHlAejXcTuIzXMehDyMB = HtRpyNeV.createQuerySet({
        count: 1798,
        label: "Vpsghdm",
        type: "occlusion"
    });
    const BiWzvAYYEyZVbX = HtRpyNeV.createCommandEncoder({
        label: "VWCBfGQeajRvAztbhAb"
    });
    const VqJPWR = DHlAejXcTuIzXMehDyMB.type
    const TnkFjtUy = navigator.gpu.wgslLanguageFeatures
    const jhESQqRoDEUbZ = HtRpyNeV.createQuerySet({
        count: 3640,
        label: "XpfGAclT",
        type: "occlusion"
    });
    const JqrhJpIkBLBTJU = navigator.gpu.wgslLanguageFeatures
    const UuJMOLIwxwpXOX = UududElbewteQ.label
    UBHRnZWn.end();
    const QqzuspfOvUZq = UDQtEaDcnmxvdeqMxRu.finish();
    const BdTDcggYARf = navigator.gpu.wgslLanguageFeatures
    const TWyDS = HtRpyNeV.label
    const OgDRMjAAGNocFSZBTeH = DHlAejXcTuIzXMehDyMB.label
    const gFiNkicUcQMzrwgNWQ = navigator.gpu.wgslLanguageFeatures
    LzyCvrToyLn.end();
    const kmfBvyiFe = rmNHKC.finish();
    const SyUipNO = YXIqAGtg.info
    UududElbewteQ.setBindGroup(0, WwoyxpQHHBBndAGYg);
    UududElbewteQ.setPipeline(ncHXKiZBRSuZhXEiFJpR);
    UududElbewteQ.setBindGroup(0, yaEkKHK);
    UududElbewteQ.dispatchWorkgroups(24, 22, 6);
    UududElbewteQ.setBindGroup(0, yaEkKHK);
    const PspUECBPXr = HtRpyNeV.createCommandEncoder({
        label: "QRpjQLZCSrsfczYnn"
    });
    const DVwoRQAUuQBDbav = tMhEFjQgjdSCj.label
    lxEhHxhJiryYDEcsXB.submit([kmfBvyiFe]);
    const tVljWeKvZmDUpkbB = HtRpyNeV.limits
    const ciNykqGuomqiRFa = ATxLbIiSPmDOrGheqCk.label
    const PDKerJbphGvLcFV = RckkATqg.label
    const VobDuRvgnl = rBTYGjbKEwLFRmUcIF.label
    const ScKLUXjAlfLKZecoO = WFyxkOphB.label
    UududElbewteQ.setBindGroup(0, erhgrrdSiTr);
    const DUVkP = PspUECBPXr.finish();
    const WWCDtqJTOtPUan = await navigator.gpu.getPreferredCanvasFormat();
    const DcGBKi = aGCVyRJyIA.getBindGroupLayout(0);
    const DnYlgJmeqtgCULDzDjT = kOBEuXvgUHPyurCW.type
    const JBMXC = wABGOthxPSbk.count
    const nHGREOyDrlCcIhxRAccF = HtRpyNeV.limits
    lxEhHxhJiryYDEcsXB.writeBuffer(LSUFNMTcx, 10919016, aZyZS);
    const EdEzPWspcdDrEeu = kOBEuXvgUHPyurCW.type
    const umelBfbvluC = lplrTqTyztHCbCFRwLJL.features
    const KyBPs = HtRpyNeV.label
    const RTAuueYwgbY = ncHXKiZBRSuZhXEiFJpR.getBindGroupLayout(0);
    UududElbewteQ.setBindGroup(0, erhgrrdSiTr);
    UududElbewteQ.setPipeline(ncHXKiZBRSuZhXEiFJpR);
    const ZaqFpDfRJQDkVcc = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm",
        label: "lwHCo",
        size: {
            width: 3800,
            height: 1440,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["bgra8unorm"]
    });
    const Lhbvnq = ZaqFpDfRJQDkVcc.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "JeyuJdQjKPxZxYDEdR"
    });
    const LJZRusYUfkcuSSlfX = BiWzvAYYEyZVbX.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.8242998896526057,
                g: 0.5057977718157964,
                b: 0.4211797630522127,
                a: 1.4189502184382567
            },
            loadOp: "load",
            storeOp: "discard",
            view: Lhbvnq
        }],
        label: "hLhIUk",
        maxDrawCount: 750586833,
        occlusionQuerySet: wABGOthxPSbk
    });
    LJZRusYUfkcuSSlfX.end();
    const BQnoHgBNTPJGyRjb = BiWzvAYYEyZVbX.finish();
    const TUUyvIKaRgURGmkjbk = YXIqAGtg.info
    const VeTRuiLzWIJEvRiQOs = RRapqo.count
    const bHjPWeBbKADkNKAs = HtRpyNeV.createCommandEncoder({
        label: "xCCQcCEoKYMDug"
    });
    const ogwdDN = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "rtKRZW",
        size: {
            width: 2571,
            height: 384,
            depthOrArrayLayers: 10
        },
        mipLevelCount: 10,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST,
        viewFormats: ["rg8unorm"]
    });
    const yRTEWjwNBA = ogwdDN.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 3,
        format: "rg8unorm",
        label: "cNhoboYMYSjuEMK"
    });
    const shhALpU = bHjPWeBbKADkNKAs.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.06863252070539061,
                g: 1.1870278758548565,
                b: 1.5871342237246668,
                a: 1.429977637323801
            },
            loadOp: "load",
            storeOp: "discard",
            view: yRTEWjwNBA
        }],
        label: "SAzruNOlZpJKIsFSZjik",
        maxDrawCount: 3919044059,
        occlusionQuerySet: rBTYGjbKEwLFRmUcIF
    });
    shhALpU.end();
    const BgAbeWniGamFsX = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm-srgb",
        label: "NmbFdGgcPx",
        size: {
            width: 353,
            height: 308,
            depthOrArrayLayers: 20
        },
        mipLevelCount: 4,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const KuZHXzANEUHKrRtxZg = BgAbeWniGamFsX.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba8unorm-srgb",
        label: "wuSpsUtpiJQgifTV"
    });
    const tvhxzLSFZwe = bHjPWeBbKADkNKAs.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.7295926902109275,
                g: 0.09469136142628054,
                b: 0.19621126640335063,
                a: 1.350903789049024
            },
            loadOp: "load",
            storeOp: "store",
            view: KuZHXzANEUHKrRtxZg,
            depthSlice: 9
        }],
        label: "jrJppDm",
        maxDrawCount: 2014581088,
        occlusionQuerySet: DHlAejXcTuIzXMehDyMB
    });
    tvhxzLSFZwe.end();
    const TuRXWnekDEXyaDFC = RRapqo.type
    const EFInSbiqWoT = ncHXKiZBRSuZhXEiFJpR.label
    const soGDMaUbj = HtRpyNeV.label
    UududElbewteQ.setBindGroup(0, WwoyxpQHHBBndAGYg);
    UududElbewteQ.setPipeline(ncHXKiZBRSuZhXEiFJpR);
    UududElbewteQ.setBindGroup(0, uDzrXPasQ);
    UududElbewteQ.dispatchWorkgroups(221, 241, 50);
    const RImNpRn = EnOUn.isFallbackAdapter
    const yifcIMdYSXpGkfY = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "depth24plus",
        label: "KRwOVHejiB",
        size: {
            width: 90,
            height: 652,
            depthOrArrayLayers: 55
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["depth24plus"]
    });
    const XTssanz = dYzKdkxAenOBDoFNiOBo.label
    VPAtKXqcoWYb.writeBuffer(vDforMdBByAoZDJxg, 131590936, FBnhUOElwHnMdkDosdnJ);
    const nitOXolYPwzUTdA = YXIqAGtg.limits
    const ikpRHirVJYNy = HtRpyNeV.label
    const oHJXJcoGNCldftRnprJ = await navigator.gpu.getPreferredCanvasFormat();
    const CkVXEJRvTILVEtyvyw = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: nxCWKDNVY,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "one",
                        srcFactor: "one-minus-dst-alpha"
                    }
                },
                format: "r8unorm",
                writeMask: GPUColorWrite.GREEN | GPUColorWrite.ALL | GPUColorWrite.RED | GPUColorWrite.BLUE
            }]
        },
        label: "yNyyIfSAZbsl",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: jpvDsVFPVSO
        }
    });
    const vPxUrCCMmqjaEPGrZ = bHjPWeBbKADkNKAs.label
    const ywQIDG = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "bgra8unorm",
        label: "fAdUdmnwAVkfz",
        size: {
            width: 733,
            height: 778,
            depthOrArrayLayers: 28
        },
        mipLevelCount: 2,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["bgra8unorm"]
    });
    const XohPcKBPXijSpXy = ywQIDG.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "ABbddA"
    });
    const nZrwqININEPZfRxXi = bHjPWeBbKADkNKAs.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.7508715250768199,
                g: 0.8167885170130504,
                b: 0.04760971376572232,
                a: 0.31376982463174286
            },
            loadOp: "load",
            storeOp: "discard",
            view: XohPcKBPXijSpXy,
            depthSlice: 25
        }],
        label: "COVtCGjpqBiGkYTGM",
        maxDrawCount: 3127439988,
        occlusionQuerySet: kOBEuXvgUHPyurCW
    });
    const AboqANwUyoRUyHHDI = EnOUn.limits
    nZrwqININEPZfRxXi.setPipeline(RckkATqg);
    const ZLwEzxuocYFY = HtRpyNeV.createShaderModule({
        label: "fragment",
        code: zUzFUD
    });
    const XyKVoSlrkXxiliZT = HtRpyNeV.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: RaRatWxCEl
        },
        label: "kZBXCdwnqdioELYHrUzZ",
        layout: "auto"
    });
    const gSfZuCfRpnCJxRtb = await navigator.gpu.getPreferredCanvasFormat();
    const PRgqJJeQyhfBqWsWZ = wABGOthxPSbk.label
    const RpDQhVsEp = ATxLbIiSPmDOrGheqCk.label
    const pnYPRIjblDvNMHQX = HtRpyNeV.createCommandEncoder({
        label: "SjImMMGtevPLnml"
    });
    const xJlSyLI = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "GxgcTVLCmBtZNiXlbnNn",
        size: {
            width: 898,
            height: 469,
            depthOrArrayLayers: 62
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["rg8unorm"]
    });
    const ogsqqwKK = xJlSyLI.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "rg8unorm",
        label: "ziRFqMz"
    });
    const KhgKwIZ = pnYPRIjblDvNMHQX.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.1671949937986388,
                g: 0.24380591730025225,
                b: 0.8621272905953092,
                a: 0.25493264357598355
            },
            loadOp: "load",
            storeOp: "store",
            view: ogsqqwKK,
            depthSlice: 15
        }],
        label: "DcfGFOnxrNNc",
        maxDrawCount: 3860341042,
        occlusionQuerySet: rBTYGjbKEwLFRmUcIF
    });
    const lSTqPgZhC = VPAtKXqcoWYb.label
    UududElbewteQ.setBindGroup(0, yaEkKHK);
    UududElbewteQ.setPipeline(ncHXKiZBRSuZhXEiFJpR);
    const nYWKgQPU = HtRpyNeV.limits
    const TVqRgpwfmhpis = HtRpyNeV.createCommandEncoder({
        label: "LOWczUQbqS"
    });
    UududElbewteQ.end();
    const bFqPKfERCaNAG = rBTYGjbKEwLFRmUcIF.type
    const cmSOjVgfqZhvTTlZLwn = EnOUn.features
    nZrwqININEPZfRxXi.draw(9);
    VPAtKXqcoWYb.writeBuffer(akLTHix, 34428668, mAjfnFv);
    nZrwqININEPZfRxXi.draw(4);
    const rJsoFdGULHWfZMhuGCj = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: gFWClaK,
            targets: [{
                blend: {
                    alpha: {
                        operation: "add",
                        dstFactor: "dst",
                        srcFactor: "dst"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "one",
                        srcFactor: "zero"
                    }
                },
                format: "rg16float",
                writeMask: GPUColorWrite.ALPHA
            }]
        },
        label: "VuILbhEAmumLybRjDYnT",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "back",
            frontFace: "cw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: yRITVshqW
        }
    });
    const ZMjLPVVUFWTIiyi = HtRpyNeV.label
    const WRkIj = XyKVoSlrkXxiliZT.getBindGroupLayout(0);
    KhgKwIZ.setVertexBuffer(0, vDforMdBByAoZDJxg);
    const jylHJrXAwxvSjooWRi = XyKVoSlrkXxiliZT.label
    KhgKwIZ.end();
    const oPHgXzuR = RRapqo.label
    const nIfxQECRVladLaql = jpuuZcvnvcOqO.label
    const rkyDqTUD = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgb10a2unorm",
        label: "AZlKfYw",
        size: {
            width: 1699,
            height: 2301,
            depthOrArrayLayers: 32
        },
        mipLevelCount: 8,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgb10a2unorm"]
    });
    const TUWkhrfYXYzJnVzFXXE = rkyDqTUD.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgb10a2unorm",
        label: "aOBFJHeV"
    });
    const NvNGyRhniiyymILZARmH = pnYPRIjblDvNMHQX.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.6033732203666189,
                g: 0.3860126268912243,
                b: 0.8593376839641065,
                a: 1.3219733972188588
            },
            loadOp: "load",
            storeOp: "discard",
            view: TUWkhrfYXYzJnVzFXXE
        }],
        label: "Wclmql",
        maxDrawCount: 80214271,
        occlusionQuerySet: rBTYGjbKEwLFRmUcIF
    });
    const gqZhrheiYKgwJWosW = QNFCBeqIGHg.beginComputePass({
        label: "FdjcaLgkjrmH"
    });
    gqZhrheiYKgwJWosW.setPipeline(XyKVoSlrkXxiliZT);
    VPAtKXqcoWYb.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, bsBfGiICZEviIDeV);
    const VqgVQNJUblIdnzVQGmEM = HtRpyNeV.createBindGroup({
        label: "XyKVoSlrkXxiliZT.bindGroup",
        layout: XyKVoSlrkXxiliZT.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    gqZhrheiYKgwJWosW.setBindGroup(0, VqgVQNJUblIdnzVQGmEM);
    gqZhrheiYKgwJWosW.dispatchWorkgroups(158, 184, 12);
    const jcqxrqOaTvXqGSFKSlY = jpuuZcvnvcOqO.label
    const qyXGEuIpgRRjnIPniLGc = nZrwqININEPZfRxXi.label
    ATxLbIiSPmDOrGheqCk.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, pgIPtCbYHvxZvlPm);
    const cyMGpABgoTXC = HtRpyNeV.createBindGroup({
        label: "tMhEFjQgjdSCj.bindGroup",
        layout: tMhEFjQgjdSCj.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    const YynizytXQsTxJSpV = ouoUyNwFl.label
    nZrwqININEPZfRxXi.draw(4);
    const CdPBJYJm = HtRpyNeV.queue
    const UFEwRlfQZmABYbc = HtRpyNeV.queue
    UFEwRlfQZmABYbc.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, czDWW);
    const lAYNxThe = HtRpyNeV.createBindGroup({
        label: "tMhEFjQgjdSCj.bindGroup",
        layout: tMhEFjQgjdSCj.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    const MRYQsUwd = poRLcGRRzDyrA.info
    const cnFmcbzm = HtRpyNeV.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: RaRatWxCEl
        },
        label: "wLPiYwKQhnXmHXDZop",
        layout: "auto"
    });
    const qsmNQfMFnftyI = yRTEWjwNBA.label
    const StolmtvyiwTCzH = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    nZrwqININEPZfRxXi.setPipeline(RckkATqg);
    const LUHuuIBoJOp = HtRpyNeV.queue
    const vgdLoGvKiDxZwQXbV = cnFmcbzm.getBindGroupLayout(0);
    nZrwqININEPZfRxXi.setPipeline(RckkATqg);
    const GPcdvwcv = await navigator.gpu.getPreferredCanvasFormat();
    const qLISuaYzXUm = HtRpyNeV.createCommandEncoder({
        label: "iCsFvePedp"
    });
    const RqzKbh = UFEwRlfQZmABYbc.label
    const khJETguOUjcAm = CdPBJYJm.label
    gqZhrheiYKgwJWosW.setBindGroup(0, VqgVQNJUblIdnzVQGmEM);
    const JZGtesoy = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg32uint",
        label: "XAlQmoFjpQWTFhjwhWlJ",
        size: {
            width: 258,
            height: 71,
            depthOrArrayLayers: 36
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rg32uint"]
    });
    const ALUqxORPtoCqLwa = HtRpyNeV.limits
    const wEqTuf = HtRpyNeV.queue
    const fgzgHu = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "vJBUCznynIkfIZQVbzr",
        size: {
            width: 216,
            height: 764,
            depthOrArrayLayers: 51
        },
        mipLevelCount: 7,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rg8unorm"]
    });
    const JWDecWqnemNEbBbiUSAB = fgzgHu.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 6,
        format: "rg8unorm",
        label: "Hdyghx"
    });
    const XBoyUXIyikU = qLISuaYzXUm.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.4501507958168476,
                g: 1.8351132805374302,
                b: 1.8592879164825398,
                a: 0.3806357026871794
            },
            loadOp: "load",
            storeOp: "discard",
            view: JWDecWqnemNEbBbiUSAB,
            depthSlice: 0
        }],
        label: "hrcigNrAAWBoLuGVbRCL",
        maxDrawCount: 2942373362,
        occlusionQuerySet: nCvWnuEFChvqEodNJ
    });
    const TEwVFrAVcvHUEdKQvJV = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "bgra8unorm-srgb",
        label: "ksneYYqHQfKCAHBJTM",
        size: {
            width: 36,
            height: 589,
            depthOrArrayLayers: 57
        },
        mipLevelCount: 9,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["bgra8unorm-srgb"]
    });
    const QukhONtAnXtRQxaY = TEwVFrAVcvHUEdKQvJV.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 2,
        format: "bgra8unorm-srgb",
        label: "CuDqpNpydliYzcR"
    });
    const TgPhrlrWRsEOLNbzp = TVqRgpwfmhpis.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.2679988526051142,
                g: 1.3509388405989435,
                b: 0.8339692577008773,
                a: 0.8347252151680369
            },
            loadOp: "clear",
            storeOp: "discard",
            view: QukhONtAnXtRQxaY,
            depthSlice: 11
        }],
        label: "GjJnJQtAkwjzGVbcP",
        maxDrawCount: 2340208783,
        occlusionQuerySet: wABGOthxPSbk
    });
    const EHTkrGo = XyKVoSlrkXxiliZT.getBindGroupLayout(0);
    const XXccXtfbLsXLJbuInZpm = pnYPRIjblDvNMHQX.label
    const ZmwYqiVgFzsjJLwPZIBf = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: nxCWKDNVY,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "src-alpha-saturated",
                        srcFactor: "one-minus-src"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "r8unorm",
                writeMask: GPUColorWrite.GREEN
            }]
        },
        label: "GDcSlk",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "back",
            frontFace: "ccw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: HBuEZU
        }
    });
    const PgkIhEvErJo = aGCVyRJyIA.getBindGroupLayout(0);
    nZrwqININEPZfRxXi.setVertexBuffer(0, akLTHix);
    wEqTuf.writeBuffer(vDforMdBByAoZDJxg, 129138112, qsdDJLDlOor);
    const blMClY = navigator.gpu.wgslLanguageFeatures
    const DaaEmZHm = tMhEFjQgjdSCj.getBindGroupLayout(0);
    const HCozpLQRHWxJRzKvUs = navigator.gpu.wgslLanguageFeatures
    VPAtKXqcoWYb.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, yWAwXUYcIoRKCcmbs);
    const YxPlThjufs = HtRpyNeV.createBindGroup({
        label: "ncHXKiZBRSuZhXEiFJpR.bindGroup",
        layout: ncHXKiZBRSuZhXEiFJpR.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    const wNJEkGxPi = HtRpyNeV.createShaderModule({
        label: "vertex",
        code: WaUJvjKsisJQufLCVjyC
    });
    const sPmZs = wABGOthxPSbk.type
    const dkVkwAbRuWVziX = HtRpyNeV.createQuerySet({
        count: 3706,
        label: "OjxtkwxKwRiMImoRPapU",
        type: "occlusion"
    });
    const ocerGnHllldNeXy = tMhEFjQgjdSCj.getBindGroupLayout(0);
    const MWBRWcrldvmktHFsV = HtRpyNeV.createBuffer({
        label: "qbNMvmxtHSNl",
        mappedAtCreation: true,
        size: 221589988,
        usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.INDIRECT
    });
    const lHtbUfBMpuYAPcemWj = gqZhrheiYKgwJWosW.label
    const pQThNgZtKknyoMIFnT = await navigator.gpu.getPreferredCanvasFormat();
    CdPBJYJm.writeBuffer(vDforMdBByAoZDJxg, 135472192, jcukDB);
    const RdEaWTZXjQsxFeXsk = rBTYGjbKEwLFRmUcIF.type
    const FlPfjRFAxYzIsSImcFI = HtRpyNeV.label
    const aYwtxTjAR = navigator.gpu.wgslLanguageFeatures
    gqZhrheiYKgwJWosW.setBindGroup(0, VqgVQNJUblIdnzVQGmEM);
    const pfEyCXcA = lplrTqTyztHCbCFRwLJL.limits
    const wGmjcmSsCMnAtUmuXWWm = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const sxEqKNPBeaioDusnD = XBoyUXIyikU.label
    const XKTSVCBzACZLDCVNRO = StolmtvyiwTCzH.info
    const MiycHQza = rBTYGjbKEwLFRmUcIF.count
    const YAHcdmuIQUnici = HtRpyNeV.queue
    const MuhLHZDXXqz = HtRpyNeV.createCommandEncoder({
        label: "eWJEBIVaxapINUhcnQVC"
    });
    nZrwqININEPZfRxXi.draw(3);
    const jgundOEZ = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm-srgb",
        label: "yUQrBpLXhILJbao",
        size: {
            width: 2526,
            height: 3146,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["bgra8unorm-srgb"]
    });
    const cisYrMJqjAVgSwUSk = jgundOEZ.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm-srgb",
        label: "wzHCdV"
    });
    const PvqtSiYzwbGcAAXA = MuhLHZDXXqz.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.6263168924542517,
                g: 1.7616633343447068,
                b: 0.7211101726682598,
                a: 0.5445516801887686
            },
            loadOp: "load",
            storeOp: "store",
            view: cisYrMJqjAVgSwUSk
        }],
        label: "GVmLCQr",
        maxDrawCount: 3026724674,
        occlusionQuerySet: RRapqo
    });
    YAHcdmuIQUnici.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, SobaIoLhHkIBHxAMiMZ);
    const ioDLyf = HtRpyNeV.createBindGroup({
        label: "cnFmcbzm.bindGroup",
        layout: cnFmcbzm.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    const wLvCinpiPTzbzgqr = YhjRaxBeiLahE.label
    gqZhrheiYKgwJWosW.setBindGroup(0, VqgVQNJUblIdnzVQGmEM);
    gqZhrheiYKgwJWosW.setPipeline(XyKVoSlrkXxiliZT);
    gqZhrheiYKgwJWosW.setBindGroup(0, VqgVQNJUblIdnzVQGmEM);
    gqZhrheiYKgwJWosW.dispatchWorkgroups(150, 26, 7);
    const VzyZn = HtRpyNeV.queue
    PvqtSiYzwbGcAAXA.setPipeline(jpuuZcvnvcOqO);
    PvqtSiYzwbGcAAXA.draw(10);
    const XkTHmSvxJIP = wABGOthxPSbk.type
    const mplRxzRgFyMPqBKrZuE = HtRpyNeV.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: RaRatWxCEl
        },
        label: "IFlVfaOknpsznyYUtvl",
        layout: "auto"
    });
    PvqtSiYzwbGcAAXA.draw(1);
    const hXDQKPaWKWmAXiaBGH = pnYPRIjblDvNMHQX.label
    const fAMFjjj = HtRpyNeV.createCommandEncoder({
        label: "chjjaky"
    });
    const fnCxxizEdZHhXGxPbYE = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgb10a2unorm",
        label: "hhuMcUiADRvxTwrcXpVy",
        size: {
            width: 75,
            height: 344,
            depthOrArrayLayers: 28
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgb10a2unorm"]
    });
    const UkOAMlxVKHCgxOCakoXy = fnCxxizEdZHhXGxPbYE.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "rgb10a2unorm",
        label: "UAVuSXOZmolIsKL"
    });
    const TgPBVUQhOQBFNOg = fAMFjjj.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.3552964653181587,
                g: 0.0439349997515901,
                b: 0.8880357050104501,
                a: 0.14414616194512808
            },
            loadOp: "load",
            storeOp: "store",
            view: UkOAMlxVKHCgxOCakoXy,
            depthSlice: 13
        }],
        label: "JdppsAQgx",
        maxDrawCount: 2404603971,
        occlusionQuerySet: IgMpnh
    });
    const wqttBzHn = await navigator.gpu.getPreferredCanvasFormat();
    gqZhrheiYKgwJWosW.setBindGroup(0, VqgVQNJUblIdnzVQGmEM);
    gqZhrheiYKgwJWosW.setPipeline(XyKVoSlrkXxiliZT);
    gqZhrheiYKgwJWosW.setBindGroup(0, VqgVQNJUblIdnzVQGmEM);
    gqZhrheiYKgwJWosW.dispatchWorkgroups(205, 111, 14);
    const BfWWXUdi = HtRpyNeV.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rg16float",
        label: "CsCFCmKj",
        size: {
            width: 2214,
            height: 660,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rg16float"]
    });
    const wGrusat = BaIaeVJumbqSNBshVY.isFallbackAdapter
    YAHcdmuIQUnici.submit([QqzuspfOvUZq]);
    VzyZn.writeBuffer(ESfLxTwBQtEvVdEKBy, 4, SqoESKynGKjYdOhLTgBn);
    const FANVxMzyxWbPgBkGDS = StolmtvyiwTCzH.limits
    const QlEcmu = navigator.gpu.wgslLanguageFeatures
    const HtsRIwXcwv = qLISuaYzXUm.label
    const oEYYWZnTpHVD = XWVeIk.label
    const VtSmlkmPTlllNCeb = aCjNGUrrjfIuB.info
    const guphV = HtRpyNeV.createQuerySet({
        count: 3194,
        label: "BTTSihypPNV",
        type: "occlusion"
    });
    const NOVptIkQitaDtYk = HtRpyNeV.createCommandEncoder({
        label: "aWzga"
    });
    const uLZwWDWjljPOrk = NOVptIkQitaDtYk.beginComputePass({
        label: "wnUhzedfqdMlgWHXEmGC"
    });
    gqZhrheiYKgwJWosW.end();
    const rBBTrEYSflStEgHWO = XyKVoSlrkXxiliZT.label
    const gkoInGQEkQrsnoWOu = aCjNGUrrjfIuB.info
    const tSAesLucegqUd = lplrTqTyztHCbCFRwLJL.info
    const cOOJNERuPNSf = jhESQqRoDEUbZ.label
    const JrOSHYjwVtqSUYG = HOONWCQ.limits
    const WMKhUfWcccu = HtRpyNeV.createCommandEncoder({
        label: "qxudtlpgjlcKi"
    });
    const nNVyg = YXIqAGtg.info
    const sRWAumiskXgmpv = HtRpyNeV.features
    uLZwWDWjljPOrk.setPipeline(mplRxzRgFyMPqBKrZuE);
    VzyZn.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, ZEyuH);
    const azNxpbNkXRsSDC = HtRpyNeV.createBindGroup({
        label: "mplRxzRgFyMPqBKrZuE.bindGroup",
        layout: mplRxzRgFyMPqBKrZuE.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    uLZwWDWjljPOrk.setBindGroup(0, azNxpbNkXRsSDC);
    uLZwWDWjljPOrk.dispatchWorkgroups(138, 187, 53);
    const SDcdaoJvsVETsYtLltF = VPAtKXqcoWYb.label
    const aXZczwmjoMEerRQiarL = HtRpyNeV.features
    const puDeRcKvzecFAD = XBoyUXIyikU.label
    const smQWAoQ = HtRpyNeV.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: ADyroNPcFVnGJNyJNDUF
        },
        label: "XCUAQBFGDrdmNRRXzn",
        layout: "auto"
    });
    const WggLI = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ZLwEzxuocYFY,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "one-minus-dst",
                        srcFactor: "constant"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "one",
                        srcFactor: "zero"
                    }
                },
                format: "rg8unorm",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.BLUE | GPUColorWrite.GREEN
            }]
        },
        label: "eVcnBfjTs",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: yRITVshqW
        }
    });
    const bNQQrirlBIknulY = dkVkwAbRuWVziX.type
    const ToaHjGxuESiAbhFSQ = HtRpyNeV.features
    const bbEEYGxsnTZ = WMKhUfWcccu.finish();
    const RrCmxnZ = uLZwWDWjljPOrk.label
    const vlHQMwmQzmhElgVWIi = jhESQqRoDEUbZ.label
    const JLeFcbJWnL = await navigator.gpu.getPreferredCanvasFormat();
    const JnPZRKp = RRapqo.count
    const VXJzevHh = HtRpyNeV.label
    const HqeRzArrS = HtRpyNeV.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r8unorm",
        label: "XsuozlLYKkhsq",
        size: {
            width: 838,
            height: 613,
            depthOrArrayLayers: 61
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["r8unorm"]
    });
    const mEIaadIdlbDqQNt = HqeRzArrS.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r8unorm",
        label: "XoZYBGqNwfAa"
    });
    const kAUmMgnewGoutwWfq = QNFCBeqIGHg.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.14517395808716937,
                g: 1.2652530205381551,
                b: 1.9827436487047982,
                a: 0.9743269173420843
            },
            loadOp: "load",
            storeOp: "store",
            view: mEIaadIdlbDqQNt,
            depthSlice: 45
        }],
        label: "iLChitzrGCCZQpNe",
        maxDrawCount: 2808138450,
        occlusionQuerySet: dkVkwAbRuWVziX
    });
    const GttloMVFLSiesGBIVSV = dYzKdkxAenOBDoFNiOBo.label
    const MtkZn = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const nirPPrmSCukqE = QfUWWXP.label
    const MQuguIjJpZswQbgaxiuB = HtRpyNeV.createCommandEncoder({
        label: "OdhDiqRArvOoVaNu"
    });
    const qzAamwZkS = MQuguIjJpZswQbgaxiuB.beginComputePass({
        label: "OREQSoWUbbfOwzsAFERR"
    });
    const YBvSRtvFrldMcxhn = HtRpyNeV.features
    const qARhMGHEJNxgmdSupXTi = HtRpyNeV.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: ADyroNPcFVnGJNyJNDUF
        },
        label: "YqFLr",
        layout: "auto"
    });
    const tAONjxOVvmEQyliMDi = HtRpyNeV.createCommandEncoder({
        label: "CHyhXDNQsdjTIBfnz"
    });
    const xSFVYCbTDxD = HtRpyNeV.createBuffer({
        label: "sBcWSxlPlnXGVEAMnHoB",
        mappedAtCreation: false,
        size: 170629496,
        usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.INDIRECT | GPUBufferUsage.INDEX | GPUBufferUsage.UNIFORM | GPUBufferUsage.STORAGE
    });
    const sDDvOcgAIYAKcdMHC = HtRpyNeV.features
    const XwLTLlyxzbyBtaitty = HtRpyNeV.queue
    const MbTaHzO = qARhMGHEJNxgmdSupXTi.getBindGroupLayout(0);
    qzAamwZkS.end();
    const acERCSglCaf = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const HeyUymqZYSyJeaINzJ = HtRpyNeV.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: ADyroNPcFVnGJNyJNDUF
        },
        label: "GGYnvfDPMNOdyu",
        layout: "auto"
    });
    const YOUiCjq = HtRpyNeV.createCommandEncoder({
        label: "caoQWAeUEKfUTzfuT"
    });
    const EpiiNpcTIL = EnOUn.isFallbackAdapter
    uLZwWDWjljPOrk.end();
    const TsKgxHIsBGmOlG = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: nxCWKDNVY,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "bgra8unorm-srgb",
                writeMask: GPUColorWrite.GREEN | GPUColorWrite.ALPHA | GPUColorWrite.BLUE | GPUColorWrite.ALL
            }]
        },
        label: "lqWrj",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: rSdKOuqiHZeHeWS
        }
    });
    TgPhrlrWRsEOLNbzp.setPipeline(TsKgxHIsBGmOlG);
    const ufYbhKQzmPdDlQiI = NOVptIkQitaDtYk.beginComputePass({
        label: "BzzCUbmHR"
    });
    const QpzEHqd = HtRpyNeV.queue
    const fEoDZIc = HtRpyNeV.createShaderModule({
        label: "vertex",
        code: PCuQxBwaFefPJG
    });
    const eypNQAdq = dkVkwAbRuWVziX.label
    const sjEEyRxQhtXenAZR = HtRpyNeV.createQuerySet({
        count: 372,
        label: "RvXloDVRRWSQFqxQLK",
        type: "occlusion"
    });
    const vTPDGJvnWXuhhrJC = kAUmMgnewGoutwWfq.label
    const IEBfELNWpwNFd = await navigator.gpu.getPreferredCanvasFormat();
    const RasdL = HtRpyNeV.createBuffer({
        label: "SZRBrbxIHdTrEY",
        mappedAtCreation: true,
        size: 35689452,
        usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.INDEX | GPUBufferUsage.INDIRECT
    });
    const QReoQXHipgHdchy = HtRpyNeV.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: nxCWKDNVY,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "one-minus-dst",
                        srcFactor: "one-minus-dst"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rg8unorm",
                writeMask: GPUColorWrite.RED | GPUColorWrite.ALPHA | GPUColorWrite.ALL
            }]
        },
        label: "oZLNTeqBII",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: fEoDZIc
        }
    });
    ufYbhKQzmPdDlQiI.setPipeline(qARhMGHEJNxgmdSupXTi);
    XBoyUXIyikU.end();
    const XtAggETKGLcp = HtRpyNeV.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: VcnsbAshXgZNpc
        },
        label: "GPhPTIs",
        layout: "auto"
    });
    YAHcdmuIQUnici.writeBuffer(ESfLxTwBQtEvVdEKBy, 0, EzADbDljxTULKS);
    const njyGOLh = HtRpyNeV.createBindGroup({
        label: "qARhMGHEJNxgmdSupXTi.bindGroup",
        layout: qARhMGHEJNxgmdSupXTi.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }, {
            binding: 1,
            resource: {
                buffer: ESfLxTwBQtEvVdEKBy
            }
        }]
    });
    ufYbhKQzmPdDlQiI.setBindGroup(0, njyGOLh);
    const vRGbMSVDAIV = kOBEuXvgUHPyurCW.type
    QmcGCFtMkjejseoHM.writeBuffer(ESfLxTwBQtEvVdEKBy, 8, ApiUxcXcnEFKIQr);
    const qZwKhpx = dYzKdkxAenOBDoFNiOBo.label
    const MKVjCgHnTSvNoMsilYA = jhESQqRoDEUbZ.label

}
main().catch(console.error);