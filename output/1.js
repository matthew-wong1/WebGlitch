const {
    create,
    globals
} = require('../../dawn_newest/out/Debug/Debug/dawn.node');
const fs = require('fs');
Object.assign(globalThis, globals);
let navigator = {
    gpu: create([]),
};

if (!navigator.gpu) {
    throw new Error("WebGPU not supported on this browser");
}

function loadShader(file) {
    try {
        const data = fs.readFileSync(file, 'utf8');
        return data;
    } catch (err) {
        console.error('Failed to load shader:', err);
    }
}
const reKsEPeWRAUvcwrO = new Float32Array([9630, 9846, -6416, 8155, 7962, 2167, 8702, -5012, -7500, 4387, -6479, 5745, -9337, 2857, -4222, 5924, -1971, -4333, 7189, -3121, 8580, -6631, -4235, 7407, -8428, -8074, 5192, 2461, 3577, 759, -6589, -3301, 9435, 882, 3691, 7617, -9928, -2340, -6369, 5709, 6540, -8829, 1326, -9801, 6582, -171, 2187, 397, 2957, 815, -7886, -5640, 1150, -4416, -1749, -4621, 4150, 5374, -1933, 3990, -7063, 9139, 1567, 6909, -1563, 8489, 3948, 6613, -7122, -2793, 57, 8986, 7728, -9934, -5613, 6794, 7860, -5282, -8587, 6601, 8151, 5716, 3022, 7871, 1227, -5086, 6124, -5153, -8996, -3852, 4452, 1107, 8964, -2339, -4029, 2121, 9768, -5272, 4733, 5040, 1892, 4520, -6015, -4311, -1372, 8321, 4973, 4353, -8927, -3948])
const vXAMBjMCm = new Int8Array([4500, -1086, -8607, -8796, 3042, 67, -96, 5817, 4117, 543, -1299, -1923, -8037, 9649, 3815, -9206, 2263, -999, 748, 2030, 5143, 6942, 2317, 5779, -3429, 7588, -4034, -5910, 5970, 9412, 6680, -4705, 9193, 2951, -5068, 7639, -3302, 6057, -1466, -3764, 1446, -5905, -2883, 9826, 8091, 3343, 8201, 3319, -5429, -64, -5602, 4746, -2677, 9456, 5551, 7679, 4797, -7385, -5162, 1685, -5528, 3213, -357, -9347, 1320, -6515, -6539, -6976, 2865, -2893, -3993, 8974, 3324, -1464, -8130, -350, -8170, -5085, 8604, -1615, -9444, -5882, 3706, 4323, -4122, -6567, -1917, 369, -7373, 9001, -2787, -9790, -7440, -4653, -1436, 7598, -4694, 5865, -6469, -1464, -2205, 8878, 3747, -9536, -5994, 63, -4004, -2351, 4338, -7607, 6445, 4272, 3641, 6737, -7304, -2111, -8265, 9358, -8967, 4449, -8132, -3938, 1566, 2377, -2235, 1054, -8081, -3023, 6708, -118, -1530, 5694, -3124, 7512, 9162, 5703, 651, -6091, -8293, 7875, -5938, -708, -6465, -6907, 9828, 849, -5642, 7149, -2955, 2056, -2024, 8515, -3659, 7674, -2206, -9940, 1711, 6176, 4678, -9645, 6556, 6735, -9207, -8972, 3301, 5435, 1006, 522, -1742, 1054, -6334, 3202, -6402, 7545, -6505, 379, -3113, -579, 387, 772, 6410, 5402, -1739, -9458])
const ylTQQJlanKMOEVKd = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const ZaWwXcrrLda = new Float32Array([-4133, -8705, -7095, 4241, 644, -451, -2273, 1409, 6786, -3947, -6158, 5498, -7396, 3237, -2810, -34, 7150, -8540, 2298, -6770, -307, -6657, -6222, 5493, -2568, 7893, -254, 2381, 3795, -7606, 9768, -3024, -7225, 1912, -6863, -9909, 4975, -8045, 3470, -9536, 2814, -3971, -2518, -3139, 1174, 4430, 7426, -8309, -1022, -9120, 6019, 4276, -9461, 3641, -8179, -2673, 7902, -3585, 9406, -96, 5482, -5561, 6653, 3372, -5911, -6781, 6206, 3399, 7882, 4104, -5754, 7101, -7054, -1664, -3475, -7428, 4706, 2014, -7013, 8550, 7563, -9243, 6481, -2059, 734, -8299, -1730, -3204, 1368, 6527, 2707, 6610, 3590, -1826, -1672, -3669, -693, 4467, -6582, 9066, -6416, 2164, -2368, -4310, -7532, -4990, 5531, 8534, 4106, -4100, -4480, -1318, 7066, 8198, -6839, -2464, 4757, -6489, 3772, -7375, 3628, -925, -2052, 1431, 6494, -7470, -3202, 2152, -6611, 5726, 9406, 6900, -6628, -2720, 3305, 4459, -7925, 3389, -3095, -582, 7817, -4544, 680, -33, -9596, 7176, 6188, -3685, 8466, 7448, -4887, -6656, 7632, 9653, 6095, 2209, -6546, -8739, -9590, 2329, -8865, 4898, 4236, 4843, 2380, -1261, 4246, 6003, 5360, -7772, 850, -591, 1029, 184, 3184, 5471, -5819, -5113, -3740, -1863, -739, 3621, -6999, 9879, -1415, 5881, 1664, -9652, 2194, -6971, 2325, 5009, -9251, 5910, -523, -2749, -9699, -4287, 582, -434, 4722, 8693, -6137, -1382, -310, 4281, 7704, -1943, -1263, 4511, 2607, 4943])
const DztvJZt = new Int8Array([-8069, 2718, 9962, -2989, 7757, -7366, -2032, 2739, 5666, 1936, 1047, -8298, 857, 9762, 8570, -5929, 2009, -2478, 4682, 402, -6148, 1547, -1332, 2833, 212, 5621, 476, -6950, 8017, 7150, 6232, -1998, -7286, -8606, -6023, -5248, 5140, 670, -6065, -3620, -7210, 5837, -3397, -4111, -8665, 6809, 8332, 4051, 1396, -7185, 5600, 862, 9283, 9251, 3930, -4279, -1700, -9718, -4908, 5777, 9617, -2560, 2323, 4754, 6648, -448, 2579, 8333, 8097, 7279, -1145, 8709, -3844, -5548, -1385, 6866, -6405, 3545, 5687, 5420, 5692, -4228, -1521, 3329, -5732, -6701, -9100, -3386, 8414, -7980, -7018, 3521, 3791, 9032, 5577, 7439, -9875, -5889, -7231, -7104, 1021, -5314, 229, -8967, -624, 9916, 7734, 7805, -8692, -9280, 6232, -9061, -8083, -3645, 2789, 2114, -7294, -5733, 9746, -9528, 8689, 1712, -9793, -2116, 882, -3773, 6488, -7257, 9502, 5812, -7583, 211, 2323, 9128, 6024, -8003, -3631, 9547, -4349, -8665, 9347, -9596, -2490, -839, 4210, -2649, -5390, 2385, 6056, 6150, 9248, -2988, -6605, 1900, -1791, -1363, -1849, 4126, 1442, -6472, -8446, -8991, -4405, -1882, -1263, -7295, -5560, 2124, -8579, 6078, 1393, -3109, 5392, 7957, -9825, 8028, 8995, -469, 5101, -5652, 3336, -9001, -8274, 6023, -5223, -9164, 6122, -4225, 5539, 3809, -418, 4573, 6797, 5277, -298, 7306, 9324, 8192, -7233, 6358, 183, 7088, -5756, 7653, 4427, -2650, -7404, -799, 1971, -86, 645, -7448, -5356, 9189, 3915, 8467, 2919, -9743, 4472, 8025, 8133, -3414, -9086, -8292, -1560, 6724, 2296, -2972, -4338, -6248, 5559, 179, 5329, 830, -5789, 3119, -2258, -7348, -5499, 3584, -2176, -8273, -9043, -2721, -5983, 8776, -1574, 4065, -1243, -1942, -2527, -6619, -2306, 9390, 3801, 3893, 4677, -1413, -1676, -7888, 1731, -6584, -8097, -7687, 5234, 2667, 2832, -8259, -7735, 9135, -4771, 3601, -5916, 3502, 1192, 5699, -4424, -6710, 2344, 1863, -8828, -6464, -9805, -8774, 9272, 8982, 2287, 6123, 1481, 8040, 765, 8673, -1410, 7234, -543, -142, -1283, 2790, 4093, 6173, -5369, -4362, -1310, -5639, -6008, 1273, 6882, 5117, 4130, -6717, -5916, 6131, -6736, -9676, -6833, -7493, 4533, -4779, 6775, 3653, 8513, -5967, -9485, 9949, 7588, -497, -3602, -6286, 9313, 581, -600, -2360, -9762, 6356, 7823, 180, 4898, -4976, -6643, -4935, -9776, 2796, -6590, 5471, 3172, -3691, 3248, 4287, -3526, 5246, -5469, -8757, -1677, 2536, 2252, 3417, -2796, -4011, -3566, 9006, 8858, -4383, 6618, 372, 2149, -7296, 641, -4905, -3392, 333, -2466, 3559, 4773, 3316, 8577, -2972, 5018, -2015, 6584, -7863, -5664, 887, -2972, 1154, 8669, -1305, -6981, 9179, -2978, 2467, 4053, 5796, 8518, 1589, 144, -2518, 7776, 8551, 4846, 2472, 6885, 8445, -9555, -1279, -3272, 7547, -1992, 1351, -9337, -765, 622, 616, 5237, 2817, 3630, -6622, -950, -1498, 9583, -1539, 6736, 8534, 3053, -2882, -4822, 125, -6820, -7744, 63, 1597, 3794, -2805, 4107, 5033, -2494, 7134, -4540, -9348, -8566, -1137, -9566, -1964, -1783, -1908, 2065, -1830, -1608, -33])
const XiBKdzjDUB = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const gZRSveAgarVJelQyh = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const yOVnmhhUJRHBbbm = new Float32Array([7131, -2061, 3317, 9214, -2368, 3426, -9111, -1859, 3944, -4938, 977, 7189, 9851, -8800, -9903, -9806, -71, -6773, -3282, 2459, -9598, -2646, 2688, 1052, 5000, 7032, 6943, 9232, -8653, -2592, -9759, -9088, 8346, 8284, -1686, -5161, -3509, -8010, 8344, -2143, -5863, -718, -8790, -4300, 6763, -9543, -8988, 2147, -3048, 4704, 797, -7624, 7640, -8116, 7737, 5508, -7300, -971, 398, 2819, 7856, 9057, -4278, 3357, 1817, 5184, 6366, -4205, -1421, 3427, 3796, 7166, 1177, 4557, 2298, -785, 6252, -3752, -9837, -1095, -1739, -2757, -8712])
const pNflRnQjKTTXdM = loadShader('../WebGlitch/rsrcs/shaders/compute/3.wgsl');
const OzHkmfYgpo = new Int8Array([-6069, 3036, -868, 4286, 5543, 4100, -8926, 1777, 9816, -5691, -6274, 84, -5579, -4902, -3219, 3273, 1259, 5682, 4182, -6243, 5694, 485, 710, 768, -2896, -2024, 9242, 6001, -4268, -2779, -414, -7755, -5761, -6369, -7351, 4146, -4996, 8058, 3577, -7749, -9477, -8936, 3072, 9937, 1394, -2748, 4775, 8301, -615, 4374, -2473, -188, -7682, -4684, 2356, -54, 8823, -8610, -3300, 180, 6837, -3068, 7300, 8992, 9857, -4707, -4192, 9895, -8963, -3668, -2412, 9369, -3399, -4466, -4606, -5336, -5171, 9453, 8970, 1132, -8894, -7489, -8684, 5266, -7503, 9497, -2255, -8165, 7752, -1393, 3053, 7843, 1514, 4750, -3505, 9807, 1433, -5000, -3203, 568, -7806, 1515, 9587, 4961, 8049, -6546, -749, -7818, -2876, 4208, 738, 4466, -1655, -9111, -6872, 8299, -5281, 971, 2118, 3783, -5952, -3591, 4951, -2981, 3508, -4923, -3758, -2919, -5880, 7422, -2148, -7282, -6802, 573, 618, 5383, 2508, 6085, 7342, 8275, 8122, 4115, 4652, -9464, 1002, -389, 216, 3800, 4708, 5640, 4743, -5149, 4932, 6732, 4453, 6420, 8467, -5983, 2723, 3183, -7112, 6723, -224, -5439, -944, -6700, -40, -7549, -9933, -5943, -2069, 9232, 5013, -4581, 8075, -5530, -6031, -9749, 6003, -1000, 3358, 8117, 8664, -4813, -6639, -9863, -4239, 3464, -387, -5480, -1045, 7578, 933, 7857, -3367, 9537, 8853, -721, 1596, -6703, 5285, 4154, 9864, -4543, 5114, 7494, 486, 701, -2665, -2375, -4767, 5373, -6687, -5375, -8015, -2068, 1947, -1148, 786, 5049, 2004, -4993, -7973, -8462, 2330, -1015, -3349, -5829, 7145, -6845, -3942, 7745, -1489, 7595, 712, 4676, 8049, -6662, 3231, 6845, 6549, 5344, -8730, 7518, 924, 3606, 3940, 7137, 1165, -4855, -9492, 5459, -9994, -8997, -277, 1372, -5706, 6628, 2126, 4437, -6592, -2961, -5843, 9738, 9547, 4979, -1486, 9613, 7315, -7721, 6205, -6812, -7944, -1577, -5638, -4240, 9173, -8983, -2161, 2860, 4217, -9333, 5417, -5545])
const HIAHDN = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const YlKebzJtskGTS = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const sdoamijxIcWDUhlqj = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const RjwUEV = new Int8Array([-183, 2842, -5077, -2628, 3992, -9742, 9923, 2513, 9996, -5757, -7990, 4051, -4808, 2936, -1278, -9283, -7517, -4809, -1135, -3219, -1151, 9119, -1907, 5033, -9578, -1058, 2382, -599, 9823, -7379, -9095, 8353, 1022, 719, 5711, 6663, -7085, -2100, 1013, 8472, 9758, -9390, -1918, 6412, -8859, 7596, -4635, -8024, -3772, 8002, -78, 8065, 990, 1649, -613, 6378, 9757, -9140, 5525, -9109, 3103, -7281, 8178, -5209, -42, 1892, -7920, -9141, 6370, 3314, 4132, -3180, -547, 5274, -9427, 3736, 9753, -9002, -5176, 839, -7763, 1028, 4861, 9491, -3916, -6819, 2470, 5282, -5121, -98, -4706, 9116, -4581, 8038, 3755, 576, -4267, -2250, -5394, -3710, 9530, 4857, 1516, 1103, 9997, 1431, -9818, -922, -1195, 5918, -795, 7542, 7199, 5909, 2049, 3496, -271, -924, 1563, -711, 4869, -1010, -2092, 6073, 9225, 4909, 7999, 5998, 3999, -1763, -2739, 1234, -2020, -239, 6109, 2581, -5724, 4089, -118, 4356, -9205, -285, -8274, -4435, 9973, 8294, 504, -6005, -3784, 6164, 6672, 9315, -4875, -1932, -7398, 9220, 4454, -867, -3530, -306, 8978, -9955, 563, 4038, 4137, -1712, 4511, 3150, 3517, -7375, 4392, 4327, -5704, -5804, -5995, 992, -9872, 6152, -529, -8564, 1718, -9158, 4774, 9482, 6597, 4645, -4931, -7652, -6, 5311, -5644, -9996, 8208, -6416, -624, -7513, 1571, -9185, -2039, 3677, 6296, 8806, -2707, -8011, 135, 8098, 5706, -8840, -6749, -8156, -1174, -1026, -6811, 1136, 2614, -5652, -7566, 1537, 2837, -9671, 5688, 6372, -1493, -2622, 4177, 6836, 3307, 3484, 508, 5280, 9457, -8789, 9974, -6041, -738, -4367, 3572, 5219, -2497, 3316, 8615, -5998, -3398, 4677, 2264, -7746, -7248, -5092, 6473, -7263, -4163, 2603, 8812, -665, -9207, -317, -7611, -2240, 368, -1133, 4957, 5908, 1455, -934, 9434, 7659, -8618, 8475, -2409, -854, -1024, 1638, -1721, -4275, 828, 6011, 7886, -3650, -3887, 4062, -3426, 7401, 9617, -2258, 5043, 322, 243, -7954, 3765, 7304, 4615, -7058, 1011, 2786, 3447, 9260, 9859, -1642, -7855, -1207, 9152, -3819, 8641, 4026, -3771, 3758, -2674, -1970, -8852, -9565, 4061, 7618, -1111, 2187, 2804, -675, -2608, -8141, 7663, 4718, 1148, 9791, 1943, -6653, 9571, 2241, 8710, 1770, -7366, 7617, 8128, -6194, -415, 6017, -2474, -181, 1492, -904, 662, 3617, 7467, -7561, -9074, 5690, -3506, 4058, 2339, 3115, 7068, -3133, -1898, -3133, 5036, 206, 3584, -7288, 6042, -4033, -7445, 3845, -9364, -9530, 6027, 1717, 2837, 5505, -3720, 6118, 5019, 2290, -7786, 8813, -7405, -852, -9278, 8463, 347, 6772, -4950, 9026])
const bINHYOpwOvzro = new Int8Array([3464, 9846, 5434, 7380, -6470, 3307, 2586, -3262, 5101, -2919, 5340, -4290, 1997, 4935, -3303, -2131, -3547, 7873, 320, -9507, -2544, 7124, -8819, -2298, 8594, 5170, 6257, -6541, -7982, 2517, 7245, 5381, -2711, -9846, 6761, 1268, 4487, -3659, -1465, -3129, 9982, -282, 646, 4480, 3883, -6958, -751, 2624, -1190, -1571, -3519, -2336, 4558, 8349, -8431, -3504, -4221, -200, 3174, 1361, 5053, 3891, 838, -9226, 3415, 5319, -236, -8791, 9122, 7146, -193, -6023, -6787, 216, 602, 7731, 1309, -236, -4132, -964, 2705, 3279, -3856, 8986, -3033, -7306, -5279, -6450, -4350, 778, -3834, 6730, 888, 8669, 8413, 1488, 8721, -582, -3876, -2534, -6230, -4648, 1867, -1163, 6698, -5692, 556, -2535, -3874, 6710, 5186, 8670, -3363, 4871, -2533, 435, -9309, -203, -6373, 7027, 4461, 1025, -1182, -7023, -5393, 2363, 8116, 6723, 1474, -2051, -1373, 8146, 6283, 1879, 7548, -1645, 8640, -9634, 5210, 571, 4261, 5433, -8037, -2771, 8460, 8587, 547, 1797, 8873, -674, -2612, -8808, 6600, 9308, 669, -7308, 2303, 6234, -5702, 4748, -2491, -9492, 81, 4698, -6770, 9721, 1631, -4753, 2270, -1536, -6930, 3404, 1529, 9059, 6472, 3557, 4474, 8870, -6518, -1650, 7057, -5856, -8296, 6921, -1827, -1944, -8085, 8153, 6439, -5481, 562, -8694, -2004, -7621, -6556, 3456, 9694, -6395, 6727, -1853, 3996, 4797, -3076, -194, -3377, -2143, -8150, 8772, 5101, 174, -1165, -9195, -7666, -4510, -3170, -4920, -4296, -6831, -3409, -4377, -8466, -7531, -1419, -7775, 1325, -3102, 2700, 8335])
const LltrqQsTHovdvHnZZ = loadShader('../WebGlitch/rsrcs/shaders/compute/3.wgsl');
const hzzYNUysz = new Int8Array([4618, -8067, -225, -9944, -2380, 6984, -5659, 8122, 6186, 2071, 9680, 4140, -5623, 1611, 6842, 5361, 5858, 9343, -1377, 2401, 9226, -4752, 9016, -2943, 8248, 7065, -6604, 3667, 1873, -9678, 1925, 2378, 1526, 3587, 8298, -105, -4415, -8567, -8256, 9802, -2723, 1874, 1780, -4570, -3687, -2, -1439, 5434, 2458, -8633, 1482, -1379, 4404, -9524, 1810, -116, 3102, -1011, -7297, -7162, -1198, -8627, -5671, -991, 3523, 5602, 4216, 2389, -6511, 1990, 313, 8207, 8592, -7534, -7084, 3465, -7824, 9171, 7186, -3183, -3557, -9021, -6193, 1309, -7003, -6287, 5241, -7626, -8318, -3971, 8581, 5849, 619, 5655, 6042, -1493, 2793, 3597, -1439, 6990, 5985, 8341, 1026, 1575, -4428, 4961, 7220, 7184, -1510, -2035, -1029, 5613, -8848, -8501, -3463, 295, -9865, -6203, -7088, -8672, 7052, 1341, 8489, -8251, 8214, 4807, -1620, -8583, 5061, 8205, 7183, 1003, 1149, 2245, -8309, -6828, 5139, -2105, -369, 4658, 9244, 52, -7860, 2125, 2726, 6481, -9515, -6818, 6014, -7010, -3891, -2455, -7233, -6257, 9068, 7538, -9293, 6280, 4881, 3309, -5562, -8794, 2626, -3204, -5694, -9363, 136, -8761, -2341, -9448, -7182, 3988, 6736, 4640, 8925, -2834, 6309, 1620, 3458, 6096, -7722, -8453, -8308, -7460, -6038, 2149, -8830, -5583, -587, -347, -9314, -9624, 3959, -2190, 8291, 9270, 6686, -9333, 9787, 6610, 3588, 2622, 2134, 6275, 2067, -3506, 2943, -9144, -7532, -7766, 8377, -6603, 1969, 8517, -7969, -6716, 5317, -4971, -891, -36, 2486, 5878, -1671, -3270, -3342, 8797, -9534, 9866, 8675, -7516, 6215, 787, -4491, -3788, -6035, -6569, -4241, 4106, 9597, 8575, 1503, -3468, -6420, 9653, 9745, 7838, 2775, -2248, 6861, 513, -9622, -2882, -3204, 3154, 8957, 2909, 2110, -1649, -6423, -5438, -4654, 9063, 718, 4262, 7405, 8848, -4146, 3417, 4308, 3695, 2036, 8480, 2827, -1597, 408, -9667, -6881, -3035, -4337, 8499, 1320, 9884, -2964, 5361, -894, 6665, 1117, -2537, 1179, 9664, -5302, 9793, -4574, 7270, -9772, -5881, 8392, 9289, 7908, 5195, 1745, -9112, 4095, 4551, -7747, -9339, 1324, 5230, 2819, -9220, 1281, 7043, -5367, -9210, 8722, -3849, -418, 63, 2209, 4414, 9945, -7742, 1282, 7240, -5153, -7515, -5761, -6952, 8337, 2933, 1793, 3438, -4036, -3856, -4227, 264, 8318, 1755, -1643, 140, 185, 586, -1745, 6271, 4068, -1265, -9878, -5494, 7168, -6633, 1658, -8534, 4419, 8266, 716, -4842, 5381, -5535, 6673, -8632, -2056, -6461, -2690, 9481, 9832, -9820, -3846, 119, -5148, -6842, -9544, 1499, 1384, -4161, -8787, 2495])
const uWKaOCrJiR = new Float32Array([2958, 8770, -1600, -9328, 5127, 8699, -1501, 7583, 189, 6256, -1142, -9811, -745, 5127, -9331, -9563, 4584, -125, -8120, 8721, 8608, -4497, -4740, 4330, 9812, 885, -6595, 2208, 6860, -5346, -3672, -6043, -8610, -241, -3472, 5008, 9639, 1043, -7266, -8919, 1506, -2156, 6505, -2891, 3292, 7679, 3402, 3036, 7414, -9008, 902, -5605, -4029, -7501, -8696, 3527, 3173, -6779, -7574, 6850, 589, 6983, 7061, 1652, -4410, -3082, 1371, -771, -4543, 9330])
const BwZivtt = new Int8Array([5165, -197, 9438, -2703, 3130, 1521, 8131, -1735, 5492, 6286, 3190, -2706, -4781, 2148, -7769, -605, 6352, -5810, -4252, -8753, 5825, 9351, -5901, 3370, 7195, 2911, -9469, -2799, -3549, 1525, -2539, -2493, 9299, 1512, 2447, -7705, 3737, -7475, -2475, -9896, 5784, 1357, 4930, -8278, 4989, -9433, 7737, 334, 3196, -3472, -2215, -3996, 8892, -4720, -7139, 8907, -284, -5098, -2596, 9606, 5941, -6736, -194, -3669, -5477, -8192, 5701, -9008, -7868, -7063, 5003, 8788, 6503, -3666, 987, -4394, 1545, -2984, -718, -2184, -6927, 8451, -9236, -197, 9262, -3502, -437, 6905, -8229, 9749, -2924, 3755, -4058, 4304, -8532, -6759, -4020, -1823, 3742, -1904, 7280, 9888, 8921, 5607, 5103, 2719, -9745, -1466, -762, -2630, -3698, -8491, 6917, 8470, 9813, -6849, 4977, -7592, 7796, 4190, -6507, 9495, -1577, 9529, -5911, -8332, 5535, -9361, 6601, -506, -3738, -3485, -2190, 7678, 8284, 7863, 6385, -6081, 3137, 5526, 9802, -2561, 152, -3074, 3625, 2370, -6004, 6927, -4062, 207, 3665, -4649, -5937, -9115, -4824, -8000, -3261, -8093, 9634, -4501, -4997, 796, -2155, -4219, -6961, -4901, -2330, -1911, 1504, 9182, -3751, -9715, 3916, -4809, -3135, -6436, 8944, -223, -7673, -3380, 598, -6136, -2867, -9191, 5734, 372, -465, 730, 2112, 543, -2009, -3474, -8436, -7016, 7145, -3748, 9692, 6258, -1583, -5380, 2761, -2726, 4649, 9311, 3069, -4498, 9613, 2215, -1330, 4375, 6522, -8446, 6842, 8125, 5326, 5169, -203, -1954, -8678, 3965, -6396, -9116, -1105, -4477, -7335, -8833, -1714, 3285, -2192, 6759, 2133, 6746, -1859, 9464, -5388, -2473, -5030, -3294, 7847, 8444, 856, 786, 9366, -5578, 5197, 4492, -6838, 512, -595, 7029, -3595, -7829, 6077, -6611, -1292, 5249, 4737, 1654, 6374, -5136])
const HjcCqXSOCuIuQPBSRQ = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const YvbSQRFJIfbYGfkkNDp = new Float32Array([-2703, 116, -8500, 7668, 8617, -8484, -776, -2198, 8219, -3033, -788, -966, -7194, -799, -10, -3719, 1641, -7017, 2490, 3479, 3003, 5352, -3263, -5099, 4871, -4909, -9460, -7487, -8090, 400, 9606, -647, -2477, 4984, -5253, 4417, -9142, -1111, -5963, -2162, 8525, -7103, 6001, -7508, -9584, 3067, 5440, 4621, 7811, 7442, 6863, 4525, -9627, 9214, 7070, -4343, 946, -6555, -9799, 3441, -9786, 4216, -1814, -1500, 823, 8040, 5842, -3607, -4838, 2652, -8559, -8707, -3528, -5858, -3836, -93, 1034, -8016, -2358, 7654, -9146, 3183, -8887, 5241, 9068, 5068, 3833, -9916, -5476, -7996, -1849, 799, -9106, 632, -4270, 9323, -2988, 2648, -2149, 993, 3658, -9973, -3080, 496, -1305, 337, -2691, 560, 4637, -8637, 6112, -2245, 2113, -4335, 1333, -9226, -5600, 8825, 4062, 857, 7144, -1553, -5902, 7982, -5835, -2710, 2841, 9788, -3941, -2799, -7689, 9957, 263, 3903, -875, -8635, 6301, -3170, 929, 7469, 4837, -381, -7527, 7355, 6577, 2407, 7679, -1414, 7159, -343, 8418, 8171, 9571, 6685, 849, -9543, 9285, -9633, -4649, -9072, -6872, 6385, -9652, 2956, -3069, -8090, -9439, 6008, -7651, -8724, 7308, 418, 2677, -5509, -1391, 5609, 7596, -5794, 3341, 7534, 7217, 3323, -1755, -5669, 9011, 4076, 863, -3413, -3039, -7914, 5685, 9907, 6138, 3685, 8966, -6496, 2238, -3521, 730, 9933, -3122, 6764, -9356, 4738, -8431, 4473, 3264, 5466, -4407, -6943, 9953, 6599, 1012, -2735, -2001, 522, 4700, 7145, -1030, 3154, -6260, -9822, -3739, 8685, 2788, 3728, -8436, -9317, -6021, 48, -2686, 8079, -4453, 3788, -5, 2590, -5933, -954, 8257, 7841, -5941, 2579, -1951, 7693, 2205, 7967, 948, 4352, 5585, 5566, -2027, 9079, 4601, 8848, 8465, 1323, -3611, 736, 5029, 8071, -6820, -8753, 762, 8015, -8338, -6836, -5622, 1620, -3941, -7130, -8251, -1509, 7233, 7468, -3703, 3210, 1091, -7116, -217, 9118, -7328, -2556, 5532, -4755, -4344, -4817, 9694, 3172, -2794, 549, -5238, 1509, 6755, -6313, -7975, 1720, -290, 4315, -9101, -7592, 6519, 5992, 4156, -9140, 2269, 349, 3215, 3951, -4910, 5792, -5549, 9203, -719, -9934, 4172, 6011, -8170, -4099, -7756, -6188, 5149, 5037, -2549, -2663, 9265, -4292, 1131, 3369, -9123, -2962, -7826, 7931, 7232, -6662, 9240, 8124, 1932, 439, -710, -9376, 3813, 1584, 3970, -5381, 3860, -2931, 4658, -6906, -3054, -7903, 7966, 9317, -4329, 8678, 619, -5432, -8079, -4704, 1471, -5458, -2469, 5866, 6755, 7167, -3085, 8854, -5639, -9267, 5725, -1787, 8566, -8234, -845, -5266, 9879, -859, 4445, 9915, -7271, -8618, -6319, 8050, 790, -567, 5607, -838, -3815, -8508, 6047, -5192, -6233, 5438, 3401, 3260, 1419, -9509, -1194, -9925, -126, -2875, 9919, -8114, -7749, -1038, -3759, 3245, -975, 2456, 4273, -733, -8242, 6888, 3614, -3367, 3863, -5910, -4060, -5194, -2904, -5406, 9585, -779, 9240, 2111, 2951, 8874, -6095, 9439, -7125, 2472, 2321, 3875, 3931, -2663, -4475, 3826, 6852, -1179, -9453, -1299, 7879, -5131, 8537, 1735, 3403, 9023, 1998, 1329, -4087, 6001, 1442, -3918, 9467, 9781, -3605, -8883, 7387, 4173, 6348, -5701, -4776, 7938, 5611, -3771, 2801])
const Lykin = new Int8Array([8182, -4674, 6404, -854, -9885, -6067, -2756, -835, 4510, -2048, -8089, 5706, 8049, -6260, 5351, -3883, 2167, 3519, 8598, 3762, 3417, -4072, -6283, 3280])
const NjXJzrPq = new Int8Array([3874, 1591, 3062, 4687, -4177, 3444, 6752, 8627, 3853, -8162, 5402, -1034, -5077, -2765, 2855, 5404, 8486, 2246, 1942, 3298, -5038, 7738, -1492, -397, 8353, 2959, 776, -4493, 437, 1799, 8441, 4101, -8658, 5165, 8152, 1608, -398, -5784, 7211, -5944, 2740, -3587, -1508, -9955, 663, 6395, -3398, 6420, 2393, 6749, -2980, 6961, 4644, -6079, 3002, -5093, 1994, 9849, 6817, 4558, 1274, -4802, 9679, -9148, 4802, -4017, 1195, -1575, 1780, -3030, -5927, 1943, -8160, -9403, 5774, 9326, 6220, 7430, 8907, 2189, 2867, -7625, 6592, 75, -6379, 107, -5559, 4067, -7318, 9473, 4637, -8968, 1248, -9732, 5015, -2541, -1838, -3618, -5207, -5563, -2799, -9380, 5276, -3626, -1141, 6597, 4375, 9293, 1988, 3230, -2796, -503, 7759, 5551, -6602, -399, 5460, 9121, -2092, -2131, 4028, -7819, 214, 9264, -5090, -298, 2296, 855, 587, -1676, 4567, 832, -4804, 5641, 465, 365, -5058, -7467, -5260, -9599, 4004, 6101, 5475, -5843, -3730, -3828, -6027, 4130, -4586, 8560, -265, -4216, 6040, 255, 1598, 2006, 7979, 2241, 1148, 1126, -8908, -7259, 6449, 2333, -6837, -1296, -5599, -4107, 8510, -864, -9098, 7267, 610, -1009, -6742, -2908, -9458, -7, 5654, -5059, -3839, -3741, 7765, 2137, 5567, -7743, 5494, 1107, -9102, -3454, -6883, 8570, 9159, -678, -368, -1004, -6769, -7367, 2372, -4784, -546, 765, -5277, 6550, -1331, 7078, 4771, 6506, -1272, -2844, 8432, -2456, 925, 6288, -3940, 6462, -4389, 7195, -1599, 5365, 3925, 7184, -4711, 6051, 4865, 8617, -8311, 2790, 9688, 6536, 7646, -7469, -6028, -3394, -9388, 2391, 6749, -7962, 4404, 3142, 256, 4319, -7877, 9528, -3693, 5491, -8923, -1032, -7886, -2441, -8854, 9741, -2332, -312, 8782, 3616, -82, -529, 984, -9388, -9347, 1007, -1852, 2729, 2092, 5731, 1913, 9589, -8187, -5639, -1144, -8348, 7464, 2452, 4424, -9701, -2830, 9160, -4224, 4147, -5262, 9619, -3656, -3595, 507, 287, 21, 4217, -2964, -74, 1248, -470, -4358, 967, 6568, -6953, -9289, 8839, -5740, -1039, 2656, 4388, -5529, -90, -5467, -5024, 7999, -9381, 5182, 3532, 4025, -6784, -1166, -1368, -1682, -8897, 5199, -2723, 1311, -8075, -9524, 6253, 9495, -1548, 2243, 5194, 7139, 4614, -5315, -4965, 3864, -7671, 4500, -8379, -1579, 5842, -8367, -4930, -5259, 9135, -6884, 7417, -5645, 9581, 3971, -9608, 9669, 2743, 8399, -5509, 694, 9867, 8155, -4785, 8660, -5409, 4966, 459, 8395, 4099, -9611, -8442, -8154, 8053, 357, -2342, 212, 5929, 7298, -5533, -2094, -9890, -7163, -748, 7480, -7803, 6204, 5128, 6350, -7050, -4125, 6417, -7498, -3089, 6543, 5629, -2698, 7513, 3220, -9725, 2609, 1532, 377, -8895, 7207, -2662, 2146, 5991, -2969, 9817, -8641, 7938, 9, 9086, -7254, -5079, 842, -8495, 7832, 4937, -9207, -9746, -9581, -2022, -1868, 610, 9726, -7782, 539, 6815, -2275, -4308, 2371, -4098, -6018, 6760, -7866, 2739, 9970, -1786, 9665, -9436, -7840, -7244, -3720, -1201, 7752, -9466, -5624, 7440, 2529, -9894, -1349, -4379, -5718, 9669, -7379, 8421, 755, 9704, 5251, 1116, -217, 7897, 6404, 9252, -2375, 6382, 7106, 8364, -241, 5713, -1953, -4121, -9393, 6639, -69, 1648])
const kZFMVoOYboaCcPUEA = new Int8Array([-3448, 2677, 318, 762, 8440, 8081, -1528, -7727, -6023, -4134, -2901, 9146, 6409, 5495, 6209, 105, -9651, -8808, 5289, -5572, 1108, -8248, 1520, -719, -3013, 6628, 3906, -2353, -8199, -5424, -1763, -2746, -4734, -8098, -5944, -2802, -3176, 2463, 6653, 1469, -3301, -7306, -6824, 9054, 16, 5506, 1025, 8377, -1532, -7053, 9946, -2745, -7581, -2583, 2071, 1179, -7136, 285, 9135, -2246, -3866, 2121, 743, 9907, 4841, -9371, 5297, -4832, 3928, -1632, 2690, 2571, 5215, -7586, -3502, -7461, 1529, 3809, -8467, -5492, 4975, -1824, -4737, -8190, -5541, 720, -1883, -8629, -8802, 4353, -4858, 2513, 4243, -9719, 8662, 4015, -7847, 5694, -8215, 9799, 9414, 2097, -1481, -6323, -344, -4737, -2206, -8441, -1586, 4738, -9854, -4633, 9724, -5026, -3216, 4493, 6315, -5048, -8521, -179, 1040, -5030, 2066, -840, 4445, 857, -5473, -2871, -9425, -3586, 950, 4657, -7522, -3986, -8817, 1504, -5294, -4624, 4769, -5392, -6032, -7111, 7003, 1939, -2648, 9153, 8797, -9333, 1768, 4836, 6736, 7041, 6703, 6198, -2035, 4994, -5699, -9674, 8815, 4330, 9041, 6812, 8217, -2889, 9450, -1118, -6016, 8267, -5399, 8951, -6006, -6015, -1907, 1774, 3732, -1654, 949, 4128, 3114, 4651, 9671, -6991, 2528, -8370, 1876, -8127, 4753, -8437, 5179, -6078, -9305, -4681, -6732, 8479, 3865, 2637, 8747, 8681, 7647, -2979, -9294, 6483, 5477, -1528, 2567, -3944, -9796, 661, 4265, -6308, -1402, 2474, -4243, -3201, 2767, 2665, -6851, -4375, -1222, -3994, 7956, -2388, -9982, 6530, 2634, 6895, 280, 1571, 6684, 7213, -8722, -1051, -1845, -4622, -1279, 947, 608, 1110, 8211, 2727])
const cjMaXxKLqkHqq = new Int8Array([6322, 5304, -5913, -9239, -2036, -4271, -699, 338, 3092, 8989, -8279, 1253, 2794, 246, -4187, -3006])
const sCClXjwFbcipVlRGbl = loadShader('../WebGlitch/rsrcs/shaders/compute/3.wgsl');
const mlPKpHgeATX = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const WeuqRvVno = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const Oclem = new Int8Array([5599, -6711, -1986, -8895, 8875, -4919, 3131, 8132, -6712, 1618, 8614, 1361, -1687, -3778, 6764, 823, 9728, -9349, -257, 9422, -204, -5181, 6497, 432, -5930, 6627, 691, 8781, 4907, 7468, -9061, -522, 9001, 7544, -4481, 7061, 415, 9440, -514, -1255, 8527, 9655, -4694, 3135, -9142, -68, 1886, -2013, -6318, 9928, -3948, -9228, 377, -8534, 6546, -3369, -3923, 5754, -2780, -5909, -4209, -4190, 3672, -4218, -5002, 7413, 7227, 2888, -6685, -4812, -5211, 1665, 1266, 9774, 2064, 8290, -216, 5969, -3204, -42, 8981, 1076, 4888, -5759, -6519, 1638, -3416, 9271, 9717, -7022, -8845, -1057, -7599, 4910, 1988, 7832, -4808, -3804, 7893, 2167, -5808, -5767, 1378, 9239, -6653, -6244, -2791, -4948, 6688, 6936, -9683, 6354, 8932, -9441, 4764, -7181, -878, 3103, -4550, -5826, -9886, 7422, -4969, 1990, -4180, 8948, -6150, 2233, 9116, -5571, -8993, 1898, 1960, -3015, 8134, 8795, 6722, 8368, 9347, 7934, -3503, 1936, -7723, 6260, 8113, 7460, -9209, -3467, -5005, -2290, 3868, 5830, 1413, -437, -6848, 9086, 2584, -2234, 3462, 2203, 3630, -4573, -172, 4260, -8774, -7817, 5390, 6749, 6694, 5205, 3369, 9310, -3877, 6574, 8937, -9949, 8459, -4473, -3131, -6527, -1071, -7984, 675, -4366, 500, 7347, -1849, 8292, -6593, 899, 3443, -7662, -4362, 6824, -7012, -1511, 6062, 8965, 9393, -4657, 3072, 8120, 981, -804, 4142, 3979, 6286, 3793, 4359, 3224, -9526, 7806, 5782, -5305, -7565, 2892, 6458, 7426, 7294, 3195, 4451, 880, -2674, -8574, -7226, 6250, -653, 6588, -3050, 5837, 9338, 1801, 4816, -7599, -5171, 1124, 3349, 5470, 6785, 1806, 4683, 334, -2958, -3152, -963, -3916, 1335, 6715, 7562, -2431, 178, 5241])
const sdxmMGUpFKTCgGAYKwA = new Float32Array([-5067, -3052, -4885, 1901, 9844, -2975, 7075, -1112, -9736, 9223, 8221, 1277, 4899, -4905, -8623, 1368, -1326, -6652, -3264, -5825, -2942, 2162, 2118, -5467, 8486, 4395, 2671, -2769, -6903, 9941, -5815, -902, -6, -1817, 6482, -7966, -5664, 6765, -979, 5141, 8569, 1075, -7015, -8374, -9716, -5904, -7214, -3551, -1245, -8537, 8639, -1681, 8014, 8392, 8754, 7989, -3437, 2436, -249, 9240, 8401, -5634, -906, -727, -9, -2919, -5882, 779, 8511, 4665, 8259, -6450, -7314, -860, -8483, -7312, 7622, 2754, 5676, -3328, 9062, -49, 4811, -4990, -7381, 8737, -2947, 5679, 6655, 6873, -1731, 1035, -3945])
const edCzjWHd = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const IkIyzjlggfEmU = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');

async function main() {
    const DPeXbRywI = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const bDRKuQl = await DPeXbRywI.requestDevice();
    const liEvXAkI = bDRKuQl.createCommandEncoder({
        label: "TrMIl"
    });
    const wRZJVDBLfgJJZCTSyY = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "bgra8unorm-srgb",
        label: "dOtiuhifjuFDuJRK",
        size: {
            width: 282,
            height: 583,
            depthOrArrayLayers: 42
        },
        mipLevelCount: 4,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC,
        viewFormats: ["bgra8unorm"]
    });
    const gDJLVBUnoDuzni = wRZJVDBLfgJJZCTSyY.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "TYDDroH"
    });
    const tiVjkSPqhntRrZvPNBCj = bDRKuQl.createQuerySet({
        count: 1111,
        label: "AnxFFqUd",
        type: "occlusion"
    });
    const iajHrGKLOGmwpgCCX = liEvXAkI.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.6948421144973023,
                g: 0.8680094644246683,
                b: 0.10358140043611463,
                a: 0.6163268280194865
            },
            loadOp: "clear",
            storeOp: "store",
            view: gDJLVBUnoDuzni,
            depthSlice: 27
        }],
        label: "tazfmDbWqZCZZLrkcdsw",
        maxDrawCount: 1374640832,
        occlusionQuerySet: tiVjkSPqhntRrZvPNBCj
    });
    const fvVydiVTiHYSrMdJZ = bDRKuQl.createBuffer({
        label: "FGOzQuTCObvwPIiDDT",
        mappedAtCreation: false,
        size: 175316384,
        usage: GPUBufferUsage.VERTEX
    });
    iajHrGKLOGmwpgCCX.setVertexBuffer(0, fvVydiVTiHYSrMdJZ);
    iajHrGKLOGmwpgCCX.setVertexBuffer(0, fvVydiVTiHYSrMdJZ);
    const BsCAGrHtOfkCxjOM = DPeXbRywI.features
    const lehAfGrdPSTA = bDRKuQl.createQuerySet({
        count: 146,
        label: "eXhpNGkMtkPT",
        type: "occlusion"
    });
    const lHQDT = bDRKuQl.queue
    const HWGzNbcwvkHRVmmB = gDJLVBUnoDuzni.label
    const kARZmnEec = liEvXAkI.label
    const ULDOZ = bDRKuQl.createCommandEncoder({
        label: "uLxUPMwJLINPkrX"
    });
    const KfbFOyTEGOf = bDRKuQl.createBuffer({
        label: "hlQSnAYhrebtFMJZNCM",
        mappedAtCreation: false,
        size: 38148176,
        usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.INDEX | GPUBufferUsage.VERTEX | GPUBufferUsage.UNIFORM
    });
    const kmRsdEmTy = tiVjkSPqhntRrZvPNBCj.count
    const DRzzAlxYSL = DPeXbRywI.isFallbackAdapter
    const mTqtknMs = tiVjkSPqhntRrZvPNBCj.type
    const FRGNpqZGUWki = iajHrGKLOGmwpgCCX.label
    const xrnHYNBGEhiHLV = DPeXbRywI.isFallbackAdapter
    const ICrYhoka = bDRKuQl.createShaderModule({
        label: "fragment",
        code: IkIyzjlggfEmU
    });
    const EhKuRdrPXDsLxQ = bDRKuQl.createShaderModule({
        label: "vertex",
        code: edCzjWHd
    });
    const eeAYKVAdwRO = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "bgra8unorm",
                writeMask: GPUColorWrite.RED | GPUColorWrite.BLUE
            }]
        },
        label: "xfjaDKjeppSjr",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: EhKuRdrPXDsLxQ
        }
    });
    iajHrGKLOGmwpgCCX.setPipeline(eeAYKVAdwRO);
    iajHrGKLOGmwpgCCX.draw(7);
    const zKiBr = tiVjkSPqhntRrZvPNBCj.type
    const PyqYRcaTMDnR = bDRKuQl.queue
    const qXmSM = iajHrGKLOGmwpgCCX.label
    const BeEDqaVOUnaMpbUsbEnp = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm-srgb",
        label: "pLdSCKsODgVIAxyu",
        size: {
            width: 2852,
            height: 3803,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["bgra8unorm"]
    });
    const BXgbYBgqyhfeAO = BeEDqaVOUnaMpbUsbEnp.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "uFKUgjfeEIZ"
    });
    const lBvXcxjyFQupZHllhC = ULDOZ.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.3577242590773362,
                g: 0.49156646603973475,
                b: 0.5343641350585107,
                a: 0.6513195542016164
            },
            loadOp: "clear",
            storeOp: "discard",
            view: BXgbYBgqyhfeAO
        }],
        label: "YJDtEtoKBWOXHKUswHM",
        maxDrawCount: 2291340338,
        occlusionQuerySet: lehAfGrdPSTA
    });
    const YqQAxvlzSCvaG = lBvXcxjyFQupZHllhC.label
    const SldRJ = BXgbYBgqyhfeAO.label
    const KoznMDcdH = iajHrGKLOGmwpgCCX.label
    const LCYGiSvxmRHqax = DPeXbRywI.isFallbackAdapter
    iajHrGKLOGmwpgCCX.draw(8);
    const glkzlCpWuqOWiR = bDRKuQl.features
    const SpdQMVEvZWqyzjE = bDRKuQl.createBuffer({
        label: "QfGEKIpdkEBmJuyPyWE",
        mappedAtCreation: false,
        size: 92381880,
        usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.COPY_SRC | GPUBufferUsage.INDIRECT | GPUBufferUsage.UNIFORM | GPUBufferUsage.STORAGE | GPUBufferUsage.VERTEX | GPUBufferUsage.INDEX
    });
    PyqYRcaTMDnR.writeBuffer(SpdQMVEvZWqyzjE, 527928, sdxmMGUpFKTCgGAYKwA);
    const YcqbKARShTRhbUQU = DPeXbRywI.info
    const OpNvJhWUSIKPueM = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "one-minus-dst",
                        srcFactor: "dst"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "one-minus-src",
                        srcFactor: "src-alpha-saturated"
                    }
                },
                format: "rgb10a2unorm",
                writeMask: GPUColorWrite.ALL | GPUColorWrite.RED | GPUColorWrite.BLUE | GPUColorWrite.ALPHA
            }]
        },
        label: "WBaNdrxh",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: EhKuRdrPXDsLxQ
        }
    });
    const iQfIbDbpGWehdJxxU = bDRKuQl.features
    const XxsiIRgUjwvjwcye = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "constant",
                        srcFactor: "one-minus-src"
                    },
                    color: {
                        operation: "subtract",
                        dstFactor: "one",
                        srcFactor: "zero"
                    }
                },
                format: "bgra8unorm",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.RED | GPUColorWrite.BLUE | GPUColorWrite.ALL
            }]
        },
        label: "bDaWDVdiHGlAisx",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "cw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: EhKuRdrPXDsLxQ
        }
    });
    lBvXcxjyFQupZHllhC.setPipeline(XxsiIRgUjwvjwcye);
    const ESEhPLtsQzoax = DPeXbRywI.limits
    const IZigqiDYiRGRs = await navigator.gpu.getPreferredCanvasFormat();
    iajHrGKLOGmwpgCCX.end();
    const ypERXxPgZFKweyRNIO = liEvXAkI.finish();
    lHQDT.submit([ypERXxPgZFKweyRNIO]);
    lBvXcxjyFQupZHllhC.setVertexBuffer(0, SpdQMVEvZWqyzjE);
    const ekpYRaMkhKN = DPeXbRywI.info
    const musVsjZwuVbPnt = bDRKuQl.queue
    lBvXcxjyFQupZHllhC.end();
    const BJnniENduZW = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba16float",
        label: "MPDcUHwpaD",
        size: {
            width: 895,
            height: 658,
            depthOrArrayLayers: 61
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba16float"]
    });
    const PpvKq = BJnniENduZW.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 3,
        format: "rgba16float",
        label: "rlnKEHNLYefIaCCg"
    });
    const RqJyOuPhenF = ULDOZ.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.1433060754396593,
                g: 1.7868301206231612,
                b: 1.184417172844686,
                a: 0.05096696262091038
            },
            loadOp: "load",
            storeOp: "discard",
            view: PpvKq,
            depthSlice: 6
        }],
        label: "MkBjrUsVrerPsMmnLH",
        maxDrawCount: 394620239,
        occlusionQuerySet: tiVjkSPqhntRrZvPNBCj
    });
    RqJyOuPhenF.setVertexBuffer(0, SpdQMVEvZWqyzjE);
    const RvyQxDOUzvmtiz = DPeXbRywI.features
    const WLjprImrfZ = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "constant",
                        srcFactor: "constant"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rgba16float",
                writeMask: GPUColorWrite.ALL | GPUColorWrite.GREEN | GPUColorWrite.BLUE | GPUColorWrite.RED
            }]
        },
        label: "XOnfvofNhlGT",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: EhKuRdrPXDsLxQ
        }
    });
    RqJyOuPhenF.setPipeline(WLjprImrfZ);
    RqJyOuPhenF.end();
    const XDOomnHxLMfLR = ULDOZ.finish();
    musVsjZwuVbPnt.submit([XDOomnHxLMfLR]);
    const qNLWN = bDRKuQl.createCommandEncoder({
        label: "KbFtjMSTALJkkijjQVWx"
    });
    const uFNyobcP = qNLWN.label
    const nENSd = bDRKuQl.createCommandEncoder({
        label: "PrWGyBbimdpOtLg"
    });
    const aKxjgxlrJfGf = bDRKuQl.features
    const lJdpDXHjRZh = lehAfGrdPSTA.label
    const YTFnmciFonSsOBfu = navigator.gpu.wgslLanguageFeatures
    const GPkFCsGkNCZMiSVntkcl = BJnniENduZW.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 4,
        baseMipLevel: 0,
        format: "rgba16float",
        label: "tgOXYaqCkxrMH"
    });
    const KEIsM = bDRKuQl.createQuerySet({
        count: 3999,
        label: "hoUaSrTxuGPiTXmrZAzL",
        type: "occlusion"
    });
    const awBFaFnsSPMVDVRp = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rg8unorm",
                writeMask: GPUColorWrite.RED
            }]
        },
        label: "CJQAyOAVEdRvEfSAEy",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "back",
            frontFace: "cw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: EhKuRdrPXDsLxQ
        }
    });
    const njFucdVnke = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgba8unorm",
        label: "kNBoqorThQMquAAmnr",
        size: {
            width: 775,
            height: 4000,
            depthOrArrayLayers: 13
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.COPY_SRC | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const hcHppRBerAxIlzdSfb = njFucdVnke.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 3,
        format: "rgba8unorm-srgb",
        label: "wlVxQiCZMm"
    });
    const gLzGJLPCMFNDTz = qNLWN.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.48792170401756874,
                g: 1.3312661279273128,
                b: 0.07895419294322048,
                a: 0.8304168301910009
            },
            loadOp: "load",
            storeOp: "store",
            view: hcHppRBerAxIlzdSfb
        }],
        label: "erWKApJTeiKKDqMaXQ",
        maxDrawCount: 3864958595,
        occlusionQuerySet: tiVjkSPqhntRrZvPNBCj
    });
    const WfUnAAXiJhaSsgXKm = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "subtract",
                        dstFactor: "one",
                        srcFactor: "src-alpha"
                    }
                },
                format: "rgba8unorm-srgb",
                writeMask: GPUColorWrite.GREEN | GPUColorWrite.BLUE | GPUColorWrite.ALL
            }]
        },
        label: "CBmeiHmfsHQ",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: EhKuRdrPXDsLxQ
        }
    });
    gLzGJLPCMFNDTz.setPipeline(WfUnAAXiJhaSsgXKm);
    const BeYTSyK = navigator.gpu.wgslLanguageFeatures
    const IytEyeqgHZGGK = bDRKuQl.label
    const odpRF = await navigator.gpu.getPreferredCanvasFormat();
    PyqYRcaTMDnR.writeBuffer(SpdQMVEvZWqyzjE, 24765628, Oclem);
    const KScGSSGyKympyGScBE = BeEDqaVOUnaMpbUsbEnp.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "osjxSbhXitbOvU"
    });
    const Qrzyb = nENSd.label
    gLzGJLPCMFNDTz.end();
    const bkIfbZk = qNLWN.finish();
    musVsjZwuVbPnt.submit([bkIfbZk]);
    const EGihVwgGAsYUeEisAI = bDRKuQl.createShaderModule({
        label: "fragment",
        code: WeuqRvVno
    });
    const BfdvOCmasQhvEv = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm",
        label: "yixMNYyW",
        size: {
            width: 993,
            height: 4,
            depthOrArrayLayers: 48
        },
        mipLevelCount: 9,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const JnIOujQwvtLqPAP = BfdvOCmasQhvEv.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 4,
        format: "rgba8unorm-srgb",
        label: "fBtlvbqankBYBO"
    });
    const RxdGd = nENSd.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.638884664537402,
                g: 0.5061564850646874,
                b: 0.22841767287065795,
                a: 1.089126220833115
            },
            loadOp: "load",
            storeOp: "discard",
            view: JnIOujQwvtLqPAP,
            depthSlice: 2
        }],
        label: "BzaCDFent",
        maxDrawCount: 1892272019,
        occlusionQuerySet: tiVjkSPqhntRrZvPNBCj
    });
    const UeYNJO = RxdGd.label
    const AshAJiVDBrmZZ = lehAfGrdPSTA.type
    RxdGd.end();
    const uyJHAMP = nENSd.finish();
    lHQDT.submit([uyJHAMP]);
    const RMyOLEfaTbPQwDnGb = await navigator.gpu.getPreferredCanvasFormat();
    const xSOVvENsmIWvEH = await navigator.gpu.getPreferredCanvasFormat();
    const FqMxHFGCxERQq = bDRKuQl.createCommandEncoder({
        label: "FpbNhBPZmdjc"
    });
    const rVywLecodjWtb = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm",
        label: "SsfndB",
        size: {
            width: 170,
            height: 2997,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST,
        viewFormats: ["bgra8unorm"]
    });
    const dDbmMIQQepPqifLonZFU = rVywLecodjWtb.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "ayKjtoiK"
    });
    const TsNuvsajNGsu = FqMxHFGCxERQq.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.24412945091848215,
                g: 0.3143970078689944,
                b: 1.94137530298102,
                a: 0.04083610151673067
            },
            loadOp: "clear",
            storeOp: "store",
            view: dDbmMIQQepPqifLonZFU
        }],
        label: "wpEBWrksNxEdGn",
        maxDrawCount: 3632507564,
        occlusionQuerySet: KEIsM
    });
    TsNuvsajNGsu.end();
    const dOegMxS = lHQDT.label
    const wliUK = lehAfGrdPSTA.type
    const jycdgHWPjdfmT = wRZJVDBLfgJJZCTSyY.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 4,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "MlybvMxdJwIBsOHkVWMt"
    });
    const zfsqoIJk = tiVjkSPqhntRrZvPNBCj.type
    const XOBlJfOBHKVPkPT = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r16float",
        label: "Knowp",
        size: {
            width: 73,
            height: 628,
            depthOrArrayLayers: 32
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["r16float"]
    });
    const fpcLyquTk = XOBlJfOBHKVPkPT.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r16float",
        label: "ZhxTfUd"
    });
    const SuTKuBzjg = FqMxHFGCxERQq.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.3505087870084229,
                g: 1.0359428670036748,
                b: 0.41989456528471303,
                a: 0.05885321712217961
            },
            loadOp: "load",
            storeOp: "store",
            view: fpcLyquTk,
            depthSlice: 17
        }],
        label: "EWJFiGKXxTcsF",
        maxDrawCount: 2532983678,
        occlusionQuerySet: lehAfGrdPSTA
    });
    const lgYyLN = SuTKuBzjg.label
    const RfHHXYYHZsO = bDRKuQl.createCommandEncoder({
        label: "peHkWFUCCbPdQHUoHanU"
    });
    const uSmyBIpZbYaB = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgba8unorm",
        label: "bPIZYraKffuOd",
        size: {
            width: 3118,
            height: 2862,
            depthOrArrayLayers: 59
        },
        mipLevelCount: 4,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const PQnOQOGuqbtKUzmRBPet = uSmyBIpZbYaB.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 3,
        format: "rgba8unorm-srgb",
        label: "PJlKZMUSEKKNa"
    });
    const msUQdAsTYcOWEtreHWbX = RfHHXYYHZsO.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.710946848242594,
                g: 1.6056457787174587,
                b: 0.4103103243058157,
                a: 1.3661373037201916
            },
            loadOp: "clear",
            storeOp: "discard",
            view: PQnOQOGuqbtKUzmRBPet
        }],
        label: "ySEicWaqCMdFxaOglNv",
        maxDrawCount: 3756317047,
        occlusionQuerySet: KEIsM
    });
    SuTKuBzjg.setVertexBuffer(0, fvVydiVTiHYSrMdJZ);
    const VnDirKhkzGe = bDRKuQl.createCommandEncoder({
        label: "DhxjVGFltMRlvJDXFAsI"
    });
    const CkLMmdcLQlYKIhNPbVbM = lehAfGrdPSTA.count
    const qKZyDkdqphxoEF = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "r16float",
                writeMask: GPUColorWrite.GREEN
            }]
        },
        label: "JmFaIlZ",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: EhKuRdrPXDsLxQ
        }
    });
    SuTKuBzjg.setPipeline(qKZyDkdqphxoEF);
    SuTKuBzjg.draw(1);
    const JQOczTDeGsxLVOTQ = bDRKuQl.queue
    const kaOsuVuytpOXBNIi = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const SbtHtmt = bDRKuQl.createShaderModule({
        label: "vertex",
        code: mlPKpHgeATX
    });
    const rgRwPqWYFcfVfmoaZbmD = fpcLyquTk.label
    const rnNTGSkejglnRv = bDRKuQl.createCommandEncoder({
        label: "vMJKEQi"
    });
    msUQdAsTYcOWEtreHWbX.setVertexBuffer(0, fvVydiVTiHYSrMdJZ);
    const BwacNkoy = VnDirKhkzGe.finish();
    JQOczTDeGsxLVOTQ.submit([BwacNkoy]);
    const HqPvy = navigator.gpu.wgslLanguageFeatures
    const AOLdquLSanFACVQcdgC = tiVjkSPqhntRrZvPNBCj.type
    const ggBZSCPUoyCNgHM = bDRKuQl.label
    const RipHLkIT = await navigator.gpu.getPreferredCanvasFormat();
    const ZqNgmCXziKnKs = RfHHXYYHZsO.label
    const nuhlyTvoCPrKvYoAj = kaOsuVuytpOXBNIi.features
    const lgLMKPqk = bDRKuQl.features
    SuTKuBzjg.setVertexBuffer(0, fvVydiVTiHYSrMdJZ);
    const vMDlmYAJIEgF = DPeXbRywI.features
    const QKzkLUUfhqwTqtQD = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rgba8unorm",
        label: "fFTiCPeuLiLRB",
        size: {
            width: 3437,
            height: 1737,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const KbmcuUN = QKzkLUUfhqwTqtQD.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba8unorm",
        label: "XCmtZOZrTWtJVHI"
    });
    const HbQmIhhEwEtDp = rnNTGSkejglnRv.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.7113943810012371,
                g: 1.0051288363000994,
                b: 0.9908865945196295,
                a: 1.6230073830616205
            },
            loadOp: "load",
            storeOp: "discard",
            view: KbmcuUN
        }],
        label: "KgySGyyJH",
        maxDrawCount: 2906096432,
        occlusionQuerySet: tiVjkSPqhntRrZvPNBCj
    });
    msUQdAsTYcOWEtreHWbX.end();
    const OmWBkQvvXOPWLPeO = RfHHXYYHZsO.finish();
    lHQDT.submit([OmWBkQvvXOPWLPeO]);
    SuTKuBzjg.end();
    const NZskESUM = DPeXbRywI.limits
    const IJbNggwQKNHXZmTWTN = bDRKuQl.createBuffer({
        label: "SIwNrvydfYLIRRc",
        mappedAtCreation: true,
        size: 16929236,
        usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.COPY_SRC | GPUBufferUsage.INDIRECT | GPUBufferUsage.UNIFORM | GPUBufferUsage.VERTEX | GPUBufferUsage.INDEX | GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.STORAGE
    });
    const zpQug = bDRKuQl.createShaderModule({
        label: "compute",
        code: sCClXjwFbcipVlRGbl
    });
    const SELzmEljDjVleVaF = bDRKuQl.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: zpQug
        },
        label: "PTmiKSFSnrztIGoKNnE",
        layout: "auto"
    });
    PyqYRcaTMDnR.writeBuffer(SpdQMVEvZWqyzjE, 29549444, cjMaXxKLqkHqq);
    const hIqJlUKpQhPFTHuiLNvK = kaOsuVuytpOXBNIi.info
    HbQmIhhEwEtDp.end();
    const WxFHAGvrgJZm = rnNTGSkejglnRv.finish();
    lHQDT.submit([WxFHAGvrgJZm]);
    const zUlzOCFYzP = navigator.gpu.wgslLanguageFeatures
    const OIGHbkg = KEIsM.label
    const BobhzPThUCZgIUbppuP = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgb10a2unorm",
        label: "cbVABFwhEaO",
        size: {
            width: 278,
            height: 652,
            depthOrArrayLayers: 18
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgb10a2unorm"]
    });
    const mHDJeLA = BobhzPThUCZgIUbppuP.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 4,
        format: "rgb10a2unorm",
        label: "ZtMRxIEmOVJMwVqwO"
    });
    const HssNJOhWAXA = FqMxHFGCxERQq.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.2231205249795678,
                g: 0.4564839096601321,
                b: 1.8720921074298522,
                a: 0.07826896033728192
            },
            loadOp: "load",
            storeOp: "discard",
            view: mHDJeLA,
            depthSlice: 0
        }],
        label: "fMwKRCKnFlyDWxS",
        maxDrawCount: 1141783324,
        occlusionQuerySet: KEIsM
    });
    HssNJOhWAXA.end();
    const MXtlfOuVUBNQWXwRdwu = kaOsuVuytpOXBNIi.features
    const uPKYU = BeEDqaVOUnaMpbUsbEnp.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "auRqEJVxXn"
    });
    const BTyMCod = bDRKuQl.features
    const MnMXKXle = kaOsuVuytpOXBNIi.limits
    const VTDsLGwA = DPeXbRywI.features
    const XLHpGNIW = DPeXbRywI.isFallbackAdapter
    const TGKFdLT = lHQDT.label
    const LrBnhOwBRDseifxkWLQL = bDRKuQl.queue
    const jWbzKIMVvvAOZzIFea = bDRKuQl.createCommandEncoder({
        label: "sckxnMeDNl"
    });
    const dsxPoevJkYo = bDRKuQl.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: zpQug
        },
        label: "IVlKo",
        layout: "auto"
    });
    const knvorWmamCzywEsjEYv = navigator.gpu.wgslLanguageFeatures
    const HxNinOsrPnm = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "bgra8unorm-srgb",
        label: "DotFvAjMbbgwSFXuTl",
        size: {
            width: 640,
            height: 451,
            depthOrArrayLayers: 29
        },
        mipLevelCount: 9,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["bgra8unorm-srgb"]
    });
    const lvNyllsCjRCcOLhiIT = HxNinOsrPnm.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 5,
        format: "bgra8unorm-srgb",
        label: "apgkI"
    });
    const CGImWeTrUyMRz = FqMxHFGCxERQq.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.5422186258625512,
                g: 0.07549738973859021,
                b: 0.2316212707855676,
                a: 0.9573055997278643
            },
            loadOp: "load",
            storeOp: "discard",
            view: lvNyllsCjRCcOLhiIT,
            depthSlice: 0
        }],
        label: "nFvCHFOfYUFNtA",
        maxDrawCount: 2535678044,
        occlusionQuerySet: tiVjkSPqhntRrZvPNBCj
    });
    CGImWeTrUyMRz.setVertexBuffer(0, fvVydiVTiHYSrMdJZ);
    lHQDT.writeBuffer(SpdQMVEvZWqyzjE, 67256112, kZFMVoOYboaCcPUEA);
    const YSbOUCyKXximRUtrl = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "dst-alpha",
                        srcFactor: "one-minus-dst-alpha"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "one-minus-constant",
                        srcFactor: "one"
                    }
                },
                format: "r16float",
                writeMask: GPUColorWrite.ALPHA
            }]
        },
        label: "KadXcgHefzk",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: SbtHtmt
        }
    });
    const fpdTkga = bDRKuQl.limits
    const woDImFKaDgIakRJSQ = bDRKuQl.createCommandEncoder({
        label: "tfKjQxPIklgsDH"
    });
    const FiIkxxgv = jWbzKIMVvvAOZzIFea.finish();
    const txwYbAo = uSmyBIpZbYaB.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 56,
        baseArrayLayer: 3,
        mipLevelCount: 1,
        baseMipLevel: 3,
        format: "rgba8unorm",
        label: "cGOJHWzxnGeuy"
    });
    const SKmWoJRMtEo = bDRKuQl.createCommandEncoder({
        label: "fNTBkLUbGsZknNM"
    });
    const WjOmiLObmwoIHlICePy = DPeXbRywI.features
    const tvkIjeaSqPtwHFVJ = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "PhbiB",
        size: {
            width: 500,
            height: 530,
            depthOrArrayLayers: 15
        },
        mipLevelCount: 6,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rg8unorm"]
    });
    const DOCXyeSHKnzDLEBVRc = tvkIjeaSqPtwHFVJ.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "rg8unorm",
        label: "oYqCWG"
    });
    const FJvrCapydjpPx = woDImFKaDgIakRJSQ.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.1283751437523994,
                g: 0.1416154403516947,
                b: 1.2853662874406224,
                a: 0.9120382641110287
            },
            loadOp: "clear",
            storeOp: "store",
            view: DOCXyeSHKnzDLEBVRc,
            depthSlice: 5
        }],
        label: "ALnQUWRI",
        maxDrawCount: 1440150591,
        occlusionQuerySet: lehAfGrdPSTA
    });
    const PpoCiBlqFLB = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "dst",
                        srcFactor: "one-minus-constant"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "dst-alpha",
                        srcFactor: "zero"
                    }
                },
                format: "bgra8unorm-srgb",
                writeMask: GPUColorWrite.RED | GPUColorWrite.BLUE
            }]
        },
        label: "foAyCck",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "cw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: SbtHtmt
        }
    });
    CGImWeTrUyMRz.setVertexBuffer(0, fvVydiVTiHYSrMdJZ);
    const OnACfnLglXtSQgz = bDRKuQl.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: zpQug
        },
        label: "CAwrEYgUwNSp",
        layout: "auto"
    });
    const FlLphIltCyfjj = lehAfGrdPSTA.label
    const fVOndndhxnYOPvyI = navigator.gpu.wgslLanguageFeatures
    const UmcqSXSvmvjEf = kaOsuVuytpOXBNIi.info
    const HDIjImYAZpkuQWY = bDRKuQl.createBuffer({
        label: "MMvTCxwKoLGcxgcVVhGc",
        mappedAtCreation: true,
        size: 91794128,
        usage: GPUBufferUsage.MAP_WRITE
    });
    const HBCYGyyvBemFRieb = kaOsuVuytpOXBNIi.limits
    const WyKfuPPVtOQxv = bDRKuQl.createQuerySet({
        count: 1218,
        label: "NwmwCfKdfmiqct",
        type: "occlusion"
    });
    JQOczTDeGsxLVOTQ.writeBuffer(SpdQMVEvZWqyzjE, 20482584, NjXJzrPq);
    const yALPSpTVxjD = DPeXbRywI.info
    const QUHzgymGIGJLobzyKm = lehAfGrdPSTA.type
    const jzDVDymSAxfIYAZTmkzu = bDRKuQl.createQuerySet({
        count: 2988,
        label: "QxicN",
        type: "occlusion"
    });
    const NERPgFZwjTBnoM = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    musVsjZwuVbPnt.submit([FiIkxxgv]);
    musVsjZwuVbPnt.writeBuffer(SpdQMVEvZWqyzjE, 90387148, Lykin);
    const xVIfayQu = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm-srgb",
        label: "jOwtyJtNg",
        size: {
            width: 524,
            height: 223,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST,
        viewFormats: ["bgra8unorm"]
    });
    const MCMvweDyZYrPqhPElxoP = xVIfayQu.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm-srgb",
        label: "RstgUmvyhml"
    });
    const pdFzkxbeWTiDxsNEbcIX = SKmWoJRMtEo.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.6924545703845988,
                g: 1.2248394616439189,
                b: 0.09616203570526016,
                a: 0.6736060886699269
            },
            loadOp: "load",
            storeOp: "discard",
            view: MCMvweDyZYrPqhPElxoP
        }],
        label: "JTmUEQkVYkwNNscH",
        maxDrawCount: 2347517292,
        occlusionQuerySet: WyKfuPPVtOQxv
    });
    const dxcdu = bDRKuQl.queue
    const vMtxHsJ = bDRKuQl.createTexture({
        dimension: "1d",
        sampleCount: 1,
        format: "rgb10a2unorm",
        label: "TxYWqQENuAv",
        size: {
            width: 2388,
            height: 1,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rgb10a2unorm"]
    });
    const doRfFIJAebxol = CGImWeTrUyMRz.label
    const FODLuP = kaOsuVuytpOXBNIi.limits
    const yRiRApkgOkhgk = JQOczTDeGsxLVOTQ.label
    const iksWiKaBu = BJnniENduZW.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 5,
        baseMipLevel: 0,
        format: "rgba16float",
        label: "cwQCRRhHoH"
    });
    const WNWIbtQZgVsdKIDQ = await navigator.gpu.getPreferredCanvasFormat();
    const MDMMLqbphcm = woDImFKaDgIakRJSQ.label
    const hFAIcuaAEtnlwPl = bDRKuQl.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: zpQug
        },
        label: "rEYDqoibVFaUTg",
        layout: "auto"
    });
    const IWSzQYmimDyxEQrXZHbi = bDRKuQl.label
    const oQdOYXdbUqsD = await navigator.gpu.getPreferredCanvasFormat();
    musVsjZwuVbPnt.writeBuffer(SpdQMVEvZWqyzjE, 77732288, YvbSQRFJIfbYGfkkNDp);
    const YjnNyYxwb = NERPgFZwjTBnoM.features
    FJvrCapydjpPx.end();
    const mzSjRaiZGPS = bDRKuQl.createShaderModule({
        label: "vertex",
        code: HjcCqXSOCuIuQPBSRQ
    });
    const flxYG = jzDVDymSAxfIYAZTmkzu.label
    pdFzkxbeWTiDxsNEbcIX.setVertexBuffer(0, fvVydiVTiHYSrMdJZ);
    const wZXanqyZOxXxtwye = bDRKuQl.features
    const nqBCzVJDYlKUZL = lHQDT.label
    const ZVmZAj = WyKfuPPVtOQxv.type
    const yncKZZmYsrzbWecKKtPJ = KEIsM.count
    const yhgEXhjqffxemOq = bDRKuQl.createCommandEncoder({
        label: "xQBPmqQrYzYaGHkc"
    });
    const QPstOqPykYEWMT = NERPgFZwjTBnoM.features
    const ccdINnQAnXGch = NERPgFZwjTBnoM.isFallbackAdapter
    const QXUKyInsLRtwFyDyYAv = dxcdu.label
    const LTuxpQhFKbAPnEK = KEIsM.type
    const afJAWbxMywKYeAs = jzDVDymSAxfIYAZTmkzu.count
    const XtxURHxNIrG = bDRKuQl.createBuffer({
        label: "sCadIORpqUWIETH",
        mappedAtCreation: true,
        size: 73924744,
        usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.UNIFORM
    });
    const XDDpWk = DPeXbRywI.isFallbackAdapter
    const pynpYHUxmapvBKcV = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "add",
                        dstFactor: "one-minus-src",
                        srcFactor: "one-minus-constant"
                    },
                    color: {
                        operation: "subtract",
                        dstFactor: "one-minus-dst",
                        srcFactor: "zero"
                    }
                },
                format: "bgra8unorm-srgb",
                writeMask: GPUColorWrite.GREEN
            }]
        },
        label: "krLuWe",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: EhKuRdrPXDsLxQ
        }
    });
    CGImWeTrUyMRz.setPipeline(pynpYHUxmapvBKcV);
    const neLQtAfwAahJqHuALfAt = iksWiKaBu.label
    const geiPoxBOeQYHvLDf = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: EGihVwgGAsYUeEisAI,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "one-minus-dst-alpha",
                        srcFactor: "one-minus-src"
                    }
                },
                format: "r16float",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.ALL
            }]
        },
        label: "YDvcrnJLfvdB",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: mzSjRaiZGPS
        }
    });
    const VkEbdSMVuVieopqTe = CGImWeTrUyMRz.label
    const aXyhtHLtFhTJupMBUio = WyKfuPPVtOQxv.count
    const aSKcpsDFaDHYk = bDRKuQl.createQuerySet({
        count: 1999,
        label: "kJCJmlQvDbtejOk",
        type: "occlusion"
    });
    const RFflMkXI = aSKcpsDFaDHYk.type
    const XNAvdL = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: EGihVwgGAsYUeEisAI,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "src-alpha-saturated",
                        srcFactor: "dst-alpha"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "bgra8unorm",
                writeMask: GPUColorWrite.RED | GPUColorWrite.ALPHA
            }]
        },
        label: "NpsvgmfLOESZHKsL",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: EhKuRdrPXDsLxQ
        }
    });
    const UdrEwXfbs = bDRKuQl.createBuffer({
        label: "uSNKAHKNP",
        mappedAtCreation: false,
        size: 57285328,
        usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.VERTEX | GPUBufferUsage.INDIRECT
    });
    const yPnUYreCNlCUHM = woDImFKaDgIakRJSQ.label
    const aXYoGbXCvVtYe = bDRKuQl.features
    const XuHtM = lHQDT.label
    const fZJusJpRvnSJZgiQQFGf = musVsjZwuVbPnt.label
    const WjNHBxLntDQqtbq = DPeXbRywI.info
    const cZjwnxBnB = DPeXbRywI.isFallbackAdapter
    const swSXUdqdYfClHdG = NERPgFZwjTBnoM.info
    const YrcgacbccrAohVIXCYo = CGImWeTrUyMRz.label
    const hNEZsSfoJj = PpvKq.label
    const WWfzTnyYw = bDRKuQl.features
    const PZirG = await navigator.gpu.getPreferredCanvasFormat();
    const FGoyQDbAFWmzuoy = tiVjkSPqhntRrZvPNBCj.label
    pdFzkxbeWTiDxsNEbcIX.end();
    const LJnSpyvvisro = woDImFKaDgIakRJSQ.label
    const dljMqwoVyaBpnub = navigator.gpu.wgslLanguageFeatures
    const XYoqmvjefhPwZR = kaOsuVuytpOXBNIi.features
    const DszRVnqigVXj = bDRKuQl.features
    const vpPbqlPjfeJgqWOrPIu = NERPgFZwjTBnoM.features
    const ySLIhGRDBBj = tiVjkSPqhntRrZvPNBCj.type
    const sGeeYWyGvCc = woDImFKaDgIakRJSQ.label
    const vkkXOajRZMdUJTvTFC = woDImFKaDgIakRJSQ.finish();
    PyqYRcaTMDnR.submit([vkkXOajRZMdUJTvTFC]);
    const uKGvCNFDfeD = lehAfGrdPSTA.count
    const zjGJwMCK = DPeXbRywI.features
    const ElchnYsJurSZOUzs = KEIsM.count
    CGImWeTrUyMRz.setVertexBuffer(0, UdrEwXfbs);
    LrBnhOwBRDseifxkWLQL.writeBuffer(SpdQMVEvZWqyzjE, 35819896, BwZivtt);
    const wwWklQOkWbgQZRXn = bDRKuQl.limits
    CGImWeTrUyMRz.draw(6);
    const vpSkevrfK = bDRKuQl.createBuffer({
        label: "DEDjUsCMreGbuHFmHaf",
        mappedAtCreation: false,
        size: 105366384,
        usage: GPUBufferUsage.STORAGE | GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST
    });
    const NDcUzwOIAsuxzLiuxqlT = lehAfGrdPSTA.count
    CGImWeTrUyMRz.draw(4);
    const YELiMxprajKtTRgU = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const zZjYslIqEAkrKsrjXlC = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "src-alpha-saturated",
                        srcFactor: "src"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rgba16float",
                writeMask: GPUColorWrite.RED | GPUColorWrite.BLUE
            }]
        },
        label: "nqKrVsLsrHEnJAspFKXU",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: SbtHtmt
        }
    });
    const AwrksdfOQEPPQcX = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r16uint",
        label: "lqKzGSUhgdlLw",
        size: {
            width: 94,
            height: 702,
            depthOrArrayLayers: 18
        },
        mipLevelCount: 10,
        usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["r16uint"]
    });
    const wCaBTbwaGqW = bDRKuQl.queue
    CGImWeTrUyMRz.end();
    const tTjuWvLDSrLZQ = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm",
        label: "ioAIySNpEDpbLZ",
        size: {
            width: 3326,
            height: 2224,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["bgra8unorm"]
    });
    const JgiuBaQBN = tTjuWvLDSrLZQ.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "ZUpXjhmqaXroQp"
    });
    const TAjpq = yhgEXhjqffxemOq.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.9673958686019288,
                g: 0.6920461819878594,
                b: 0.49413324520166335,
                a: 1.1882632281762406
            },
            loadOp: "clear",
            storeOp: "discard",
            view: JgiuBaQBN
        }],
        label: "tnjvWvdppCIBPcLEtZD",
        maxDrawCount: 3450568146,
        occlusionQuerySet: jzDVDymSAxfIYAZTmkzu
    });
    const LBeLTXolGyflwsfx = TAjpq.label
    const jkEAteVsNSro = bDRKuQl.createQuerySet({
        count: 3699,
        label: "ATsjIepu",
        type: "occlusion"
    });
    const ueBLuNClg = await navigator.gpu.getPreferredCanvasFormat();
    const NLxLGJCJ = txwYbAo.label
    lHQDT.writeBuffer(SpdQMVEvZWqyzjE, 67990736, uWKaOCrJiR);
    const EDPARvETHiokI = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgba16sint",
        label: "WMOsBvzXNJ",
        size: {
            width: 942,
            height: 1205,
            depthOrArrayLayers: 63
        },
        mipLevelCount: 4,
        usage: GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba16sint"]
    });
    const VaaQIONUPUP = bDRKuQl.createBuffer({
        label: "dBlPihJkcRc",
        mappedAtCreation: false,
        size: 132565052,
        usage: GPUBufferUsage.INDIRECT | GPUBufferUsage.INDEX | GPUBufferUsage.COPY_SRC | GPUBufferUsage.QUERY_RESOLVE
    });
    const PfECQrpIPAeeVWFOBzv = YELiMxprajKtTRgU.info
    const lncmWbTpTduvJJ = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const rzQHMyHOsZV = bDRKuQl.createQuerySet({
        count: 4084,
        label: "FNFnztBMQOrHywB",
        type: "occlusion"
    });
    const xflXfTrZLNbVMiC = jkEAteVsNSro.label
    const EiiDrfyLvsbR = bDRKuQl.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: zpQug
        },
        label: "GWtqDbPPUQhMEYidt",
        layout: "auto"
    });
    const TmKkDhceY = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const RgFKwSvdRfKyD = TmKkDhceY.info
    const CysIgkEjCM = bDRKuQl.features
    const jQXgiomdqx = bDRKuQl.queue
    TAjpq.setPipeline(XxsiIRgUjwvjwcye);
    TAjpq.draw(9);
    const eWwYASrMUbmMp = TAjpq.label
    const KEIwnJqjYYVBdsxOkbIe = bDRKuQl.createCommandEncoder({
        label: "sFTxmhnaBYrPgCUefzV"
    });
    const BNMwY = navigator.gpu.wgslLanguageFeatures
    const sltNcuYNkkGk = BJnniENduZW.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba16float",
        label: "YdOYuvfsV"
    });
    TAjpq.draw(7);
    const lSryqfcGFkonPnMtg = NERPgFZwjTBnoM.features
    const pwIeoAWImLV = njFucdVnke.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 3,
        format: "rgba8unorm",
        label: "LdLSPtLhnkhvtcImAwLE"
    });
    const FsiOZLGLcZsMLJABzTL = navigator.gpu.wgslLanguageFeatures
    const HfIBZBVrKXYihN = bDRKuQl.createQuerySet({
        count: 2526,
        label: "wVnzGGlbrh",
        type: "occlusion"
    });
    const FyoxkSLpFjCgY = DPeXbRywI.isFallbackAdapter
    TAjpq.setPipeline(XxsiIRgUjwvjwcye);
    TAjpq.setVertexBuffer(0, fvVydiVTiHYSrMdJZ);
    const SEYeezSgCoXXyKRM = aSKcpsDFaDHYk.type
    const dnhyZRAm = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const ewvWGtVfxNDUjCdCBP = KEIwnJqjYYVBdsxOkbIe.finish();
    const DUoSB = bDRKuQl.createCommandEncoder({
        label: "SVSjag"
    });
    const oihPG = SKmWoJRMtEo.label
    const kClxKwRyP = navigator.gpu.wgslLanguageFeatures
    TAjpq.end();
    const DLnsKuoszXhG = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r8snorm",
        label: "TqwqEvttY",
        size: {
            width: 895,
            height: 151,
            depthOrArrayLayers: 51
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.COPY_DST,
        viewFormats: ["r8snorm"]
    });
    const IbxZPQPyBtmS = bDRKuQl.features
    const mxOhNJomICvXgQ = fpcLyquTk.label
    const PbIaCYiUNiGPqIAxBUt = FqMxHFGCxERQq.finish();
    const nHJIxCkOyf = WyKfuPPVtOQxv.count
    const NoIiMpLmQyOAKhToZXSB = bDRKuQl.label
    const EBQRQwXJXAXpmGBiNk = bDRKuQl.createBuffer({
        label: "zTJnkvHPpp",
        mappedAtCreation: true,
        size: 253289320,
        usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.UNIFORM | GPUBufferUsage.QUERY_RESOLVE
    });
    const ufmANf = jQXgiomdqx.label
    const ZVBeDNUecLSvTVcL = await navigator.gpu.getPreferredCanvasFormat();
    const hQRbwabOjxfECKid = bDRKuQl.features
    const OEOkzQkpLsOelDX = bDRKuQl.queue
    const xslEOfsuehJnlJIuzcFv = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rg16float",
        label: "TTHBLNQPNpcF",
        size: {
            width: 3598,
            height: 1862,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rg16float"]
    });
    const ascrxnMqYiCSvL = xslEOfsuehJnlJIuzcFv.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg16float",
        label: "JCZCmUTVc"
    });
    const gvTCIWHPAGGleSeGmQV = SKmWoJRMtEo.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.779835793338765,
                g: 1.8355529411752576,
                b: 1.0213673721624505,
                a: 0.4689051059925087
            },
            loadOp: "clear",
            storeOp: "discard",
            view: ascrxnMqYiCSvL
        }],
        label: "SkmemDAojQp",
        maxDrawCount: 4181236862,
        occlusionQuerySet: tiVjkSPqhntRrZvPNBCj
    });
    const OuFCOGonwGNPLvVahkP = gvTCIWHPAGGleSeGmQV.label
    const atkElgZWejW = lncmWbTpTduvJJ.info
    const ZekrKkOjlh = uSmyBIpZbYaB.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 4,
        baseMipLevel: 0,
        format: "rgba8unorm",
        label: "JmnwjGl"
    });
    const ZutuPoqW = bDRKuQl.limits
    gvTCIWHPAGGleSeGmQV.end();
    const XSBXDZNRNSnkArzmLdEv = SKmWoJRMtEo.label
    const lWQnhp = tiVjkSPqhntRrZvPNBCj.type
    const TUQevP = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "r16float",
        label: "YCwgcs",
        size: {
            width: 1733,
            height: 2689,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["r16float"]
    });
    const SUgsHrudhhChza = TUQevP.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r16float",
        label: "UKBJOZvGNyDFsNWp"
    });
    const fIYxuGCutuZ = SKmWoJRMtEo.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.2434838354373918,
                g: 0.9503469423814193,
                b: 0.684319070320548,
                a: 0.8865206410828521
            },
            loadOp: "load",
            storeOp: "store",
            view: SUgsHrudhhChza
        }],
        label: "cYuaVLONXByPCvqjJ",
        maxDrawCount: 1468720747,
        occlusionQuerySet: jzDVDymSAxfIYAZTmkzu
    });
    fIYxuGCutuZ.end();
    const nUzXKtljfv = ascrxnMqYiCSvL.label
    const ZEMGyWPblGaKUqxWR = bDRKuQl.limits
    const SpUHjkwdUhtdunRHTxCF = KScGSSGyKympyGScBE.label
    const qreFEzdnKsK = yhgEXhjqffxemOq.finish();
    const kYxTFCTVmOq = bDRKuQl.createCommandEncoder({
        label: "oGmWVUMlUFhwKo"
    });
    const rjjcMTGEboNMjNxAZQcb = HfIBZBVrKXYihN.label
    const TCchayvGOcQhnZBa = lehAfGrdPSTA.count
    const QMEYVEIjDwmSDSgV = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "bgra8unorm",
        label: "OUEzMxTD",
        size: {
            width: 411,
            height: 167,
            depthOrArrayLayers: 23
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["bgra8unorm-srgb"]
    });
    const Jyxpw = QMEYVEIjDwmSDSgV.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "rJxoY"
    });
    const FVGsEUTjvMsqQuxfPJ = kYxTFCTVmOq.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.43562644725447464,
                g: 0.33603022366123136,
                b: 0.353372659951551,
                a: 0.9444302931315176
            },
            loadOp: "clear",
            storeOp: "discard",
            view: Jyxpw,
            depthSlice: 2
        }],
        label: "UUJapEBEDfasa",
        maxDrawCount: 3080113026,
        occlusionQuerySet: rzQHMyHOsZV
    });
    FVGsEUTjvMsqQuxfPJ.end();
    wCaBTbwaGqW.writeBuffer(vpSkevrfK, 1609940, hzzYNUysz);
    const cWEuYndEblgMYKXsOYc = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const FCjyw = kYxTFCTVmOq.finish();
    const oYMhsxpjYXvyHbD = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "one",
                        srcFactor: "one-minus-constant"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rg16float",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.ALL
            }]
        },
        label: "PodOcQgjpdnKNElAiVM",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: EhKuRdrPXDsLxQ
        }
    });
    const TGYCnDbcIp = kaOsuVuytpOXBNIi.limits
    const ObAXGKaxnADMZNicBiJ = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: EGihVwgGAsYUeEisAI,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "dst",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "src-alpha",
                        srcFactor: "one-minus-dst"
                    }
                },
                format: "rg16float",
                writeMask: GPUColorWrite.GREEN | GPUColorWrite.ALPHA | GPUColorWrite.RED | GPUColorWrite.BLUE
            }]
        },
        label: "JqnNKNxaKZfGzEc",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "back",
            frontFace: "ccw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: EhKuRdrPXDsLxQ
        }
    });
    const DAXvcKMEg = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "dKtKuqaYvLhCuuWdSX",
        size: {
            width: 335,
            height: 438,
            depthOrArrayLayers: 32
        },
        mipLevelCount: 6,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rg8unorm"]
    });
    const eofURCsaO = DAXvcKMEg.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 5,
        format: "rg8unorm",
        label: "NkHmfkkcwMDafSUqQ"
    });
    const sEnUFyYzAOTmo = DUoSB.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.5887949721286416,
                g: 1.6421462959162896,
                b: 1.7942126981456334,
                a: 1.8775834140294874
            },
            loadOp: "load",
            storeOp: "store",
            view: eofURCsaO,
            depthSlice: 0
        }],
        label: "RKKuOGJg",
        maxDrawCount: 1969557975,
        occlusionQuerySet: KEIsM
    });
    const CVFqdQKAcQeIkl = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "one-minus-dst",
                        srcFactor: "one-minus-dst"
                    }
                },
                format: "rg8unorm",
                writeMask: GPUColorWrite.ALL
            }]
        },
        label: "CXgJNGesYdP",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "back",
            frontFace: "ccw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: EhKuRdrPXDsLxQ
        }
    });
    sEnUFyYzAOTmo.setPipeline(CVFqdQKAcQeIkl);
    const htvpewitbCutY = bDRKuQl.createBuffer({
        label: "aZhZrBdYdBhZKlKeNE",
        mappedAtCreation: true,
        size: 184937036,
        usage: GPUBufferUsage.MAP_READ
    });
    PyqYRcaTMDnR.submit([ewvWGtVfxNDUjCdCBP]);
    const dkdYoVjs = bDRKuQl.createTexture({
        dimension: "1d",
        sampleCount: 1,
        format: "rg16sint",
        label: "vIYnigXIjD",
        size: {
            width: 2157,
            height: 1,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rg16sint"]
    });
    const xWxNEXdcPSWT = await navigator.gpu.getPreferredCanvasFormat();
    const TslgwxAvuR = hcHppRBerAxIlzdSfb.label
    const cDVXuBfzwXRtxh = dkdYoVjs.createView({
        aspect: "all",
        dimension: "1d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg16sint",
        label: "BVayzgDGJGNoZ"
    });
    const YvSGALVls = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "bgra8unorm-srgb",
        label: "kfGjtpSby",
        size: {
            width: 409,
            height: 460,
            depthOrArrayLayers: 26
        },
        mipLevelCount: 8,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["bgra8unorm-srgb"]
    });
    const yAIpq = YvSGALVls.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 6,
        format: "bgra8unorm-srgb",
        label: "djGWnDocrxzZFrI"
    });
    const BzUrceahikEPapJt = SKmWoJRMtEo.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.6517298636243349,
                g: 1.745393092587439,
                b: 1.8909564920913298,
                a: 0.39386705577949166
            },
            loadOp: "load",
            storeOp: "store",
            view: yAIpq,
            depthSlice: 0
        }],
        label: "URXJfg",
        maxDrawCount: 3062011734,
        occlusionQuerySet: HfIBZBVrKXYihN
    });
    const OraqoIbxoNpJ = cWEuYndEblgMYKXsOYc.features
    BzUrceahikEPapJt.setVertexBuffer(0, SpdQMVEvZWqyzjE);
    const czpRyUBSLKyk = DUoSB.label
    const ZJgXOBahfQwNaVjshqw = bDRKuQl.features
    BzUrceahikEPapJt.end();
    const TvnXvhKIWPHlYShaDi = SKmWoJRMtEo.finish();
    const XekmiBqjPMjPilxIUFR = eofURCsaO.label
    const ugvvcKWaPR = sEnUFyYzAOTmo.label
    const qqKpllnUWfU = cDVXuBfzwXRtxh.label
    const fnjBzHyzl = jkEAteVsNSro.label
    musVsjZwuVbPnt.submit([TvnXvhKIWPHlYShaDi]);
    const AMglNmTfVrdjJbPpCbJl = YELiMxprajKtTRgU.limits
    const AsRAvsUCasIRXQHTdgs = DUoSB.label
    const uPEuGYdKMcYJOPuZmdE = bDRKuQl.label
    const gYldhtEJkKyqAY = bDRKuQl.createShaderModule({
        label: "compute",
        code: LltrqQsTHovdvHnZZ
    });
    const IjBFjUKtPwC = jzDVDymSAxfIYAZTmkzu.type
    const UznsFiWeTZ = bDRKuQl.queue
    const bATqGJvEPorIWRm = bDRKuQl.createCommandEncoder({
        label: "MLJAtwOejhjXEgFI"
    });
    const OoqPguQmKdMKGjW = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "KwenJltUIonPuqCVAS",
        size: {
            width: 559,
            height: 624,
            depthOrArrayLayers: 13
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rg8unorm"]
    });
    const mewjXXNWMrLEQTh = OoqPguQmKdMKGjW.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "rg8unorm",
        label: "sqINyTHgX"
    });
    const KabYZANhohXnrEBLoAY = bATqGJvEPorIWRm.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.08515652468353885,
                g: 0.45439305656297946,
                b: 1.009946170202715,
                a: 0.9974638464991425
            },
            loadOp: "load",
            storeOp: "discard",
            view: mewjXXNWMrLEQTh,
            depthSlice: 3
        }],
        label: "CAssESasREKsapG",
        maxDrawCount: 1432663026,
        occlusionQuerySet: jkEAteVsNSro
    });
    const xvCvLKlRcdohs = sEnUFyYzAOTmo.label
    const CSRjNAYPRqAmTSHDuTxA = bDRKuQl.createQuerySet({
        count: 1862,
        label: "FxifAmeCNBTayJP",
        type: "occlusion"
    });
    const jgDJAItegIF = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgba16float",
        label: "oleJiNmT",
        size: {
            width: 1681,
            height: 1455,
            depthOrArrayLayers: 36
        },
        mipLevelCount: 2,
        usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rgba16float"]
    });
    const qfncFPHYXLufitUFLN = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rgba8unorm",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.ALL | GPUColorWrite.GREEN | GPUColorWrite.RED
            }]
        },
        label: "WYZomZUdkH",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "back",
            frontFace: "cw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: mzSjRaiZGPS
        }
    });
    const mwlIb = WyKfuPPVtOQxv.count
    const jomssDavjhH = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const hoTaFzffM = bDRKuQl.queue
    const EfaWXKtgRjUeWOyg = navigator.gpu.wgslLanguageFeatures
    KabYZANhohXnrEBLoAY.end();
    const iQOWyZHEsFFCEiwsWB = dkdYoVjs.createView({
        aspect: "all",
        dimension: "1d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg16sint",
        label: "EAahBVPsrtJkbmeaw"
    });
    const gIeZkeZOOFyU = bDRKuQl.createCommandEncoder({
        label: "jKDLZvKZPOrv"
    });
    const oZUUgnTFsccMTIRyIKpm = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    hoTaFzffM.writeBuffer(SpdQMVEvZWqyzjE, 86385316, bINHYOpwOvzro);
    const PEFOhgDhirJj = tiVjkSPqhntRrZvPNBCj.count
    const iqDHxderGikn = GPkFCsGkNCZMiSVntkcl.label
    const JFSSWSkGEWCBoKiy = await navigator.gpu.getPreferredCanvasFormat();
    sEnUFyYzAOTmo.setVertexBuffer(0, fvVydiVTiHYSrMdJZ);
    const FdrPniSYRAgi = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r32sint",
        label: "iZpanK",
        size: {
            width: 796,
            height: 307,
            depthOrArrayLayers: 58
        },
        mipLevelCount: 3,
        usage: GPUTextureUsage.COPY_SRC,
        viewFormats: ["r32sint"]
    });
    UznsFiWeTZ.writeBuffer(vpSkevrfK, 15633328, RjwUEV);
    const CKPTxOeTF = sEnUFyYzAOTmo.label
    sEnUFyYzAOTmo.end();
    const UVJnYqczdplQAFAoy = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "bgra8unorm-srgb",
        label: "VrPMbXIt",
        size: {
            width: 3217,
            height: 672,
            depthOrArrayLayers: 49
        },
        mipLevelCount: 4,
        usage: GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["bgra8unorm-srgb"]
    });
    const JzTcHyTgS = UVJnYqczdplQAFAoy.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 2,
        format: "bgra8unorm-srgb",
        label: "FSrJmyFsSjCsfTquwG"
    });
    const ZMLGpL = bATqGJvEPorIWRm.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.8204561701535491,
                g: 1.4493757714123507,
                b: 7.374578456560421E-4,
                a: 1.2118802152391728
            },
            loadOp: "load",
            storeOp: "discard",
            view: JzTcHyTgS
        }],
        label: "mwolYRpxD",
        maxDrawCount: 2981785978,
        occlusionQuerySet: jzDVDymSAxfIYAZTmkzu
    });
    const nkwPHBCOle = ZMLGpL.label
    const KqyOAIXNCvITha = NERPgFZwjTBnoM.features
    const oKMmwIfkB = navigator.gpu.wgslLanguageFeatures
    const DrOBLOMGZqWxRza = NERPgFZwjTBnoM.features
    const nVeSrUfcFnAPGaE = jzDVDymSAxfIYAZTmkzu.label
    const BypJxvLPQijQOMMhlSgj = DUoSB.label
    const SsoMakONrLwNddxdrT = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const oVAFaqpDI = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "r16sint",
        label: "nrYQDSyDVyQuukjqef",
        size: {
            width: 166,
            height: 58,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC,
        viewFormats: ["r16sint"]
    });
    const KiwhKSu = bDRKuQl.queue
    ZMLGpL.setPipeline(pynpYHUxmapvBKcV);
    const HAHdIUvyvwfBQxkbj = bDRKuQl.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: gYldhtEJkKyqAY
        },
        label: "HVvHIeDuTSXDJFlozv",
        layout: "auto"
    });
    const jHAiESiTVon = NERPgFZwjTBnoM.features
    const uRipXLHmdOP = lncmWbTpTduvJJ.features
    const xLatAcepiPScIJk = navigator.gpu.wgslLanguageFeatures
    const VURNYdy = KiwhKSu.label
    const QpcjzgMuOulin = lehAfGrdPSTA.type
    ZMLGpL.setVertexBuffer(0, SpdQMVEvZWqyzjE);
    const zlgNYfBzpRlAwNjgdqt = navigator.gpu.wgslLanguageFeatures
    const THDWBRtFOijoyVHepfs = KEIsM.count
    ZMLGpL.setPipeline(pynpYHUxmapvBKcV);
    const OlSlNvKHAMoSOiHC = bDRKuQl.createBuffer({
        label: "hOfDKzHSyzqKuBrnMe",
        mappedAtCreation: true,
        size: 27121088,
        usage: GPUBufferUsage.STORAGE | GPUBufferUsage.UNIFORM
    });
    const lSLolgfAubMcyaLJonFA = gIeZkeZOOFyU.finish();
    ZMLGpL.setVertexBuffer(0, KfbFOyTEGOf);
    const lrNXRsgTZhB = SsoMakONrLwNddxdrT.limits
    const wtZuQWBUHNWUUfHUKYCz = bDRKuQl.features
    const imYxzsuvIrvGTGha = sltNcuYNkkGk.label
    const XtHXkEYf = bDRKuQl.createShaderModule({
        label: "vertex",
        code: sdoamijxIcWDUhlqj
    });
    const AXSGTqD = ZMLGpL.label
    ZMLGpL.setPipeline(pynpYHUxmapvBKcV);
    const CzhuOEVs = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r32sint",
        label: "qzwNAYxWfyybtJhKg",
        size: {
            width: 303,
            height: 392,
            depthOrArrayLayers: 28
        },
        mipLevelCount: 8,
        usage: GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["r32sint"]
    });
    const nuGDQGuXDTreabskcW = bDRKuQl.label
    const xlSSmPonERDoqr = bDRKuQl.createCommandEncoder({
        label: "AmxaTag"
    });
    const BMmxWWbOEpwz = xlSSmPonERDoqr.label
    const zDYvKDa = await navigator.gpu.getPreferredCanvasFormat();
    const IeXYErn = bDRKuQl.createQuerySet({
        count: 3220,
        label: "cTKNxnyvvomyInpSJQ",
        type: "occlusion"
    });
    const PhDSBOH = bDRKuQl.limits
    ZMLGpL.end();
    const WBAOEqvZx = bDRKuQl.queue
    const joOFSKefwMMvvLjIjyN = DPeXbRywI.isFallbackAdapter
    const vpGlxrFUYjkVqfei = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgb10a2unorm",
        label: "AkABmRqvorRKkPEiTfLM",
        size: {
            width: 736,
            height: 514,
            depthOrArrayLayers: 47
        },
        mipLevelCount: 9,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgb10a2unorm"]
    });
    const ZeSkZ = vpGlxrFUYjkVqfei.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 8,
        format: "rgb10a2unorm",
        label: "MhsghUkoC"
    });
    const zdXrCIJvQzIPvzKlicBw = bATqGJvEPorIWRm.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.98557930864738,
                g: 1.3710354779191962,
                b: 0.9698293675295617,
                a: 0.9170560200707194
            },
            loadOp: "load",
            storeOp: "discard",
            view: ZeSkZ
        }],
        label: "STByt",
        maxDrawCount: 791150065,
        occlusionQuerySet: aSKcpsDFaDHYk
    });
    zdXrCIJvQzIPvzKlicBw.setVertexBuffer(0, fvVydiVTiHYSrMdJZ);
    const jgHODOGIfNMSsJujc = bDRKuQl.createShaderModule({
        label: "vertex",
        code: YlKebzJtskGTS
    });
    const vqdKtwIidwxsKODq = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const FlvltjPLGC = bDRKuQl.queue
    const EioncdRwjMdjIoDfD = bDRKuQl.label
    const KmRpHtm = FlvltjPLGC.label
    const gvwGujrcxrbh = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r8unorm",
        label: "AwKeeMPukdczQHS",
        size: {
            width: 206,
            height: 385,
            depthOrArrayLayers: 61
        },
        mipLevelCount: 2,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC,
        viewFormats: ["r8unorm"]
    });
    const kxuPRyApXPiH = gvwGujrcxrbh.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "r8unorm",
        label: "DYXyoJFq"
    });
    const rgrDdZ = xlSSmPonERDoqr.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.5129242195065882,
                g: 0.7507595387057688,
                b: 1.2939129814478132,
                a: 1.109030892579657
            },
            loadOp: "clear",
            storeOp: "discard",
            view: kxuPRyApXPiH,
            depthSlice: 25
        }],
        label: "RUjhOiIjGJCB",
        maxDrawCount: 2717145287,
        occlusionQuerySet: jzDVDymSAxfIYAZTmkzu
    });
    const zaHbnGUiyV = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "depth24plus-stencil8",
        label: "HagCnCACUbkVlLZ",
        size: {
            width: 2764,
            height: 805,
            depthOrArrayLayers: 23
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.COPY_SRC,
        viewFormats: ["depth24plus-stencil8"]
    });
    const TdliJHRXJFCRImgLdGbS = bATqGJvEPorIWRm.label
    const pXHpMqSjLAy = navigator.gpu.wgslLanguageFeatures
    const XlxvqVrJaIwgZqBa = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "bgra8unorm-srgb",
        label: "EiizCw",
        size: {
            width: 860,
            height: 817,
            depthOrArrayLayers: 20
        },
        mipLevelCount: 6,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST,
        viewFormats: ["bgra8unorm"]
    });
    const XmBTzhBxcWsYmQGjMe = XlxvqVrJaIwgZqBa.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 5,
        format: "bgra8unorm-srgb",
        label: "beiDOjrtZBFJ"
    });
    const lyoKpobb = DUoSB.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.931916683181864,
                g: 1.1252991448201075,
                b: 0.49506951728916193,
                a: 1.0138603068198824
            },
            loadOp: "clear",
            storeOp: "discard",
            view: XmBTzhBxcWsYmQGjMe,
            depthSlice: 0
        }],
        label: "KGPYByC",
        maxDrawCount: 2644586253,
        occlusionQuerySet: jkEAteVsNSro
    });
    const HPBpehSItNLx = oZUUgnTFsccMTIRyIKpm.isFallbackAdapter
    const jxOzOFXYGbqrqXQSXvo = bDRKuQl.createShaderModule({
        label: "vertex",
        code: HIAHDN
    });
    const zZUATufUMQrOwYP = bDRKuQl.queue
    const qatVbhEOPx = bDRKuQl.createCommandEncoder({
        label: "NJJZFJoE"
    });
    const OIbxPsD = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r8unorm",
        label: "fLkGxsXcl",
        size: {
            width: 317,
            height: 74,
            depthOrArrayLayers: 19
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.COPY_SRC,
        viewFormats: ["r8unorm"]
    });
    const GfaPdE = OIbxPsD.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r8unorm",
        label: "tgmHfRTTxQGckqXYc"
    });
    const vLPnZ = qatVbhEOPx.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.8934133009054752,
                g: 1.1648623397893143,
                b: 1.8369117780897748,
                a: 0.8299122214749362
            },
            loadOp: "clear",
            storeOp: "store",
            view: GfaPdE,
            depthSlice: 12
        }],
        label: "DbhdlVYQMkZmx",
        maxDrawCount: 2381616405,
        occlusionQuerySet: IeXYErn
    });
    const qXpxdcbYcpVoEtHg = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    KiwhKSu.submit([PbIaCYiUNiGPqIAxBUt]);
    const tfHZUmctQbpsjRyjXggs = bDRKuQl.createBuffer({
        label: "jjUyLMpRbUP",
        mappedAtCreation: true,
        size: 14738868,
        usage: GPUBufferUsage.COPY_SRC
    });
    const RhinNY = cWEuYndEblgMYKXsOYc.isFallbackAdapter
    const wiDleyYFCRRBoO = lvNyllsCjRCcOLhiIT.label
    const RazGasQaDk = HfIBZBVrKXYihN.label
    const IfizwWfSD = bDRKuQl.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: gYldhtEJkKyqAY
        },
        label: "Qyckk",
        layout: "auto"
    });
    musVsjZwuVbPnt.writeBuffer(SpdQMVEvZWqyzjE, 34045008, OzHkmfYgpo);
    const LwlUXPzuRVdkworoij = bDRKuQl.limits
    const ntbJOJGZyulOpLf = bDRKuQl.features
    const cKeeWAZvU = bDRKuQl.createCommandEncoder({
        label: "pFmbzYUvQfqKZEiMSaU"
    });
    const TjKlQEPYiaCQD = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rgba8unorm",
        label: "SwmugKsgcIjUMdOra",
        size: {
            width: 33,
            height: 236,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const KFCBGAxrRfOXAAyHxLNu = TjKlQEPYiaCQD.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba8unorm",
        label: "FJeLHgwKWVp"
    });
    const RzSqrendLTipUNIkLfB = cKeeWAZvU.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.40200111315004206,
                g: 0.8021858579240975,
                b: 0.5515741711000426,
                a: 0.5209948680028236
            },
            loadOp: "clear",
            storeOp: "discard",
            view: KFCBGAxrRfOXAAyHxLNu
        }],
        label: "wulamGuBRPtXd",
        maxDrawCount: 1139796919,
        occlusionQuerySet: KEIsM
    });
    const tFvnZbJX = bDRKuQl.createQuerySet({
        count: 629,
        label: "BijRXhNkCUwoBvzESW",
        type: "occlusion"
    });
    const QIqcrYiKGH = DPeXbRywI.info
    const DghMeraEF = rgrDdZ.label
    vLPnZ.end();
    const uEQcbPoZiKydfm = qatVbhEOPx.finish();
    const awOMWxd = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: EGihVwgGAsYUeEisAI,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "subtract",
                        dstFactor: "dst",
                        srcFactor: "one-minus-src"
                    }
                },
                format: "rgb10a2unorm",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.BLUE | GPUColorWrite.GREEN
            }]
        },
        label: "nyuJpAQxqgbpE",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "back",
            frontFace: "ccw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: XtHXkEYf
        }
    });
    zdXrCIJvQzIPvzKlicBw.setPipeline(awOMWxd);
    const NQOhRKkxvQuMUVJcMBRr = await navigator.gpu.getPreferredCanvasFormat();
    const lfcnQGQfIFR = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const DggNAlQIrramIs = bDRKuQl.createShaderModule({
        label: "compute",
        code: pNflRnQjKTTXdM
    });
    const HBMfQMCkTBjJzt = navigator.gpu.wgslLanguageFeatures
    const SEDLarUeKiGPPO = BJnniENduZW.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 3,
        baseMipLevel: 0,
        format: "rgba16float",
        label: "mSIFIkNIIY"
    });
    const qGSXLruESmj = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "src",
                        srcFactor: "one-minus-dst-alpha"
                    }
                },
                format: "bgra8unorm-srgb",
                writeMask: GPUColorWrite.GREEN | GPUColorWrite.ALPHA
            }]
        },
        label: "vIuQUftVBfo",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: SbtHtmt
        }
    });
    const KNRHa = bDRKuQl.createCommandEncoder({
        label: "ozCDntWIbYTaTncEB"
    });
    const LKWuAqmHQGHSxE = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "bgra8unorm-srgb",
        label: "dcZMLVHuiozUTCA",
        size: {
            width: 763,
            height: 374,
            depthOrArrayLayers: 44
        },
        mipLevelCount: 8,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["bgra8unorm"]
    });
    const vPjdOX = LKWuAqmHQGHSxE.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 6,
        format: "bgra8unorm",
        label: "JwWxPwLjCqdba"
    });
    const lWQQUCVtmZJTjzLFj = KNRHa.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.8941733423280245,
                g: 1.9550950669906302,
                b: 0.2999704242279979,
                a: 0.43606218630215543
            },
            loadOp: "load",
            storeOp: "discard",
            view: vPjdOX,
            depthSlice: 0
        }],
        label: "IqcaNAT",
        maxDrawCount: 4059624447,
        occlusionQuerySet: HfIBZBVrKXYihN
    });
    const zawQzZSiGu = aSKcpsDFaDHYk.type
    lWQQUCVtmZJTjzLFj.setVertexBuffer(0, vpSkevrfK);
    lWQQUCVtmZJTjzLFj.end();
    const VGWPwa = KNRHa.finish();
    const FPKWgGAD = bDRKuQl.queue
    const qklzo = bDRKuQl.label
    lyoKpobb.end();
    const OTbdvEivwFsLiYDWjEx = bDRKuQl.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "dctwHiMb",
        size: {
            width: 490,
            height: 1023,
            depthOrArrayLayers: 47
        },
        mipLevelCount: 10,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rg8unorm"]
    });
    const FvrOZCTUsgq = OTbdvEivwFsLiYDWjEx.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 2,
        format: "rg8unorm",
        label: "IkSTorYxRqAfI"
    });
    const eFsdyCwmXmjKh = DUoSB.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.7686634884273118,
                g: 1.9899498283562655,
                b: 1.0469379301620456,
                a: 0.9825808224953829
            },
            loadOp: "clear",
            storeOp: "discard",
            view: FvrOZCTUsgq,
            depthSlice: 3
        }],
        label: "gqIeCllhGUhh",
        maxDrawCount: 3390019121,
        occlusionQuerySet: jzDVDymSAxfIYAZTmkzu
    });
    const AuEYcwdIz = HfIBZBVrKXYihN.type
    const WCEejNyiIZWXa = tFvnZbJX.label
    zdXrCIJvQzIPvzKlicBw.end();
    const CpfWcDTsJvZviScwhK = await navigator.gpu.getPreferredCanvasFormat();
    const NKqSahshrJJY = bDRKuQl.features
    const SjSLBuGmoBDMvKmzQN = PyqYRcaTMDnR.label
    const WbTCRUXBjpeplr = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const vwbIbFDKos = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "one-minus-src",
                        srcFactor: "dst-alpha"
                    }
                },
                format: "rgb10a2unorm",
                writeMask: GPUColorWrite.GREEN | GPUColorWrite.BLUE
            }]
        },
        label: "YSnbEeTtfmFg",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: jgHODOGIfNMSsJujc
        }
    });
    WBAOEqvZx.submit([qreFEzdnKsK]);
    lHQDT.writeBuffer(vpSkevrfK, 81360244, yOVnmhhUJRHBbbm);
    const EAxyMrvLxurvOIHs = bDRKuQl.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: gYldhtEJkKyqAY
        },
        label: "IhacsSh",
        layout: "auto"
    });
    const CXGcgrMzsNZQO = tFvnZbJX.type
    const gPmNCRcKeCVgagw = bDRKuQl.createBuffer({
        label: "eebLaBfS",
        mappedAtCreation: true,
        size: 112527172,
        usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.VERTEX
    });
    const CZXEfFjWQlfl = bDRKuQl.createShaderModule({
        label: "vertex",
        code: gZRSveAgarVJelQyh
    });
    const eVnEENWnfYvC = bDRKuQl.features
    const eBeSDFJCsQHVYA = bATqGJvEPorIWRm.label
    KiwhKSu.submit([VGWPwa]);
    const SxwExenJPF = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "subtract",
                        dstFactor: "src",
                        srcFactor: "src"
                    }
                },
                format: "r8unorm",
                writeMask: GPUColorWrite.BLUE | GPUColorWrite.GREEN | GPUColorWrite.RED
            }]
        },
        label: "fYaccZyEpZBhhqjkrkS",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "cw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: EhKuRdrPXDsLxQ
        }
    });
    rgrDdZ.setPipeline(SxwExenJPF);
    const pHQKpbzKdhdSrF = rzQHMyHOsZV.type
    const FCqqWwswTGbQsdzrvmUv = bDRKuQl.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: DggNAlQIrramIs
        },
        label: "BjdgeKScfwt",
        layout: "auto"
    });
    const kgGHVoB = oZUUgnTFsccMTIRyIKpm.features
    const jHIPvnVZMSAqo = UVJnYqczdplQAFAoy.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 8,
        baseArrayLayer: 7,
        mipLevelCount: 2,
        baseMipLevel: 1,
        format: "bgra8unorm-srgb",
        label: "hxMnkpBbmsppOiie"
    });
    const RRMFxIxuHCXu = bDRKuQl.createBuffer({
        label: "WtoOcJsxinj",
        mappedAtCreation: false,
        size: 67522792,
        usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.UNIFORM
    });
    hoTaFzffM.submit([lSLolgfAubMcyaLJonFA]);
    RzSqrendLTipUNIkLfB.end();
    const iRnLSqPVM = qXpxdcbYcpVoEtHg.limits
    const oDvluuHAYCKXDHP = bDRKuQl.createShaderModule({
        label: "vertex",
        code: XiBKdzjDUB
    });
    eFsdyCwmXmjKh.end();
    const ndhyhN = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "zcIFGkFMvbRh",
        size: {
            width: 1977,
            height: 4023,
            depthOrArrayLayers: 58
        },
        mipLevelCount: 10,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["rg8unorm"]
    });
    const PjbaFusCjNTFNUiOUSM = ndhyhN.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg8unorm",
        label: "njChXHaGpiEtm"
    });
    const bgRWqbMbfyWVZWoFGVfs = DUoSB.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.16254707446560657,
                g: 0.8462009887823323,
                b: 0.006453237208606133,
                a: 1.0018286333438793
            },
            loadOp: "clear",
            storeOp: "store",
            view: PjbaFusCjNTFNUiOUSM
        }],
        label: "PVMuqSWEwIt",
        maxDrawCount: 2256089375,
        occlusionQuerySet: CSRjNAYPRqAmTSHDuTxA
    });
    const pjzni = navigator.gpu.wgslLanguageFeatures
    const MxnQhFmkDbGurDNdh = bDRKuQl.features
    const wpfyYuMKzlwK = navigator.gpu.wgslLanguageFeatures
    const mcEfy = await navigator.gpu.getPreferredCanvasFormat();
    const KqjavqDVCRywROynh = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const tziKt = cWEuYndEblgMYKXsOYc.features
    const TeKfUdnGoL = DUoSB.label
    const yJEkQBka = bDRKuQl.queue
    const YjUXRpminJhFSAiapU = YELiMxprajKtTRgU.isFallbackAdapter
    rgrDdZ.draw(7);
    const euDwsh = bDRKuQl.limits
    bgRWqbMbfyWVZWoFGVfs.end();
    rgrDdZ.end();
    const cePqdbanMOtdnkZzcRU = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: EGihVwgGAsYUeEisAI,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rgb10a2unorm",
                writeMask: GPUColorWrite.ALL
            }]
        },
        label: "OsXxDgItHPKVlEtMFjU",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "back",
            frontFace: "ccw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: CZXEfFjWQlfl
        }
    });
    jQXgiomdqx.submit([FCjyw]);
    const FxFAUeOkXvpP = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "one-minus-constant",
                        srcFactor: "src-alpha-saturated"
                    }
                },
                format: "rg16float",
                writeMask: GPUColorWrite.BLUE | GPUColorWrite.GREEN
            }]
        },
        label: "mfQQagVi",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "back",
            frontFace: "ccw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: CZXEfFjWQlfl
        }
    });
    const tOGMdXTomLGa = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "add",
                        dstFactor: "constant",
                        srcFactor: "one-minus-src"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rgba16float",
                writeMask: GPUColorWrite.RED | GPUColorWrite.BLUE | GPUColorWrite.ALPHA
            }]
        },
        label: "seqJzmxmAuUYhd",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: jgHODOGIfNMSsJujc
        }
    });
    const FDLxIKJSBZLYIL = bDRKuQl.createQuerySet({
        count: 951,
        label: "SDNueZOoimqYfFCmAdf",
        type: "occlusion"
    });
    yJEkQBka.writeBuffer(vpSkevrfK, 28312296, DztvJZt);
    const NgWDTZxzAY = bDRKuQl.createCommandEncoder({
        label: "fkStAIHiqUeF"
    });
    WBAOEqvZx.writeBuffer(RRMFxIxuHCXu, 35763036, ZaWwXcrrLda);
    const XavxKuFJW = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgba8sint",
        label: "MwjHGfKDHlaR",
        size: {
            width: 3093,
            height: 846,
            depthOrArrayLayers: 16
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgba8sint"]
    });
    const UDPgcTvGE = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: EGihVwgGAsYUeEisAI,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "subtract",
                        dstFactor: "src-alpha-saturated",
                        srcFactor: "dst-alpha"
                    }
                },
                format: "r16float",
                writeMask: GPUColorWrite.GREEN | GPUColorWrite.ALL | GPUColorWrite.RED | GPUColorWrite.ALPHA
            }]
        },
        label: "AtimlqxUZj",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: mzSjRaiZGPS
        }
    });
    const VriVvgAMGsza = rzQHMyHOsZV.type
    const QRsdm = IeXYErn.count
    const oOSLUxamPAmAm = bDRKuQl.features
    const QQJUEUdHfbD = navigator.gpu.wgslLanguageFeatures
    const HcKsjTIQ = bDRKuQl.createCommandEncoder({
        label: "tXGxH"
    });
    const MFOmBUKIbKLafHAh = bDRKuQl.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: zpQug
        },
        label: "eOMQRxujuqaqKljETq",
        layout: "auto"
    });
    const seVNxYASRLxilUIZ = bDRKuQl.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: zpQug
        },
        label: "cSPxEzZtbimn",
        layout: "auto"
    });
    const xLyHpirLEIVruU = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgba8unorm-srgb",
        label: "QWtOILdIjOMqKrwq",
        size: {
            width: 2299,
            height: 434,
            depthOrArrayLayers: 12
        },
        mipLevelCount: 2,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const OndkPaXqAOPcwEXFRzq = xLyHpirLEIVruU.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba8unorm-srgb",
        label: "EvBlKzyqQb"
    });
    const cHBJhqlcZs = cKeeWAZvU.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.8256466311698687,
                g: 0.7024590856080366,
                b: 1.8339149196921074,
                a: 0.9082078318130742
            },
            loadOp: "load",
            storeOp: "discard",
            view: OndkPaXqAOPcwEXFRzq
        }],
        label: "qBEgIG",
        maxDrawCount: 1669926007,
        occlusionQuerySet: FDLxIKJSBZLYIL
    });
    cHBJhqlcZs.end();
    const iNMJSboaIykWsKRj = FDLxIKJSBZLYIL.type
    const XKzjhvNNEgETJKul = cKeeWAZvU.finish();
    const XWBRmFtYzMC = await navigator.gpu.getPreferredCanvasFormat();
    const yEVVNnAaWeUEzm = fpcLyquTk.label
    const jMRYLPh = bDRKuQl.createShaderModule({
        label: "fragment",
        code: ylTQQJlanKMOEVKd
    });
    const dyiUYFRVLhspy = bDRKuQl.createBuffer({
        label: "bFyuUUrByni",
        mappedAtCreation: true,
        size: 256092396,
        usage: GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.INDIRECT | GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC
    });
    const gzGkm = await navigator.gpu.getPreferredCanvasFormat();
    const RkjZryiuBtLlWoncN = lehAfGrdPSTA.count
    const sKxubInOrfkHzwk = bDRKuQl.limits
    const uePbNqj = await navigator.gpu.getPreferredCanvasFormat();
    const ddtpZAubBm = EDPARvETHiokI.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 3,
        baseMipLevel: 0,
        format: "rgba16sint",
        label: "ofVZttpxf"
    });
    const AMHYW = bDRKuQl.createBuffer({
        label: "kbGdeqALJtfBW",
        mappedAtCreation: false,
        size: 83889080,
        usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC
    });
    lHQDT.writeBuffer(SpdQMVEvZWqyzjE, 71283892, vXAMBjMCm);
    const lhErfnXd = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rg16uint",
        label: "vJiSNGRTIHnCl",
        size: {
            width: 3252,
            height: 840,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rg16uint"]
    });
    const YyCww = vqdKtwIidwxsKODq.isFallbackAdapter
    const LZEVvFQXyvRttDz = bDRKuQl.limits
    const DqgmiZI = bDRKuQl.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rgb10a2unorm",
        label: "HolNYmyYrFnw",
        size: {
            width: 3469,
            height: 4095,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgb10a2unorm"]
    });
    const PJKrwDfJariAp = DqgmiZI.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgb10a2unorm",
        label: "ofZdREqVoQbHNUTOza"
    });
    const IrdLlvQaDqfAYa = bATqGJvEPorIWRm.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.21137448296207495,
                g: 1.0213825351897927,
                b: 0.4640963404466034,
                a: 1.0321009632806444
            },
            loadOp: "clear",
            storeOp: "discard",
            view: PJKrwDfJariAp
        }],
        label: "tSsVBUKlj",
        maxDrawCount: 1334136591,
        occlusionQuerySet: rzQHMyHOsZV
    });
    IrdLlvQaDqfAYa.setPipeline(vwbIbFDKos);
    const XBKCbBtMRABYhQQhi = iksWiKaBu.label
    const YvVvlU = bDRKuQl.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: ICrYhoka,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "r16float",
                writeMask: GPUColorWrite.RED | GPUColorWrite.GREEN
            }]
        },
        label: "MuwviskA",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: XtHXkEYf
        }
    });
    const FcTvmKtz = bDRKuQl.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: zpQug
        },
        label: "MaDdDRHlhUxVguDhrq",
        layout: "auto"
    });
    const wFKsKLh = bDRKuQl.createTexture({
        dimension: "1d",
        sampleCount: 1,
        format: "rgba8unorm",
        label: "PCzfyjHEx",
        size: {
            width: 1335,
            height: 1,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba8unorm"]
    });
    const OBtJTtg = PQnOQOGuqbtKUzmRBPet.label
    hoTaFzffM.writeBuffer(vpSkevrfK, 91703768, reKsEPeWRAUvcwrO);
    const CVApKxrXfJQzxpNj = navigator.gpu.wgslLanguageFeatures
    const btzBNeTQwA = HfIBZBVrKXYihN.count
    const qyGbO = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const WtqaIs = navigator.gpu.wgslLanguageFeatures

}
main().catch(console.error);