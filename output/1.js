const {
    create,
    globals
} = require('../../dawn_newest/out/Debug/Debug/dawn.node');
const fs = require('fs');
Object.assign(globalThis, globals);
let navigator = {
    gpu: create([]),
};

if (!navigator.gpu) {
    throw new Error("WebGPU not supported on this browser");
}

function loadShader(file) {
    try {
        const data = fs.readFileSync(file, 'utf8');
        return data;
    } catch (err) {
        console.error('Failed to load shader:', err);
    }
}
const VliLtdVXkrKGr = new Uint8Array([-1496, 5342, 8084, 2099, -5846, 4974, -3741, 8682, -4529, -9794, -9249, 1772, 1440, -144, -5243, -8952, 5118, -1822, 6906, -1171, 4648, 8279, -3691, 893, 3436, 9795, 7247, 8831, -4052, -3383, 2478, -332, 9799, -7651, -7109, 6399, -200, 6223, -9488, -3945, -7994, -8175, -5348, -3703, 8295, 6320, 2320, -642, -7152, -1967, 6562, 4521, 5066, -5934, 1120, -667, -8034, 8920, 9408, 9024, -1785, 3115, -2390, 1579, -6363, -303, -2551, -2203, 176, 8803, -4787, 4489, 7628, -9331, -4697, 9800, -8837, 4887, 4563, -3733, -8858, -190, -1712, 9535, -9590, -6487, 5710, 2451, 8828, 2289, -1699, -5502, 780, -8269, -4228, 8954, 2478, -9645, -6514, 8375, 8086, 9286, 8653, 1033, -5406, -8092, 5084, -3630, -7384, 496, -2582, 3150, -4329, -6886, 2039, -1497, 9202, -201, -2937, 6311, 8591, -32, 7104, 6457, 9557, -5153, 8987, -4356, 6280, 6734, 5200, 3154, 7266, -835, 2199, -222, -3856, 796, 6631, -3453, 5335, 3729, -5787, -9597, 850, 9728, 9546, -8044, -6814, -5596, -4260, -4045, 3688, 3553, 737, -4857, -7584, 3709, -8178, -1051, 1706, -5612, 5265, 8119, 9070, -9405, -7171, 7842, -8901, -5516, -3271, 4017, 6199, 9482, -7328, 6175, -1386, 4693, -6662, -298, -8446, 8920, -5641, 1858, 791, 3712, -644, 8384, -34, -5227, 2347, 3187, -4922, 1821, 1685, 8908, 2062, -660, 2165, -8708, -609, -1275, 2609, 8506, -5374, 5345, 3014, 4500, 8521, -6635, 9272, -7323, 3998, -8124, -8220, 6889, 9595, 6202, -5399, -6114, 7671, -855, 9172, 8625, -9513, -4797, -3360, 2268, 9645, -6909, -1011, -4337, 4522, -119, 177, -1186, 4233, -749, -4949, -3187, 4969, 494, 1628, -6059, -1117, 7331, 4595, 3111, -2251, 5187, 3015, -6811, -5104, -7442, 5754, -5651, -902, -7094, 5930, 5613, 590, 4451, 9200, -9409, -5382, -9339, 932, -8187, 7575, -4090, 6385, -1313, -5655, -2174, -6168, 5813, 9350, -3866, 7802, -908, -4120, -7522, -4072, -5529, 7624, 4253, -5477, 9286, -3604, 2866, 7164, -9500, 5282, 7876, -9375, 9989, -7002, -2777, -578, 1574, -8574, 8315, -1558, -4702, -6986, 1168, 5914, 7316, -4553, 1523, -4417, 7279, -8924, 2916, -6960, -1579, -7962, 5471, -3137, -519, -9602, 6735, 8088, -8094, 7192, 4077, -7034, -6008, 9634, -3735, -377, 8421, 4209, 830, 8490, -6725, 344, 7150, -5207, 5437, -5570, 5759, 2424, -903, 3027, -8059, -2888, 1572, -2161, 569, 353, 8660, -5913, 5933, -3801, 11, 7501, 5602, -5317, -979, -3913, -1394, 5573, 6720, -7447, -8929, -1675, 6157, 3740, -9165, 8772, -9814, -8027, 6442, -3106, 8947, 2576, 490, -9978, 5239, 8698, -2252, 3500, 9916, -30, -1790, -1249, -7107, -4805, 7534, 5474, 3098, -44, 6485, 8138, -8804, -6257, 9421, -9893, 3917, -8723, -2082, 5291, 1143, -5894, 8999, 1821, 7325, -6139, 896, -4934, 538, -7336, -6437, 9828, -9316, 5369, 5874, -1086, -4530, -7373, -8066, -9637, 657, 6503, 8497, -1173, 2456, 1012, 5227, -3452, -5302, -3658, -9679, 8485, -9642, -8766, 7199, 1073, -7395, 3983, -3825, -2183, 5523, 8117, -6668, -2875, -2306, -1553, 6153, 937, 5386, 6550, 2063, 8201, 6601, 4914, 8255, 7182, -5722, -5054, 1346, 4281, -4275, 1026, -9898, -689, 1399, -4574, -7592, -3538, -2933, 8812, -8057, -259, -6720, -3856, 1599, 1161, -1102, 1012, -5839, 5420, -3232, 3456, 7074, 9452, -1817, -9420, 927, 8930, -2197, 8678, -4160, -3300, 7594])
const xnumQqYBTBGOrGD = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const RLlijbBrrVkXDXTmKQ = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const DUfxwvj = new Float32Array([5837, -3073, -441, -1376, 1476, 9152, 2547, -6709, 5954, 2840, 6298, -7970, 451, 5244, 7815, 1614, -1066, 9198, -1363, -8159, 7894, -6273, -3085, -656, -6431, -1371, -7293, 8918, 4069, -8274, -3784, 427, -621, -1874, -4827, 6454, -3300, 337, -7554, -1004, 9591, -8062, -6329, 2267, 2508, 5054, -5641, -3346, -3667, -303, -4218, 8996, -2921, 390, -2327, -228, 3799, 7183, -1375, -7324, -7896, 6493, 4362, 1325, 7982, -5119, -2980, 5521, -210, 9186, 4539, -3324, 6506, -3015, -9236, -6788, -1298, -5489, -55, -9325, -4573, 3503, -9413, 7947, 3824, -3867, 6722, -3542, 475, -5514, 5235, -1966, -1134, -6886, -8906, 7065, 9485, 8382, 7047, 4352, -8819, 5176, -2166, 4638, 8775, 7462, 4791, -9043, 3342, 2372, -6604, -5656, 2112, -3707, 7906, 72, 5558, 4494, 1760, 1886, 9555, -5276, -3551, -2027, 6619, 3227, 9855, -6275, -2646, 4080, 11, 7014, 5007, -9914, -620, 7847, 9984, -2298, 7886, -8707, 6347, -340, 5894, 9817, 8644, -2840, 6990, -8942, 2735, 7172, 6996, -8689, -8494, -3720, 1753, 5454, -7029, -8528, 453, -837, 831, -7748, 2586, 797, -1109, 5866, -714, -6096, -6213, -5887, -527, 3061, 9370, 8904, 9463, 8404, 5879, 8074, -6083, 1641])
const ZYfBDoHKSNdkflPm = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const gAvBTrxeGEMaYajPZ = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const qLcQGbUSBYpyr = new Uint8Array([2391, -7136, 1961, -5407, 4568, 1865, 8954, 2780, -7543, 7524, -7826, 1287, -8327, -3945, 9815, 7037, -3206, -1991, 6982, 6810, 8151, 5790, 7693, 8966, -3896, 548, 2604, 9080, -2865, -6210, 5979, 2143, 8130, 9734, 9997, 2510, 5669, 2162, -3905, 926, -4314, -3721, -440, 8442, 2248, -778, -5958, -2496, -9964, 3081, 7139, -7283, 6322, -1710, -573, 8221, -1215, 493, -2999, -512, 2123, 547, 2798, 175, -9026, -8213, -9814, -3642, 4292, -9487, 6601, -2860, -4691, 192, 3405, 1469, -4116, 2678, 8954, 3324, 126, 333, 5265, -9747, -1539, 7671, -2871, 1530, 4474, 7529, 8416, -2381, -5145, -5965, 1165, -9697, -3824, 6524, 5761, -2748, 444, 2637, -6984, -8736, 9169, -3940, -8308, 3106, 5577, -3528, -3930, -1347, -6357, 6771, -9358, -7388, -6171, 7838, -2961, -2694, 5094, -6459, -7723, -139, -890, 7622, -6414, 111, -5211, -8043, -798, 3548, 441, -3956, -5845, 2874, 9184, -6503, -7955, 1505, -9493, -4435, 1370, 6569, 8095, -3474, 625, 4612, 1400, 241, 549, 2208, -1796, -2071, -7302, -7141, 586, -1398, 4311, 4323, 2921, -1793, 4081, -7568, 8557, 3440, -1808, -7951, 6429, 2914, -7333, -2740, 4604, 6045, -9415, 9126, -2131, 2416, -900, 1309, -8018, -2908, 1996, 8230, 974, 8540, -8005, 5213, -4456, -5999, 6639, -2825, -8689, 131, -9669, -9143, -3461, -7772, 9758, -2154, 1142, 3302, 6205, -2608, -3860, -8633, -4796, 6174, -757, 3298, -9386, -6031, -7494, 827, -118, 8977, 4295, -26, 9544, 2741, -4965, -483, 2895, 429, -4289, -3913, 7397, 7652, -4145, -2185, -7567, 2556, 6711, 8674, 3286, 8129, 6073, 8603, 5202, -6100, 711, -6733, 2018, -1492, -4526, -7412, 1050, -8124, -2481, 4833, -1460, 1521, 4029, -3966, -6653, 6325, 5011, -3652, -8010, -3637, 9192, -8600, -4757, 5742, 6030, 3135, -8223, 1148, 2538, -2741, 8268, -419, -199, 5495, -1624, 3833, 8493, -9107, 5950, 1882, 7301, -7427, -4172, 2163, -1564, 8138, -1976, 8265, -990, 5090, 8608, 5338, 4685, -4484, -6377, -7071, 4625, 4856, 4307, -2768, 9898, -3286, 8806, 6276, -8737, 1622, 2674, 9182, -3821, 5381, -1037, 3916, -6908, 1311, -593, -476, -2965, 3438, 4679, 5504, 230, -7976, 3486, -5200, 8018, 6611, -966, -8280, -2923, 3317, -8479, 5703, 1848, 5067, 4584, 8623, 824, -5599, -1370, -1435, 7262, 732, -4835, 7969, 4198, -462, 9217, -1679, 5261, -6800, 3618, -702, 7907, -3314, 5277, 243, 4685, -8576, 4444, -7656, -4665, 4524, 1275, -3383, -7196, -849, 7805, -6542, 7505, 8457, 4743, -8354, -9670, -1534, -4145, 2696, 5109, -5241, 6782, 9293, -8914, 1005, 7276, -5782, -475, 9330, 3815, -6482, 4305, -747, -5264, 5866, 556, 2994, -2957, -8927, -605, 2017, -816, 385, 1747, 798, 2609, 5684, 5951, -4109, -9693, 1912])
const wyUjAC = new Uint8Array([32, -3651, 5000, 7864, 476, -1319, 5526, 8262, -6753, -6888, -9123, 1171, 4914, -4045, 983, 3270, -1990, -911, 3333, 7338, -3346, -2691, 7130, 5350, -4153, 5455, 4561, -8933, -3813, -2192, -6650, 3067, -1515, 4272, -790, -4342, 6884, -2598, -9563, -7274, -3279, -7561, 2922, -5483, 8706, 8996, -6620, -938, 2444, -5659, -2433, 1899, 6915, -6488, 822, -1508, 7526, 7669, 1412, 5742, 5650, 7681, -4017, 2094, 4630, -6730, -900, -1288, -2726, -592, 6063, -3424, 4599, -5024, 9989, -7540, -8646, 586, -2790, -7500, -9096, 6534, 4024, -7876, 7572, -7882, 8428, 3847, 6689, -9752, 1616, 6981, 2673, -3548, -428, -9093, -8577, -8604, 495, 3527, 990, 2483, -8312, 3781, -7843, -3320, -5217, -7144, 9694, 3536, -8762, -3959, -2974, -4866, -9782, -3840, 9038, 7466, -4303, -1034, 1408, 2658, -7025, -5743, 3058, -2495, -9495, 3869, -1716, -8291, -69, 7140, 9306, -2488, -2476, 7636, 4572, -7265, 5786, -5415, -3855, 6908, -3408, -993, -1899, -9910, 5962, 4514, 4471, 7018, 7379, -5355, -950, -5871, 9737, 100, -8787, -9278, 8169, -8900, -1090, -1527, -9909, -8882, -3108, 6977, -1912, 7667, 5561, -4965, -7688, -1892, -3850, 52, -4919, -7556, 8661, -4053, 7623, 9827, -4581, -252, -2965, 2263, -1798, -2591, -630, -808, 6266, 3343, -4861, -913, 6835, -1565, 7512, -378, 5756, -563, -8336, 7332, -8158, -2515, 6432, 9563, -7571, 6969, -2045, 4485, -419, -3736, -4984, -9163, -9959, 4559, 6537, -8922, -2535, 1590, 1659, -7941, 7903, -3626, -912, 1658, 808, -2605, 667, 2223, -8575, 3467, -2786, 9937, 4814, -908, -5238, 735, -7874, -6440, -4451, -4279, 8525, -4689, 3906, -4592, 7664, -1488, -1281, 1314, -4232, 3557, 6391, -7108, 6855, -1788, -9190, 8079])
const SxTJTkPGvXTCYw = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const thAAov = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const YRsvlFlSWDqNC = new Uint8Array([8596, -2843, 4931, 2057, 1414, -5867, -9547, 1529, 3384, -5118, 3331, 919, 9389, 4164, 1219, 53, -2611, 9065, -3554, 4058, 3495, 6928, -1696, 1610, -6030, -6286, -2857, -8106, -3569, -7554, -5129, 2365, -9263, 5653, -2919, 6394, -1229, 7421, 6977, -8287, -7228, -2371, 8436, 268, 6995, 2532, -4538, 9402, -6946, 1231, -6819, -7371, 9309, -1156, -6112, -7207, 7734, 1264, -4719, 7411, 6906, -3948, 8781, -5763, -3936, 3446, 6286, -6962, 2878, 8075, 6435, -447, -2587, -7168, 4735, -5290, 6142, 4847, -1304, 7011, -211, 97, 2707, -7914, 2344, -9282, 2144, -216, 9800, -9823, -935, 1233, 8542, -6597, 5700, -7503, -905, -6458, -5188, -6972, -6666, -3107, -8787, -2562, 5596, -5604, 9934, -5683, 459, -1521, -308, 7580, 3002, -841, 285, 3325, -6054, 2044, -5219, 6163, 5445, 4885, 6476, 8852, -6959, -7018, 6556, 4345, -578, 6042, -9405, 7720, 4168, 9798, 14, -8046, 5553, -2344, -7111, 6651, 134, 562, -4608, -275, -1193, 1748, 9615, -569, 2266, 7220, 8842, 3956, 2346, 2166, 3605, 5414, 7631, -7581, 4785, -2354, 5411, -7467, 4070, 8627, -2797, 2988, -1586, -5356, 6679, -4064, -6262, -9218, -1152, -1386, 7753, -9098, 7562, 3914, -3709, 6764, -4730, 7205, -7354, 6323, 7518, 1757, 4275, 4447, 4982, -2787, 7491, 8919, -6448, 1132, 284, -7742, -4652, -8960, -7986, -4367, -1119, 2805, 5519, -7698, -113, 7771, 6587, -7171, -1731, -5875, 9447, -2791, -408, -9250, 8170, -6300, 7864, -2116, 4070, 6762, 9865, 4323, 4349, -7364, 2286, 6361, -9285, -971, -5831, 55, -4584, 4556, 7991, 8191, -8977, 6520, -4405, -4440, 7504, 4372, -3339, -214, -1671, -1201, 6168, -8043, -3903, -4038, -6826, -5224, 1110, -5828, -7957, -306, 8220, 431, -8754, 618, -9401, 2976, 2220, -2536, 54, 8311, 475, 3459, -3971, -6190, 3203, -6014, 8397, 3756, -3763, 6373, -5256, -7621, -9448, 7635, 4751, -6848, 1343, 785, 9832, 4563, -6418, -5389, -4392, -4899, -2220, 5585, 3400, 6939, 9899, -1716, -3532, 2156, 6536, -6640, -846, -4275, -4607, -5035, 87, 5699, -6548, 2472, -5852, -4520, -1141, -179, 304, 9909, -8865, 6482, -9662, -8706, -7843, 3422, -4426, -8732])
const PLNmWharFVw = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const OGJckqbe = new Uint8Array([-6754, 4240, -1191, -3530, -5292, -8156, -8569, 1590, -4726, -4845, -8428, 7778, -3971, -8690, 4831, -6328, -2440, -1388, -5156, -8817, 2182, 5769, 484, 1508, -8939, -564, 744, 1367, -3311, 8366, -4791, -7822, 5351, -6015, 7224, -2376, 8405, -1145, 2584, -3591, 9414, 9587, -4520, -8587, -2279, 5253, 6538, 5150, -1207, -7438, -4918, -4171, -5500, -8833, -6136, 678, -6475, -9601, 9090, -7934, -4319, -5977, -6597, 1348, -5588, 1856, -2987, -6043, -1069, -4289, 448, 6880, 4259, -8257, 6070, -2687, -7690, -2055, -2657, -8251, 8791, 7846, 7771, -6410, -8588, 6259, 3290, 3597, 2085, 8264, -7141, -8168, 2677, 6571, 297, 733, 2272, -6205, 5637, -9531, 6120, 9438, 3859, 3074, 9074, -4189, -7997, 5704, 2488, 4030, 2357, -2054, 3914, -342, 7877, -5070, 7985, 3870, -4422, 844, 821, 6923, -1799, -7929, 9445, -5790, -7832, -3357, 3544, 9851, -8935, -3825, -2656, 7621, 9555, 3748, -3747, -7850, 8598, -3988, -6592, 8686, -3639, 1405, -1883, -3781, 6476, -7446, 5086, 8634, 4383, -4297, 551, -4636, -2347, -3736, -229, -9861, 4480, 7519, -116, 4663, 4782, 8495, -9679, 6617, -8883, -1647, -867, -1999, 4042, 871, 4291, 5744, -9537, 4942, 285, 2683, -920, -2309, 3199, 8715, -7244, 5477, -6484, -7783, -6344, 5580, -624, -255, -8912, -875, 6622, -142, -4851, 6001])
const dwmNlDWqXEgiqCBXp = new Uint8Array([-7745, -6604, 6140, -3283, -9400, 44, -6045, -3354, 3164, -3846, -5201, 4484, 4919, 8976, -4575, -1906, -7118, -9865, -4221, 26, -3533, -9909, -8044, -9778, -9543, 4882, -7260, 2791, -475, -3603, 9574, -7059, 5460, -5997, 7079, 5362, -3813, 8485, 2570, 4304, 2864, 4040, 7368, 7940, -8119, 4944, 2830, -228, -7456, -2514, -7129, -7772, -3868, 8210, 847, 5796, 3139, -2518, -6475, 9071, 8211, -3192, -7467, 678, 4004, -8254, 342, 7273, -9227, -726, -4167, -8914, -1583, 6700, -1429, 6738, 2458, 1199, -7488, 556, -9942, 6717, 3891, -7257, -1854, -674, 0, 7979, -508, -1126, -7117, -9363, -9024, -3081, 6372, -992, -3674, 84, -775, 7590, 1757, -7574, -458, 9586, -4842, -8758, -4740, 9314, -9151, -9966, -9544, 9180, 6659, -500, -4369, -2523, -7986, 2620, 9566, 2223, -3517, 9557, -7336, -838, 9091, -7679, -3234, 4610, 6452, -3290, -4187, -9223, 5781, 9329, -7530, -1928, 8449, 175, 161, 4211, -5069, -8872, -8054, -5443, -2439, -7421, 962, 9142, -4980, 6314, -9697, 6060, 1721, -7125, 6309, 1230, -7085, -7138, -6898, -658, -3182, 7280, -2348, 7623, 5230, 770, 8698, -8516, -531, -6780, -8040, 1838, 9701, 3068, -2736, 2218, 198, 6502, 9099, -7753, -7451, 5235, 6644, 5509, 1950, 8790, -875, -7982, -968, -9358, 8256, 4407, 9992, -4168, -1220, 3276, 3247, -907, -6322, 4595, -1540, 4608, -1012, -3727, -7558, -2929, -8927, 9849, -7149, 2791, 351, 5295, -1792, 4235, 589, 2153, -7158, -1175, 4848, 5188, 366, 3116, -6907, 1388, 222, 6330, -3499, 6569, -9003, -7186, -2459, -9150, 4482, -5776, -5377, -3788, 3566, -4546, -801, -9470, -7681, 1426, 6033, 1581, -1826, -2076, 7373, 5541, 9827, -2695, -5499, -8685, 8610, -3824, -7076, 5072, 5285, 3461, -1209, -4278, -6545, 726, 9567, 6873])
const ODoqGD = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const ocVhplcrXqgqR = new Int8Array([8489, -4049, 168, -1302, 3981, -5008, -1943, 8573, 4485, 438, 9768, -9307, -8936, -3003, 6184, 1032, -579, -220, 689, -2472, -6791, -9681, 3499, -3796, 1495, -2353, 5274, -9712, 4560, -8983, -1528, 6984, 3418, 8413, -2986, -4409, -5036, -2660, -5068, 6950, -591, -5735, 5746, -2132, -5539, 5772, -4447, 6467, -7012, 2084, 6464, 3896, -1293, 6371, -417, -1858, -9979, -7635, -2007, -8184, 9587, 2849, 6065, -3426, -7783, -9016, -1566, -1019, 9458, -6900, -1005, 6034, 9598, 3542, -1711, -7174, 8310, 7356, -6455, 5725, -6164, 9065, -6776, -3413, 9943, 6725, -2956, 5143, 6379, 1119, 4554, 7545, 752, 3509, -3918, 3812, -4755, -2780, -7063, 3572, 1107, 9774, 3678, -5362, 3011, -5796, 2179, -9962, -7533, 2996, -904, -4649, -522, 5665, -8388, 673, 7807, -2461, -5342, -2851, 2869, -7117, 588, 6202, -155, 6963, -7587, -1814, -1362, 7478, -4639, 9116, 5645, 7228, -6989, 6447, -7135, -7709, -6214, -8292, 9208, -3663, 5424, -5193, 3721, 811, 8721, 3225, -6812, -5263, 4343, -4803, -5739, -2370, 5504, 5606, 275, -1431, 78, 4655])
const QgwCGTIivKDcPjHhPYJz = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const xJCWhionYIngzYLqDChq = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const MwRQBhJrnOBGzaiUW = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const YszdkDaoVjcDoeppNGDr = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const AxEUtllPkjXSABzz = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const IzRaDEnHFZ = new Int8Array([-6350, 3247, 3070, -2158, 816, -1009, 9451, 2491, -627, 1823, -477, -4632, 8392, -8063, -3873, -6729, 1666, 2510, -1278, -10, -4323, 3250, 3911, -9214, -8566, -9777, -7610, 7791, -2653, 1230, -7321, 2246, -2150, 2682, 3975, -6254, -7755, -5905, 873, -3842, 348, 933, -8944, 6804, -2236, -6383, -8540, 8530, -4438, 3421, -6560, 7737, 3289, -6322, -7695, -4362, 5008, -2856, 3359, -5091, -5926, -4856, 9138, -7685, -1327, -3269, 8452, 2105, -6882, -9778, -4184, 2547, -2868, 3, 9393, -9866, -4466, 9335, -2206, -1838, -8547, -3946, 7002, 9935, -1494, 8264, 3375, 3374, -4623, -400, -3893, 996, -7906, 7391, 6776, 1894, 6791, -9540, 2517, 963, -3809, 1156, 5346, -8414, 8274, 3548, -5422, 7192, -2514, -7800, 7435, -9243, -1563, 2162, -4264, -919, 2983, -6686, 4417, -8073, 3458, -84, 9986, -3943, 4323, -3893, -1640, -9676, 3785, 1222, -5434, -8478, -534, -6512, 1362, -5327, 5700, -6549, 1656, -8288, -3659, 8133, -8689, -7992, 1693, -6417, 7350, 6567, 1690, -7176, 9323, -9587, -880, -6999, 186, -6342, 3279, -1271, 6359, -7415, 6056, 6287, 1379, 4878, 918, -9816, 162, 396, -9254, 6528, -1694, 8021, 5140, -8054, -8880, -1121, -7564, 5299, -3941, -3581, 703, -6879, 3992, -6303, -4320, -2798, -8433, -4573, -49, 1238, -9507, -8883, -5515, 3105, 2320, 7828, 6492, -9774, -7344, 6967, -5724, 3717, 2948, -9891, 7112, -6577, -4045, -3530, 5383, 9820, -2103, 1727, -9746, -6272, -7786, 1940, -9775, 1324, 3991, -7893, 2057, 6119, -6836, -1393, -7111, 6622, 2429, -854, -3705, 2248, -396, -6069, 9001, -3728, -5310, 3693, 636, -5000, 9723, 3403, 3938, 5730, -1506, 4887, -1592, -3717, -4224, -9551, 2071, -4030, -841, -9274, 6346, -4009, 8565, 4049, -6842, -790, -6545, 5849, 9181, -9919, -467, 4069, -7144, 2659, 15, 4938, 2323, -4757, 1187, 1297, -6162, 6179, -4077, -9703, -3962, -4054, -8680, -1996])
const ufKcDJyRFJwKOjvqpKS = new Uint8Array([-2477, -3084, 4944, 1496, -3220, 8695, -3628, 5737, 9292, 1621, 6053, 5778, -7509, 3828, 7747, -1665, -2544, -5128, -5872, -8675, 8442, 389, 3457, -2429, -5143, -8796, -6929, -5814, -2949, 6029, -1785, 2971, 2414, -1303, 9181, 1922, 7685, 1968, 7336, -1718, 2489, -247, -852, 378, -4416, 563, -3934, 6072, 6182, -8411, -233, -5846, -347, 2846, -9866, 2527, 2353, 8780, -2080, -3321, -561, 4171, -1805, -9983, 9016, 8215, -3577, -4362, -2442, 486, -420, -1468, -1838, -4609, 9921, -3791, 9839, -8099, 4302, -2481, -370, -1280, -680, 1567, 4891, -8452, 7152, 8314, 8285, 2155, -5189, 3301, -1829, -7668, 8115, 6759, 2940, 6775, 8560, 9779, 1155, -4532, -209, 7990, -687, -766, 1723, -1516, 6659, -1909, -8885, -5235, 8914, -271, 9477, 7453, -4390, 6189, 8025, 4420, 8534, 4265, -8197, -861, -4538, -6141, -537, 9382, -5511, -2786, -8134, 8165, -5186, 7188, -6299, -5469, 8839, 654, -476, 4689, -1544, -1656, -400, -5755, 9021, 3010, 7535, -6314, 3089, 4831, 4162, -1790, -4924, 2804, -361, 7187, 489, 6810, -4674, -4693, -2694, 6294, 2084, 873, -4562, -393, -21, 8551, 5624, 5451, 6112, 8974, -3744, -1212, 9949, 5613, 196, -5022, -4221, 8734, -6568, -2509, -855, 1272, 3043, -1583, -8474, 6628, 4293, -6846, -3447, 6875, -1763, -867, -8484, 8110, -6429, -1574, -6555, -9402, -1450, 8379, 47, 9621, -269, -1804, 6264, -2160, 6939, 1373, -3873, 5569, -8075, 5342, 8030, -1721, -6299, -4306, -3832, 7103, 1855, 973, -5020, 6786, 991, 8255, 3034, -8833, 8260, -2569, 2492, -6949, 7946, 224, -9082, -6227, 7320, -4563, 5674, -6265, -8866, 2590, -9821, -7869, 8110, -9579, 8407, -2311, 8973, 7667, 3805, 2920, 7177, 6410, -6060, -9783, 8454, 2115, -7842, -7425, -3989, -2911, 9315, -8597, 4951, 7333, 2860, -2188, -7743, 3543, 6224, -885, -910, 3261, -6724, 2496, 2759, -5308, 8580, 9155, 5125, 4265, 2713, -7912, 9972, -6721, 942, -8511, -5850, -9431, -9999, 4731, -7297, 2606, 5743, 2621, 9494, -4538, 1414, 4986, -7353, 386, -1531, 4115, -5673, 3774, 453, 9426, -5347, -6686, 66, 5088, 2177, -5712, 4998, -8434, -7682, 5453, -2596, -59, 3062, -7388, 6840, 6318, -2967, -9484, -6719, -834, -3591, -3691, 6335, -5031, -8835, -1474, -4141, 8007, 1491, 1860, -105, -5166, 5067, -2721, 6280, -7340, -5180, 165, -3205, 9900, 886, 1552, -1759, 7592, 9487, -337, 1205, 7219, 9698, 5893, -4043, -6204, 9941, 4407, 2619, 1840, 3692, -6938, -7477, -6648, 3454, 2620, 3420, -8129, -7714, 7938, 184, -1201, 2760, 9944, 7534, -5327, 4244, -6422, -7786, -973, 9388, 4840, 1225, -1118, 6218, 5763, -4952, 8875, -4785, 1823, 3522, -3458, -4759, -6689, 4979, -8431, -5348, 2353, -6723, -7641, 121, -5645, -9312, -4628, -4867, -1637, -3836, 9916, -2178, 4597, -5536, -1359, 4188, -4778, -1071, -3096, 8284, 8031, -3374, 3906, -9338, -6781, -2613, -9681, -282, -3328, 7282, 165, 5299, 8256, 3195, 734])
const yukZyqxkXwqObXDAor = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const qSLscisZGeZHVPk = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const JDzXsMWUc = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const tCdgKvajKnh = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const hYkhbItvuK = new Float32Array([-7035, 1625, 3670, -2753, -8531, 8464, 1369, 3361, -6864, -8227, -6932, -7607, -9139, 1232, -3230, -3181, 4590, 1743, 8309, -129, 9327, -3670, 9033, 5842, 7296, -4084, 2616, 9454, 7534, -8652, 1256, -5813, 825, -8162, 7086, -7657, -8868, 1288, 2276, -2066, 1721, 370, 1385, -9043, 5684, 9612, 1263, 7301, 4042, -4809, -7402, -8557, 8084, -5208, 3785, -7246, 858, -4437, 4203, 6126, 452, 4605, -2654, 3788, -690, 4093, 184, -3704, 4871, -2945, 49, 5598, 4340, 5405, 290, -9107, -6499, 4606, -6584, -5886, 7435, 4796, 8346, 39, -1447, 7319, -5494, 7808, -8417, -8093, 8008, -2480, 8590, -1263, -8687, -2434, 5257, -6337, 7266, 8054, 526, 2358, 2428, 7597, -5240, 2469, 459, -5324, -7546, 4055, 6216, -3582, 9489, -8663, 9148, -8512, -9244, 4891, -1398, 6755, -1054, 52, 489, -3101, 1529, 4401, -8715, 8087, -647, -9523, -5540, 8874, -135, -5823, 7291, -3985, 5342, 4784, -671, 2700, -1867, 2990, 2166, -7601, 6655, 7388, 5244, -8693, -9222, -7664, -5410, -3601, -622, -6957, 3262, 2307, 4804, -8492, 5783, -5269, -1018, -630, -1605, -1327, 8332, 280, -6634, 3010, -7130, 6061, -3273, 7091, -2615, -1570, -9650, 7480, 1667])
const BZEXGEqe = new Float32Array([-8316, 1115, 9559, -3636, -8320, -1886, 4129, -9273, 9845, 1803, -4440, 1070, -6053, -5553, 2389, -8239, 3308, 4248, 5758, 3174, -7578, -6003, -7629, -5863, 7104, -2687, 9377, -9288, 1441, 1276, -3611, 931, 5081, -7112, 6531, -2802, 6434, -4808, -253, -2620, 1394, -1603, -4301, -2699, -3385, 5409, 8075, 8245, 1335, 8689, -3243, -1536, 8844, -6690, 1301, -2125, 971, -7579, -6020, -6897, -9948, -5635, -5007, -4827, -1603, -6838, -8802, 5958, -234, -3822, -1963, -4009, 6272, -9404, 8240, 7556, -9633, -1316, 3661, 4697, -5624, -5790, 5414, 4640, 6073, 8846, 276, 6296, -990, 1820, -8111, -357, -5221, -1959, -7451, 6580, 7756, -1454, -4256, -2088, -3393, -78, 9899, 2569, -8560, 180, -8061, 5150, 907, -457, -4304, -5910, 1090, 3906, 5556, 6208, 5566, -4025, 8524, -4388, 1543, -8864, -4037, -123, 9108, -3117, -270, -3305, 9431, 1578, -1478, 5766, 6100, -5554, -1009, -1427, 7655, -7586, 11, 3968, 851, 9164, 5594, 150, 7660, -2208, -3621, 1525, -7179, -6132, -8837, 894, 9932, -1427, 4364, -619, -6161, -5175, -4560, -7295, -5475, 4713, 4955, 5165, -4029, -479, 2912, -4380, -8986, -7043, 8092, -9003, 4714, -3544, -532, 3966, 791, 5181, -381, 6418, 1968, 1666, 1934, 20, 4897, -3783, 3961, 5489, -7617, -3647, -311, 6991, 4648, -4338, 5355, -3173, -3179, 1492, 4164, 966, -7347, 9317, -8601, -855, -6483, 3937, 6079, -1703, 6699, 6653, -6936, -7562, -540, -9031, 6754, -4943, -5735, 6005, -7901, 3887, -3046, 5836, 7006, 4737, -6079, 4322, 4757, 5994, 5867, -8716, 7416, 6330, -1792, 9650, 593, 8953, -8876, -8391, 9146, 978, 977, -3893, 2013, -7431, -1254, 9305, -950, -6869, -8692, -3830, -246, -3448, 1720, 7529, -8672, 7259, 3623, -9189, 5954, 8279, -327, -9060, -8792, -3886, 1468, -1346, -4356, -9401, 5079, 6064, 4054, 5791, -1594, -6195, 2420, 3903, -857, 2700, 3827, 7505, 7144, -6712, -9280, 3110, 5934, -7457, 1201, -6843, -3352])
const DbiQgcS = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const VTgZkufCDTgwAxAfR = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const zWSOKtRcWQBqs = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const nrCJOdwQAwijZJt = new Uint8Array([17, 251, 246, 66, 58, 181, 113, 125, 23, 109, 64, 232, 100, 188, 134, 185, 214, 6, 230, 20, 63, 112, 44, 51, 131, 9, 213, 42, 184, 165, 30, 158])
const LjcJJbmSRRajIaXGD = loadShader('../WebGlitch/rsrcs/shaders/compute/1/compute.wgsl');
const ReQXucfsOIuxPLZ = loadShader('../WebGlitch/rsrcs/shaders/compute/1/compute.wgsl');
const RjLxTyfAHOXRS = loadShader('../WebGlitch/rsrcs/shaders/compute/1/compute.wgsl');
const rsgQRuWjiV = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const alkvYNmSPRiBKvnzWv = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const UuSdKslyOW = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const qQSkfxzBm = loadShader('../WebGlitch/rsrcs/shaders/compute/1/compute.wgsl');
const jgOyNsnlNZAoyvqhc = loadShader('../WebGlitch/rsrcs/shaders/compute/1/compute.wgsl');

async function main() {
    const aHuSQZfGrDlv = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const GVCLSendh = await aHuSQZfGrDlv.requestDevice();
    const lvNBU = GVCLSendh.createShaderModule({
        label: "compute",
        code: jgOyNsnlNZAoyvqhc
    });
    const ptaKt = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: lvNBU
        },
        label: "XMFNPAwaHNJpIXsaEN",
        layout: "auto"
    });
    const BoopNCfyeptbZEOz = ptaKt.label
    const JislWCf = GVCLSendh.queue
    const rriqgAikUVcS = GVCLSendh.createCommandEncoder({
        label: "qnUvLaOlcKhpJjPHJ"
    });
    const vhkNRvALFaDKnehWKuj = rriqgAikUVcS.finish();
    JislWCf.submit([vhkNRvALFaDKnehWKuj]);
    const MzWyDON = GVCLSendh.createShaderModule({
        label: "compute",
        code: qQSkfxzBm
    });
    const jCELBkB = GVCLSendh.createCommandEncoder({
        label: "NjaozGcNMWOs"
    });
    const bcEAokCkmwGtsCreVSTZ = jCELBkB.finish();
    JislWCf.submit([bcEAokCkmwGtsCreVSTZ]);
    const OLLZBb = GVCLSendh.createQuerySet({
        count: 972,
        label: "PmfTJyImRZYujbj",
        type: "occlusion"
    });
    const VwuBjVWjgJcGyeVMFX = OLLZBb.label
    const JJcSovzZvaq = GVCLSendh.createCommandEncoder({
        label: "SGHHywqmnDyUttwGsK"
    });
    const tVDlTZYjGDk = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgb10a2unorm",
        label: "nGdxTjKcgYfg",
        size: {
            width: 221,
            height: 775,
            depthOrArrayLayers: 52
        },
        mipLevelCount: 10,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgb10a2unorm"]
    });
    const dLhOxjnQoemcWuozV = tVDlTZYjGDk.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 6,
        format: "rgb10a2unorm",
        label: "wOVBde"
    });
    const VipPxbqRofkYXsJQZ = JJcSovzZvaq.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.4824425520613234,
                g: 0.3637362626257161,
                b: 1.8836772018792118,
                a: 1.7478947752598726
            },
            loadOp: "clear",
            storeOp: "discard",
            view: dLhOxjnQoemcWuozV,
            depthSlice: 0
        }],
        label: "PkIKflHHvRiuRGNiFu",
        maxDrawCount: 3727656171,
        occlusionQuerySet: OLLZBb
    });
    const JKKgVUZwKgPEbcohZph = GVCLSendh.createShaderModule({
        label: "fragment",
        code: UuSdKslyOW
    });
    const tXFZYHxvCUYb = GVCLSendh.createShaderModule({
        label: "vertex",
        code: alkvYNmSPRiBKvnzWv
    });
    const ZPQOPlrKQkGOJGh = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: JKKgVUZwKgPEbcohZph,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "src",
                        srcFactor: "one-minus-dst"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rgb10a2unorm",
                writeMask: GPUColorWrite.BLUE | GPUColorWrite.GREEN | GPUColorWrite.ALPHA | GPUColorWrite.RED
            }]
        },
        label: "JIPOY",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: tXFZYHxvCUYb
        }
    });
    VipPxbqRofkYXsJQZ.setPipeline(ZPQOPlrKQkGOJGh);
    VipPxbqRofkYXsJQZ.draw(4);
    VipPxbqRofkYXsJQZ.setPipeline(ZPQOPlrKQkGOJGh);
    const GgOYKy = GVCLSendh.createCommandEncoder({
        label: "zkXNYAo"
    });
    const miTpEvN = aHuSQZfGrDlv.features
    const FHEAeJkRiaBNoeuAs = GVCLSendh.createBuffer({
        label: "wCGpFENHBRlJCgCiaF",
        mappedAtCreation: false,
        size: 9316148,
        usage: GPUBufferUsage.VERTEX | GPUBufferUsage.INDEX | GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE | GPUBufferUsage.UNIFORM
    });
    VipPxbqRofkYXsJQZ.setVertexBuffer(0, FHEAeJkRiaBNoeuAs);
    const PAENWc = ZPQOPlrKQkGOJGh.label
    const sYsEYdiVfmLmm = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: lvNBU
        },
        label: "wqvqfepoqgrHHkAuEHq",
        layout: "auto"
    });
    VipPxbqRofkYXsJQZ.setVertexBuffer(0, FHEAeJkRiaBNoeuAs);
    VipPxbqRofkYXsJQZ.end();
    const HciYtmDYahLOM = JJcSovzZvaq.finish();
    JislWCf.submit([HciYtmDYahLOM]);
    const FLcrcYbXxzWDjishc = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "depth16unorm",
        label: "iqbABChBSIw",
        size: {
            width: 2955,
            height: 3651,
            depthOrArrayLayers: 19
        },
        mipLevelCount: 7,
        usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST,
        viewFormats: ["depth16unorm"]
    });
    const ybfxfLaCc = ZPQOPlrKQkGOJGh.label
    const VXhmzFcrHkyEnJsGPxQG = GVCLSendh.label
    const tykdhEMAjezLeDu = aHuSQZfGrDlv.info
    const aNruaTYygkzQyajYlcQ = GgOYKy.beginComputePass({
        label: "OmhLlLU"
    });
    const wxVkIKCXkqG = aNruaTYygkzQyajYlcQ.label
    aNruaTYygkzQyajYlcQ.end();
    const LvlmIHJaldfGFF = GgOYKy.finish();
    JislWCf.submit([LvlmIHJaldfGFF]);
    const SGBgmzNmtZ = GVCLSendh.createCommandEncoder({
        label: "uyZuxoyGeVX"
    });
    const oIKmbpA = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: lvNBU
        },
        label: "BllAEkUhhhvTnyUIuoP",
        layout: "auto"
    });
    const EFqKywU = GVCLSendh.createShaderModule({
        label: "vertex",
        code: rsgQRuWjiV
    });
    const aoZHDPsom = GVCLSendh.limits
    const LcMxsv = ZPQOPlrKQkGOJGh.getBindGroupLayout(0);
    const MwJScWkyRRaoFd = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r16float",
        label: "yjsusFZNMQUcQ",
        size: {
            width: 1009,
            height: 663,
            depthOrArrayLayers: 36
        },
        mipLevelCount: 7,
        usage: GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["r16float"]
    });
    const ZoZNghLnuNRqItTiqJyO = MwJScWkyRRaoFd.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 4,
        format: "r16float",
        label: "BnnCLppMIyn"
    });
    const vzmWiYQyJfgG = SGBgmzNmtZ.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.9108174634039918,
                g: 0.3774273857854493,
                b: 0.8814211875772555,
                a: 1.3452381403914586
            },
            loadOp: "clear",
            storeOp: "store",
            view: ZoZNghLnuNRqItTiqJyO,
            depthSlice: 0
        }],
        label: "YxKiUgxAuMETxtrZqN",
        maxDrawCount: 531159128,
        occlusionQuerySet: OLLZBb
    });
    const RgWMROlIoR = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: JKKgVUZwKgPEbcohZph,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "one-minus-src-alpha",
                        srcFactor: "one-minus-dst-alpha"
                    }
                },
                format: "r16float",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.BLUE | GPUColorWrite.ALL | GPUColorWrite.RED
            }]
        },
        label: "efeOjIMckO",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: EFqKywU
        }
    });
    vzmWiYQyJfgG.setPipeline(RgWMROlIoR);
    const heyKuxhZe = GVCLSendh.createBuffer({
        label: "bDyLdyFkoptCxVS",
        mappedAtCreation: false,
        size: 168156760,
        usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST | GPUBufferUsage.VERTEX | GPUBufferUsage.INDIRECT | GPUBufferUsage.COPY_SRC | GPUBufferUsage.UNIFORM
    });
    const fkSrp = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: lvNBU
        },
        label: "rsbWSRcnxTqyjyYpHpJ",
        layout: "auto"
    });
    const GvTDhPYkefKmJOSN = aHuSQZfGrDlv.features
    const eVfWZGLqqZlBRe = aHuSQZfGrDlv.info
    vzmWiYQyJfgG.draw(3);
    vzmWiYQyJfgG.setPipeline(RgWMROlIoR);
    const rOXbaJzD = MwJScWkyRRaoFd.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r16float",
        label: "TihDZBVTWzqbRinib"
    });
    const hOngfUgkM = GVCLSendh.queue
    const eQCLcNqqydIAwPCzQ = GVCLSendh.createShaderModule({
        label: "compute",
        code: RjLxTyfAHOXRS
    });
    const ZUYXxHNTqLlfbM = GVCLSendh.queue
    const qNOuiHqxJfYOwsrLuU = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: lvNBU
        },
        label: "xjhQphTdWCjyfzln",
        layout: "auto"
    });
    const HLccYdDhMedtyaxK = GVCLSendh.createShaderModule({
        label: "compute",
        code: ReQXucfsOIuxPLZ
    });
    const HuyqVnsFgzqbKmfFJY = OLLZBb.type
    const ZpgTCtzma = SGBgmzNmtZ.label
    const dhEXgmwbVfzHIFwBdDM = oIKmbpA.label
    const rtwLauzQD = OLLZBb.count
    const EPUcib = JislWCf.label
    const slXgDTFGxl = RgWMROlIoR.getBindGroupLayout(0);
    const XqZPYCTcim = GVCLSendh.createShaderModule({
        label: "compute",
        code: LjcJJbmSRRajIaXGD
    });
    const kFWYdZQXsLtnYbuGG = GVCLSendh.label
    const EZjqZjrnbOpuT = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: JKKgVUZwKgPEbcohZph,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "one",
                        srcFactor: "dst-alpha"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "src-alpha-saturated",
                        srcFactor: "one-minus-src-alpha"
                    }
                },
                format: "rg16float",
                writeMask: GPUColorWrite.RED | GPUColorWrite.GREEN | GPUColorWrite.ALPHA | GPUColorWrite.ALL
            }]
        },
        label: "dDURfdwRvSi",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: tXFZYHxvCUYb
        }
    });
    const chmNGgHwhy = vzmWiYQyJfgG.label
    const NCNgzPseV = navigator.gpu.wgslLanguageFeatures
    const eMmetjwJz = GVCLSendh.createQuerySet({
        count: 1094,
        label: "WeJjeTocwtN",
        type: "occlusion"
    });
    vzmWiYQyJfgG.setVertexBuffer(0, FHEAeJkRiaBNoeuAs);
    vzmWiYQyJfgG.end();
    const QnQzvnqFGh = SGBgmzNmtZ.finish();
    hOngfUgkM.submit([QnQzvnqFGh]);
    const KveHvR = eMmetjwJz.count
    const qLLTSnih = EZjqZjrnbOpuT.label
    const lukYmvTEAM = GVCLSendh.createCommandEncoder({
        label: "kSbOcJDb"
    });
    const GQdWTj = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rg16float",
        label: "QCjCZlenNBNtvQDzeqbY",
        size: {
            width: 1693,
            height: 88,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rg16float"]
    });
    const zaDTgIPvf = GQdWTj.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg16float",
        label: "hRBoU"
    });
    const FegLKrVC = lukYmvTEAM.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.6244664182870774,
                g: 0.5328591711479349,
                b: 1.910245873957921,
                a: 0.4197364444804952
            },
            loadOp: "load",
            storeOp: "store",
            view: zaDTgIPvf
        }],
        label: "ShPAWByNWqAlRZwWvj",
        maxDrawCount: 2150073296,
        occlusionQuerySet: eMmetjwJz
    });
    FegLKrVC.end();
    const qdgVkYry = lukYmvTEAM.finish();
    JislWCf.submit([qdgVkYry]);
    const KmlgsXZ = GVCLSendh.createCommandEncoder({
        label: "hkYSyQgnEUiExNXHoI"
    });
    const PwNQAHGzwrKDBHrhq = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "aFRjPoPb",
        size: {
            width: 531,
            height: 93,
            depthOrArrayLayers: 14
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["rg8unorm"]
    });
    const QUELPSJrjcIhAAtBnb = PwNQAHGzwrKDBHrhq.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "rg8unorm",
        label: "tNxRRXBmZGaag"
    });
    const iTFEtcIbg = KmlgsXZ.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.870697965821182,
                g: 0.042857019289542775,
                b: 0.5553271236435291,
                a: 1.8488019743006956
            },
            loadOp: "clear",
            storeOp: "discard",
            view: QUELPSJrjcIhAAtBnb,
            depthSlice: 1
        }],
        label: "puLIjCkqotcPX",
        maxDrawCount: 3124585458,
        occlusionQuerySet: eMmetjwJz
    });
    const VMTSCaFOxDhKWx = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: JKKgVUZwKgPEbcohZph,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rg8unorm",
                writeMask: GPUColorWrite.BLUE | GPUColorWrite.GREEN
            }]
        },
        label: "qaUfqeycqe",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: tXFZYHxvCUYb
        }
    });
    iTFEtcIbg.setPipeline(VMTSCaFOxDhKWx);
    const VGnySOiLcBdRgOEkUgK = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const kDzRsqZ = GVCLSendh.features
    const TujALfkrSgeNzSyn = iTFEtcIbg.label
    const ZVGgQDoSaNwNBUBJdch = GVCLSendh.limits
    const MrqeCMbJANouetiWHcCC = navigator.gpu.wgslLanguageFeatures
    const yKfanIJBuTepOe = await navigator.gpu.getPreferredCanvasFormat();
    const UvjBzPyNqt = KmlgsXZ.beginComputePass({
        label: "QDBCSto"
    });
    const tQQiOKqRCnuUnFGV = GVCLSendh.createBuffer({
        label: "mZbLKYGEylOcHuYJO",
        mappedAtCreation: false,
        size: 32,
        usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.STORAGE | GPUBufferUsage.INDIRECT | GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST
    });
    hOngfUgkM.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const JctAtmdmgosQ = GVCLSendh.createBindGroup({
        label: "fkSrp.bindGroup",
        layout: fkSrp.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    UvjBzPyNqt.setBindGroup(0, JctAtmdmgosQ);
    const eDNmQBQkR = iTFEtcIbg.label
    const tIqEaPs = aHuSQZfGrDlv.isFallbackAdapter
    iTFEtcIbg.setPipeline(VMTSCaFOxDhKWx);
    const JpefASHLncXm = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: MzWyDON
        },
        label: "rPhtXoxFRb",
        layout: "auto"
    });
    const VFcbZSlLRCsbfQlDOHT = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: JKKgVUZwKgPEbcohZph,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "one-minus-src",
                        srcFactor: "src-alpha-saturated"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rgba8unorm-srgb",
                writeMask: GPUColorWrite.ALPHA
            }]
        },
        label: "FCrHHRIlvXufUGncYbpP",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: EFqKywU
        }
    });
    const ZAqdXXPwGjzKJop = sYsEYdiVfmLmm.label
    const uvfAtDjBFYgjnWnsMqt = VGnySOiLcBdRgOEkUgK.info
    const wEyOHyIn = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rg32float",
        label: "wJhmqVfMdoiqMqGb",
        size: {
            width: 3044,
            height: 2905,
            depthOrArrayLayers: 9
        },
        mipLevelCount: 8,
        usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST,
        viewFormats: ["rg32float"]
    });
    const oHywIWkqHJjDcXlqs = VGnySOiLcBdRgOEkUgK.isFallbackAdapter
    const dmVPYAFYED = UvjBzPyNqt.label
    const MRamQnACTQEGmvTJKC = VGnySOiLcBdRgOEkUgK.features
    UvjBzPyNqt.end();
    const VNnfQHxUhRPkQferjOo = eMmetjwJz.count
    const eBnVgDHhGYve = hOngfUgkM.label
    const XyRAwOJTtZbiEQEdBA = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: JKKgVUZwKgPEbcohZph,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "one-minus-dst",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "one",
                        srcFactor: "one-minus-src"
                    }
                },
                format: "rgb10a2unorm",
                writeMask: GPUColorWrite.BLUE
            }]
        },
        label: "wIYoztwKlMmhq",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: EFqKywU
        }
    });
    const LZIBUoIyEWaOnj = ZPQOPlrKQkGOJGh.getBindGroupLayout(0);
    const UadQYw = GVCLSendh.createShaderModule({
        label: "fragment",
        code: zWSOKtRcWQBqs
    });
    const uNpHzdkIFCpcVpf = GVCLSendh.label
    const CZpnr = GVCLSendh.createShaderModule({
        label: "vertex",
        code: VTgZkufCDTgwAxAfR
    });
    const odDuKPjuNznX = GVCLSendh.createCommandEncoder({
        label: "SOgISlsWvS"
    });
    const dhxDMwrxMerWdPFAPU = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rg8unorm",
        label: "OtZjvBUIAoWDclyDheHo",
        size: {
            width: 703,
            height: 2584,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rg8unorm"]
    });
    const xZSuIgioMzOSbdMOD = dhxDMwrxMerWdPFAPU.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg8unorm",
        label: "oJrsgMWcxDkZUry"
    });
    const rAKBivWlf = odDuKPjuNznX.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.4709482521979351,
                g: 0.050548166677094164,
                b: 0.8461417219832712,
                a: 0.16668914733956441
            },
            loadOp: "load",
            storeOp: "discard",
            view: xZSuIgioMzOSbdMOD
        }],
        label: "xCYVjfltz",
        maxDrawCount: 3839933118,
        occlusionQuerySet: OLLZBb
    });
    rAKBivWlf.setVertexBuffer(0, tQQiOKqRCnuUnFGV);
    iTFEtcIbg.end();
    const lreTpuyLqBFysktRWKe = KmlgsXZ.finish();
    const WEvIGRY = OLLZBb.label
    const SijKeUDpxFRHr = zaDTgIPvf.label
    JislWCf.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const UvojkGjQSeCin = GVCLSendh.createBindGroup({
        label: "fkSrp.bindGroup",
        layout: fkSrp.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    const FeIbEySluXcxuoQRofMf = eMmetjwJz.type
    const hDFgYIiOqB = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm",
        label: "vXkPrLJZR",
        size: {
            width: 481,
            height: 208,
            depthOrArrayLayers: 58
        },
        mipLevelCount: 7,
        usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["rgba8unorm"]
    });
    hOngfUgkM.submit([lreTpuyLqBFysktRWKe]);
    const GQHBSVme = GVCLSendh.queue
    const JQXPtWXAtnVCAc = VFcbZSlLRCsbfQlDOHT.getBindGroupLayout(0);
    const NVEhtZw = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r32uint",
        label: "ihBtQKmDydtGMND",
        size: {
            width: 655,
            height: 316,
            depthOrArrayLayers: 36
        },
        mipLevelCount: 4,
        usage: GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC,
        viewFormats: ["r32uint"]
    });
    const NXKwESwkj = GVCLSendh.createQuerySet({
        count: 2516,
        label: "mBxjjhFxBjWOrGmcJ",
        type: "occlusion"
    });
    const FnOjHDrQlzbszU = eMmetjwJz.count
    rAKBivWlf.end();
    const HlmIkdE = odDuKPjuNznX.finish();
    const DdyhQNh = oIKmbpA.getBindGroupLayout(0);
    const vftuTvHnlmTGqG = GVCLSendh.createCommandEncoder({
        label: "QwFJWEynxB"
    });
    const vlPBpqnlbTGkNAa = vftuTvHnlmTGqG.beginComputePass({
        label: "vAlFmTcgrHjr"
    });
    vlPBpqnlbTGkNAa.setPipeline(fkSrp);
    const edOELqkPQxDFRPPoV = oIKmbpA.label
    const JZiJVP = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "r8unorm",
        label: "IuRnrcPOJIvppTG",
        size: {
            width: 743,
            height: 2451,
            depthOrArrayLayers: 60
        },
        mipLevelCount: 4,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["r8unorm"]
    });
    const AedTjSQBXDG = JZiJVP.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "r8unorm",
        label: "vHIkTS"
    });
    const MnzDzDngXGhALFQcdNOn = vftuTvHnlmTGqG.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.32837065884219,
                g: 1.9890501480742362,
                b: 0.4446387051637348,
                a: 0.2763995556371215
            },
            loadOp: "load",
            storeOp: "discard",
            view: AedTjSQBXDG
        }],
        label: "CXJYaYbRod",
        maxDrawCount: 4242669789,
        occlusionQuerySet: eMmetjwJz
    });
    MnzDzDngXGhALFQcdNOn.end();
    const rBZQTWezvjkzLwUfJh = EZjqZjrnbOpuT.label
    vlPBpqnlbTGkNAa.end();
    const rzhzUYKTWdnQay = GVCLSendh.createQuerySet({
        count: 593,
        label: "KjlRACsBNtub",
        type: "occlusion"
    });
    const XTNEGCJmqBkKzpY = aHuSQZfGrDlv.isFallbackAdapter
    const IjrKBa = GVCLSendh.queue
    const xomPc = vftuTvHnlmTGqG.beginComputePass({
        label: "fqrbPliX"
    });
    const ALPiNAytj = hOngfUgkM.label
    const tjySmmYRHLUJix = VMTSCaFOxDhKWx.label
    const vOMmNSn = GVCLSendh.createBuffer({
        label: "JFLfBtkcgixFXnSoWkqv",
        mappedAtCreation: false,
        size: 113585184,
        usage: GPUBufferUsage.INDEX | GPUBufferUsage.VERTEX | GPUBufferUsage.INDIRECT | GPUBufferUsage.COPY_DST | GPUBufferUsage.QUERY_RESOLVE
    });
    const gUASMPtzsyntF = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: JKKgVUZwKgPEbcohZph,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "src",
                        srcFactor: "src"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "src",
                        srcFactor: "dst"
                    }
                },
                format: "rgb10a2unorm",
                writeMask: GPUColorWrite.ALL
            }]
        },
        label: "pYRJCWEqrWGiuo",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: tXFZYHxvCUYb
        }
    });
    const mGprmiCxddUe = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm-srgb",
        label: "hsPARRjnnCdeqyEwf",
        size: {
            width: 3600,
            height: 1644,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC,
        viewFormats: ["bgra8unorm-srgb"]
    });
    const CtYlcuQtIZsDlhnKlcb = mGprmiCxddUe.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm-srgb",
        label: "rOnUSgcsriNYqSspp"
    });
    const QvWeumpEfRV = vftuTvHnlmTGqG.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.28367696371921713,
                g: 1.0009858560120064,
                b: 0.4502500672325509,
                a: 1.804356401348223
            },
            loadOp: "clear",
            storeOp: "discard",
            view: CtYlcuQtIZsDlhnKlcb
        }],
        label: "UZtBKQCRZpQ",
        maxDrawCount: 298495186,
        occlusionQuerySet: OLLZBb
    });
    const iQyLOJA = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: UadQYw,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "one-minus-dst",
                        srcFactor: "constant"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "zero",
                        srcFactor: "one-minus-src"
                    }
                },
                format: "bgra8unorm-srgb",
                writeMask: GPUColorWrite.ALL
            }]
        },
        label: "xpRRtmrZnsML",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: CZpnr
        }
    });
    QvWeumpEfRV.setPipeline(iQyLOJA);
    QvWeumpEfRV.draw(9);
    const eSXBUehNQYwuRCbk = vftuTvHnlmTGqG.label
    const sJrpZCNRNAiJ = fkSrp.getBindGroupLayout(0);
    const cIgAdxKEjpyLyWU = await navigator.gpu.getPreferredCanvasFormat();
    const SEIyrWqFUSCk = hDFgYIiOqB.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 3,
        baseMipLevel: 0,
        format: "rgba8unorm",
        label: "JuilPoVqCtJC"
    });
    const ywatauEO = GVCLSendh.label
    const FgXAuhY = eMmetjwJz.type
    const dNnmwufPBfM = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: HLccYdDhMedtyaxK
        },
        label: "FFmxR",
        layout: "auto"
    });
    const gohvPGhHUQohuKo = await navigator.gpu.getPreferredCanvasFormat();
    const LltXMCKdFHFLjT = NXKwESwkj.type
    const SBSIkisrObnuKdQ = GVCLSendh.createQuerySet({
        count: 3003,
        label: "ggkMnTuWBrnwC",
        type: "occlusion"
    });
    const itsBGNdFSNhjZN = GVCLSendh.createTexture({
        dimension: "1d",
        sampleCount: 1,
        format: "bgra8unorm",
        label: "biQIbTMZqcbJKpqywKn",
        size: {
            width: 1131,
            height: 1,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["bgra8unorm-srgb"]
    });
    xomPc.end();
    QvWeumpEfRV.end();
    const fNgsEWUkQMYfHjpXdz = vftuTvHnlmTGqG.finish();
    const QyfdOVDkaGdxZdZgXVm = fkSrp.getBindGroupLayout(0);
    const jKvjolStzaOcDR = GVCLSendh.createCommandEncoder({
        label: "kLRsUvhDYN"
    });
    const zJuCQdKkkXu = jKvjolStzaOcDR.beginComputePass({
        label: "oZikkkYfMote"
    });
    zJuCQdKkkXu.setPipeline(dNnmwufPBfM);
    const WvdgJQgMYib = GVCLSendh.createCommandEncoder({
        label: "UBrdqXvfdzjuM"
    });
    const cqHCSIcLhfjpAqjifB = WvdgJQgMYib.beginComputePass({
        label: "IlCuCamMB"
    });
    const ausLmXyLWLHglkCH = VGnySOiLcBdRgOEkUgK.info
    cqHCSIcLhfjpAqjifB.setBindGroup(0, UvojkGjQSeCin);
    const tTPdaUkQsfnAAaqjpZn = navigator.gpu.wgslLanguageFeatures
    const dXiPwBaTjzwmEh = OLLZBb.count
    ZUYXxHNTqLlfbM.submit([fNgsEWUkQMYfHjpXdz]);
    const vuUECsooSdFYEG = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgba8unorm",
        label: "mprelBCskfQge",
        size: {
            width: 1347,
            height: 258,
            depthOrArrayLayers: 23
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.STORAGE_BINDING,
        viewFormats: ["rgba8unorm"]
    });
    const CvibxJiyRH = vuUECsooSdFYEG.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "rgba8unorm",
        label: "lpYqFhIaNDzWMsabitb"
    });
    const AaPIY = WvdgJQgMYib.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.19886232201194076,
                g: 0.7661873000626411,
                b: 0.2459951358164827,
                a: 1.8637892828311549
            },
            loadOp: "clear",
            storeOp: "discard",
            view: CvibxJiyRH
        }],
        label: "aPFglPQmPrl",
        maxDrawCount: 1769251274,
        occlusionQuerySet: eMmetjwJz
    });
    AaPIY.end();
    const wilRfFYCYcWo = RgWMROlIoR.getBindGroupLayout(0);
    const Lmnswl = cqHCSIcLhfjpAqjifB.label
    const gnNKRbNGmzAwAUPpbvc = GVCLSendh.createQuerySet({
        count: 676,
        label: "XkwwTqDpRSFskLVzl",
        type: "occlusion"
    });
    const mxFkgqs = VGnySOiLcBdRgOEkUgK.features
    const zvEZzKCJuJnNzwaROM = cqHCSIcLhfjpAqjifB.label
    IjrKBa.submit([HlmIkdE]);
    const MVuZXrgdICTGIMLFUgZY = aHuSQZfGrDlv.isFallbackAdapter
    const CRcSJRvJTMwrnmjo = gnNKRbNGmzAwAUPpbvc.label
    const PrrRhPZyPdBkhNw = SBSIkisrObnuKdQ.count
    const AhGrw = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "r16float",
        label: "yfasLZgLDzS",
        size: {
            width: 50,
            height: 1551,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["r16float"]
    });
    const pRVFLHQlu = AhGrw.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r16float",
        label: "KSEGZXzVCZBreMWhxjI"
    });
    const HwXWfmksp = WvdgJQgMYib.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.2476662005974666,
                g: 1.5532368480497214,
                b: 1.6812740313322179,
                a: 1.839557199505465
            },
            loadOp: "load",
            storeOp: "discard",
            view: pRVFLHQlu
        }],
        label: "fSpkD",
        maxDrawCount: 4263297861,
        occlusionQuerySet: SBSIkisrObnuKdQ
    });
    const BRMEsQhHKFxmRZrmqM = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: JKKgVUZwKgPEbcohZph,
            targets: [{
                blend: {
                    alpha: {
                        operation: "add",
                        dstFactor: "dst",
                        srcFactor: "src-alpha-saturated"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "one-minus-src-alpha",
                        srcFactor: "one-minus-src"
                    }
                },
                format: "r16float",
                writeMask: GPUColorWrite.RED
            }]
        },
        label: "VTXHAjofwWHPLuUm",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: tXFZYHxvCUYb
        }
    });
    HwXWfmksp.setPipeline(BRMEsQhHKFxmRZrmqM);
    HwXWfmksp.draw(8);
    const BpysNg = JpefASHLncXm.getBindGroupLayout(0);
    HwXWfmksp.draw(10);
    JislWCf.writeBuffer(vOMmNSn, 9841580, BZEXGEqe);
    const gtjcQIYddJhLyOmLl = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const eXEWyWjEayiODcdk = gtjcQIYddJhLyOmLl.limits
    const rKmPHXucbpgYVudgBes = AhGrw.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r16float",
        label: "WgLYbA"
    });
    const fdQLMnibxBhfjFhP = GVCLSendh.createTexture({
        dimension: "1d",
        sampleCount: 1,
        format: "r32float",
        label: "yrZVjzHRnJZg",
        size: {
            width: 2277,
            height: 1,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["r32float"]
    });
    const TfRzubYUQEtxQQdD = jKvjolStzaOcDR.label
    const wbNpBOyracPaz = GVCLSendh.createCommandEncoder({
        label: "wLVBBNAYVaiOmO"
    });
    const TZemDVAp = wbNpBOyracPaz.beginComputePass({
        label: "EsUXmXKztGcURXbNRLX"
    });
    const FwMuaLxYXjexSioKD = aHuSQZfGrDlv.isFallbackAdapter
    TZemDVAp.setPipeline(ptaKt);
    const eScusekXIep = GVCLSendh.createBuffer({
        label: "vkWxTlgbKOGPiVWSUzsW",
        mappedAtCreation: true,
        size: 7044376,
        usage: GPUBufferUsage.INDEX
    });
    const tgSCmnkyeyOBAM = GVCLSendh.createQuerySet({
        count: 2296,
        label: "SWIczmeYNAmWQDEsFYax",
        type: "occlusion"
    });
    const EfctWJn = GVCLSendh.createCommandEncoder({
        label: "eaEaxM"
    });
    const wRIRRnveXVjnHZbENuY = itsBGNdFSNhjZN.createView({
        aspect: "all",
        dimension: "1d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "fydHPTmzQJIktUVZR"
    });
    const nlMkqZwcSLLptEAArI = cqHCSIcLhfjpAqjifB.label
    const NGeQZvnWEgDbo = HwXWfmksp.label
    const zYFtaSAok = GVCLSendh.limits
    const YWTVcimfTzjR = EfctWJn.beginComputePass({
        label: "blUhOB"
    });
    const BZdxcKdZWq = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: eQCLcNqqydIAwPCzQ
        },
        label: "omqolGjEws",
        layout: "auto"
    });
    const gTdvflLHi = NXKwESwkj.type
    HwXWfmksp.setVertexBuffer(0, FHEAeJkRiaBNoeuAs);
    const SIDSqRJacngr = GVCLSendh.label
    YWTVcimfTzjR.end();
    const cSygoqXxPqLbTH = GVCLSendh.createQuerySet({
        count: 641,
        label: "MRTBXsXATnqOwhJjqO",
        type: "occlusion"
    });
    const wttLpJSDDHPvBfK = BZdxcKdZWq.getBindGroupLayout(0);
    const eRebbOvRWIubPVAlvycz = oIKmbpA.label
    const zyAChaTWyUeUxQZ = aHuSQZfGrDlv.features
    const HOGBuDPnYKJtr = await navigator.gpu.getPreferredCanvasFormat();
    const xKKplqvvYfZpfeKtOEdB = GQdWTj.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg16float",
        label: "HBOLtf"
    });
    const CezFsN = tgSCmnkyeyOBAM.count
    const zZVHWKlQNwISwJtMcq = GVCLSendh.createTexture({
        dimension: "1d",
        sampleCount: 1,
        format: "r8snorm",
        label: "SbxcwkHlvOe",
        size: {
            width: 1488,
            height: 1,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["r8snorm"]
    });
    const ombySrZTDEXZoXF = ZUYXxHNTqLlfbM.label
    const XPfnVs = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: lvNBU
        },
        label: "tyVAFfjAcy",
        layout: "auto"
    });
    const OgFxzCdWznjZ = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm-srgb",
        label: "eeFDCZUAHPraXvx",
        size: {
            width: 488,
            height: 132,
            depthOrArrayLayers: 10
        },
        mipLevelCount: 7,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba8unorm"]
    });
    const vsnuHu = OgFxzCdWznjZ.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 3,
        format: "rgba8unorm",
        label: "chbIXVejTWILnWUyY"
    });
    const vgVfvRpEK = jKvjolStzaOcDR.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.4625578488921918,
                g: 1.905806226697132,
                b: 0.22386646594625148,
                a: 0.5505064692795352
            },
            loadOp: "load",
            storeOp: "discard",
            view: vsnuHu,
            depthSlice: 0
        }],
        label: "PotzBzGHOrNgkM",
        maxDrawCount: 3700669434,
        occlusionQuerySet: eMmetjwJz
    });
    const GGNUkbVKRUZEkMx = vgVfvRpEK.label
    const GqfuBYdhtCw = tgSCmnkyeyOBAM.count
    const zbieMHXJnAEWWEpG = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: XqZPYCTcim
        },
        label: "zwWdoUHRkZnP",
        layout: "auto"
    });
    const CubCHaHssiwfRcfmwC = GVCLSendh.createCommandEncoder({
        label: "PKAvzGYlkkDOsTy"
    });
    const MoAEcQZfrCuPDGlPofXb = wEyOHyIn.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 9,
        baseArrayLayer: 0,
        mipLevelCount: 4,
        baseMipLevel: 4,
        format: "rg32float",
        label: "DJBMgIgdmkDpcYkhkeG"
    });
    const eWsgNUkPYHcS = ZUYXxHNTqLlfbM.label
    const meexilKIrjMOk = ZUYXxHNTqLlfbM.label
    HwXWfmksp.setPipeline(BRMEsQhHKFxmRZrmqM);
    const hEoXOuzTVpnkeZQbjf = zJuCQdKkkXu.label
    TZemDVAp.end();
    const SiTcxHj = wbNpBOyracPaz.finish();
    ZUYXxHNTqLlfbM.submit([SiTcxHj]);
    GQHBSVme.writeBuffer(heyKuxhZe, 142002096, hYkhbItvuK);
    const jxIXbeaxuWiLCHrKvwvL = gtjcQIYddJhLyOmLl.features
    cqHCSIcLhfjpAqjifB.setBindGroup(0, JctAtmdmgosQ);
    const qkBDZdBuMbi = GVCLSendh.createShaderModule({
        label: "fragment",
        code: tCdgKvajKnh
    });
    const UXUozyoMWPmQhkyIEL = await navigator.gpu.getPreferredCanvasFormat();
    const xMdEOJmnimSGP = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: qkBDZdBuMbi,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "zero",
                        srcFactor: "src-alpha"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "one-minus-src-alpha",
                        srcFactor: "one-minus-dst-alpha"
                    }
                },
                format: "rgb10a2unorm",
                writeMask: GPUColorWrite.ALL | GPUColorWrite.GREEN | GPUColorWrite.ALPHA
            }]
        },
        label: "HLMeTHWTWlQxbnnVJ",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: CZpnr
        }
    });
    const RxSFzAmTCnfpnQNj = ptaKt.getBindGroupLayout(0);
    const hiKxjahAqtknZSSMOnC = VGnySOiLcBdRgOEkUgK.limits
    const AoHckIynGmS = VFcbZSlLRCsbfQlDOHT.label
    const SEUIUXifvB = tgSCmnkyeyOBAM.label
    const QsKvlDugMMbnmCy = GVCLSendh.createCommandEncoder({
        label: "GjsQk"
    });
    const FgWJPJAIOdGs = GVCLSendh.features
    const RWhtVUzyUAHJ = GVCLSendh.createCommandEncoder({
        label: "BrfEoecfo"
    });
    const vaBfAmzHfGdIrw = await navigator.gpu.getPreferredCanvasFormat();
    const cimGzzsNaITNIBrBZiZN = OLLZBb.label
    const tvyPBxDO = zJuCQdKkkXu.label
    const vwabEIsumuoOkFV = await navigator.gpu.getPreferredCanvasFormat();
    vgVfvRpEK.end();
    zJuCQdKkkXu.end();
    const nREQoW = jKvjolStzaOcDR.finish();
    IjrKBa.submit([nREQoW]);
    const TVJkWOUqVoXcaziP = gtjcQIYddJhLyOmLl.isFallbackAdapter
    HwXWfmksp.setPipeline(BRMEsQhHKFxmRZrmqM);
    HwXWfmksp.setPipeline(BRMEsQhHKFxmRZrmqM);
    const VaDJqqRcG = await navigator.gpu.getPreferredCanvasFormat();
    const TkIWPCTMpnaBayPX = GVCLSendh.createQuerySet({
        count: 538,
        label: "QOejLPCfgXeP",
        type: "occlusion"
    });
    const JhHizzakJDCB = GVCLSendh.label
    HwXWfmksp.draw(9);
    const MxMKElkMlFNGz = aHuSQZfGrDlv.isFallbackAdapter
    const jYjXecETBzON = NXKwESwkj.type
    const VQHKcojGRc = GVCLSendh.limits
    ZUYXxHNTqLlfbM.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const lClJZDPQBCE = GVCLSendh.createBindGroup({
        label: "ptaKt.bindGroup",
        layout: ptaKt.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    const xyKxFHullWuzbgpyH = BRMEsQhHKFxmRZrmqM.getBindGroupLayout(0);
    const jlZPaCZ = GVCLSendh.createShaderModule({
        label: "fragment",
        code: qSLscisZGeZHVPk
    });
    const WyrvLdkSGTDid = VFcbZSlLRCsbfQlDOHT.getBindGroupLayout(0);
    const mgZRZ = await navigator.gpu.getPreferredCanvasFormat();
    const ahCxesub = HwXWfmksp.label
    const ckNjTPKLpsGeVaypqf = navigator.gpu.wgslLanguageFeatures
    const euGrvZW = GVCLSendh.label
    const dmmhe = gtjcQIYddJhLyOmLl.features
    const Xoucx = QsKvlDugMMbnmCy.finish();
    GQHBSVme.submit([Xoucx]);
    const WDuPOJCXm = await navigator.gpu.getPreferredCanvasFormat();
    const yqhzdzeMVYnGqi = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    ZUYXxHNTqLlfbM.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const ezoTVMvHyJjnujxANNk = GVCLSendh.createBindGroup({
        label: "ptaKt.bindGroup",
        layout: ptaKt.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    cqHCSIcLhfjpAqjifB.setBindGroup(0, UvojkGjQSeCin);
    JislWCf.writeBuffer(vOMmNSn, 12235484, ufKcDJyRFJwKOjvqpKS);
    HwXWfmksp.setVertexBuffer(0, heyKuxhZe);
    const WiKaXC = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: JKKgVUZwKgPEbcohZph,
            targets: [{
                blend: {
                    alpha: {
                        operation: "add",
                        dstFactor: "constant",
                        srcFactor: "dst"
                    },
                    color: {
                        operation: "subtract",
                        dstFactor: "one-minus-dst-alpha",
                        srcFactor: "one-minus-src-alpha"
                    }
                },
                format: "rgba16float",
                writeMask: GPUColorWrite.BLUE | GPUColorWrite.RED | GPUColorWrite.ALL | GPUColorWrite.GREEN
            }]
        },
        label: "tlLTL",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: CZpnr
        }
    });
    const FBzaE = RWhtVUzyUAHJ.beginComputePass({
        label: "oCwZnvT"
    });
    const PrkXZH = gUASMPtzsyntF.label
    IjrKBa.writeBuffer(vOMmNSn, 26245400, IzRaDEnHFZ);
    const MfGWKvorOugwjZmuuZGv = GVCLSendh.createCommandEncoder({
        label: "dkvTlpao"
    });
    const PYJroeklvLmXzgvaM = GVCLSendh.createShaderModule({
        label: "vertex",
        code: AxEUtllPkjXSABzz
    });
    HwXWfmksp.end();
    const mebfpMxvRdQImU = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "r16sint",
        label: "UJONzRgkkGwIYiVWLPyM",
        size: {
            width: 359,
            height: 3908,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC,
        viewFormats: ["r16sint"]
    });
    const KWOVBKmdguhOU = MoAEcQZfrCuPDGlPofXb.label
    cqHCSIcLhfjpAqjifB.setBindGroup(0, UvojkGjQSeCin);
    const YrEqVySqZdInZYaNRl = GVCLSendh.createBuffer({
        label: "KdAIWiHIlyRE",
        mappedAtCreation: true,
        size: 123158252,
        usage: GPUBufferUsage.STORAGE | GPUBufferUsage.INDEX | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST
    });
    const RYAUsuprsIwFL = navigator.gpu.wgslLanguageFeatures
    const OwEdMOYgqkoy = GVCLSendh.createShaderModule({
        label: "vertex",
        code: YszdkDaoVjcDoeppNGDr
    });
    ZUYXxHNTqLlfbM.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const xxwtiHVizEvRSBUdhvm = GVCLSendh.createBindGroup({
        label: "qNOuiHqxJfYOwsrLuU.bindGroup",
        layout: qNOuiHqxJfYOwsrLuU.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    cqHCSIcLhfjpAqjifB.setBindGroup(0, xxwtiHVizEvRSBUdhvm);
    const cZsqQlya = GVCLSendh.queue
    cqHCSIcLhfjpAqjifB.end();
    const pImNPxvroxLQhxPJZTah = TkIWPCTMpnaBayPX.label
    const AUqtvqsTqRWRVu = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm",
        label: "jeuiCnBJpnPRigHRrn",
        size: {
            width: 2954,
            height: 2790,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["bgra8unorm-srgb"]
    });
    const ggDdW = await navigator.gpu.getPreferredCanvasFormat();
    const muhhKV = navigator.gpu.wgslLanguageFeatures
    const ByQKJNJsJW = NXKwESwkj.label
    const fMJSivJCBtuCNO = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "kJfmkKKje",
        size: {
            width: 412,
            height: 511,
            depthOrArrayLayers: 53
        },
        mipLevelCount: 7,
        usage: GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["rg8unorm"]
    });
    const wspOUjTxXRMji = fMJSivJCBtuCNO.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 4,
        format: "rg8unorm",
        label: "bBxwKTShuc"
    });
    const CzFkmOsEQLDCRhHmASN = MfGWKvorOugwjZmuuZGv.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.8741567348344708,
                g: 1.6239940097909935,
                b: 0.5291045042421554,
                a: 1.925451318285073
            },
            loadOp: "load",
            storeOp: "store",
            view: wspOUjTxXRMji,
            depthSlice: 0
        }],
        label: "BCOhaxxA",
        maxDrawCount: 2656924035,
        occlusionQuerySet: tgSCmnkyeyOBAM
    });
    const TlAojBRKGauwIgkOblqb = CzFkmOsEQLDCRhHmASN.label
    const vsdgrFoTaCIbwdForUPJ = gtjcQIYddJhLyOmLl.limits
    FBzaE.setPipeline(oIKmbpA);
    const aaBhJAWDnwaJeHsbcvXt = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: XqZPYCTcim
        },
        label: "fJOLvKGkGnNuudXxsZhb",
        layout: "auto"
    });
    const RGoDbsr = FBzaE.label
    cZsqQlya.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const OvZCqFqQmFDh = GVCLSendh.createBindGroup({
        label: "JpefASHLncXm.bindGroup",
        layout: JpefASHLncXm.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    FBzaE.setPipeline(fkSrp);
    const fYduSUyxgIeBRiNry = await navigator.gpu.getPreferredCanvasFormat();
    const KVdjkvrYGXULkkY = await navigator.gpu.getPreferredCanvasFormat();
    const oYKcR = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba32sint",
        label: "VyaNimrPTPalMH",
        size: {
            width: 391,
            height: 745,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 4,
        usage: GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.COPY_SRC | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["rgba32sint"]
    });
    const rLVvAIefmcFqzVEBAIaA = wEyOHyIn.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "rg32float",
        label: "BcRyyMUYHSJRd"
    });
    const TAbrwNJRPaoW = CubCHaHssiwfRcfmwC.beginComputePass({
        label: "lhVMSf"
    });
    const GEBGxYRoKQXk = yqhzdzeMVYnGqi.features
    const qPgrhuDCXDFmptnOZIP = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "r16float",
        label: "mHyQaHcFvRrTFXr",
        size: {
            width: 2566,
            height: 2004,
            depthOrArrayLayers: 47
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["r16float"]
    });
    const ETUfBuOAVIjhdaqDKaz = qPgrhuDCXDFmptnOZIP.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 4,
        format: "r16float",
        label: "aWeITIF"
    });
    const YgKTunmLkqh = WvdgJQgMYib.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.9460662028719702,
                g: 1.5675562215956202,
                b: 0.6335169331835822,
                a: 0.10086057839908169
            },
            loadOp: "clear",
            storeOp: "store",
            view: ETUfBuOAVIjhdaqDKaz
        }],
        label: "NhRKWmhQmNvtInv",
        maxDrawCount: 2814965916,
        occlusionQuerySet: gnNKRbNGmzAwAUPpbvc
    });
    YgKTunmLkqh.end();
    const pbeimhAXc = WvdgJQgMYib.finish();
    ZUYXxHNTqLlfbM.submit([pbeimhAXc]);
    const wrcBS = itsBGNdFSNhjZN.createView({
        aspect: "all",
        dimension: "1d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "zINGPHjknuiOzNzoWybq"
    });
    FBzaE.end();
    const DbbEUsdjMRptZCaR = JpefASHLncXm.label
    const zplMQveSNv = NVEhtZw.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "r32uint",
        label: "KyIDjpbMusHXmPS"
    });
    const bHeYMsWu = gtjcQIYddJhLyOmLl.isFallbackAdapter
    const qAeaUtNSJiV = VGnySOiLcBdRgOEkUgK.limits
    TAbrwNJRPaoW.setPipeline(ptaKt);
    const eINnfUEO = GVCLSendh.queue
    CzFkmOsEQLDCRhHmASN.setPipeline(VMTSCaFOxDhKWx);
    CzFkmOsEQLDCRhHmASN.draw(5);
    const MwqeDqqaQUZ = ZUYXxHNTqLlfbM.label
    const dTCbMlLGrb = GVCLSendh.limits
    const rxYijE = navigator.gpu.wgslLanguageFeatures
    const LemSbnCf = gtjcQIYddJhLyOmLl.isFallbackAdapter
    const MSmhHcNQhVa = CzFkmOsEQLDCRhHmASN.label
    const sTQYAgRfll = CzFkmOsEQLDCRhHmASN.label
    const QKIabGzHBVQWBWqu = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: UadQYw,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "constant",
                        srcFactor: "one-minus-src-alpha"
                    }
                },
                format: "r16float",
                writeMask: GPUColorWrite.BLUE | GPUColorWrite.RED | GPUColorWrite.ALL
            }]
        },
        label: "MmNiLPXIEeyEYDSzUEA",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "back",
            frontFace: "ccw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: PYJroeklvLmXzgvaM
        }
    });
    const nLVJkPuoNhFhWjBKuaM = GVCLSendh.queue
    const xOlsyrCDwRTBAirxMXK = GVCLSendh.createCommandEncoder({
        label: "PJlaKaLgGLNY"
    });
    CzFkmOsEQLDCRhHmASN.end();
    const uHlhyvwRhc = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rgba16float",
        label: "GrddxCxSunHHmLgYXljw",
        size: {
            width: 3672,
            height: 1221,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rgba16float"]
    });
    const iGXtmhHhlfDCOdSIEF = uHlhyvwRhc.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba16float",
        label: "rUozVBrmjBmUrXdm"
    });
    const wLkrDhuFAKDCME = EfctWJn.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.7173183361679745,
                g: 1.071522757394328,
                b: 1.151152002182533,
                a: 0.38432502092097565
            },
            loadOp: "clear",
            storeOp: "discard",
            view: iGXtmhHhlfDCOdSIEF
        }],
        label: "HFYnaBUY",
        maxDrawCount: 1140404894,
        occlusionQuerySet: tgSCmnkyeyOBAM
    });
    wLkrDhuFAKDCME.setPipeline(WiKaXC);
    wLkrDhuFAKDCME.draw(4);
    const DWIuQlxw = navigator.gpu.wgslLanguageFeatures
    const zettLjY = ZUYXxHNTqLlfbM.label
    const skLWeHMLWsR = tgSCmnkyeyOBAM.count
    const OnHLFrwSHSVJ = EZjqZjrnbOpuT.label
    const NaIVPgqjvgEEQlAA = ETUfBuOAVIjhdaqDKaz.label
    const pbQCQMMSUPqjoeeMf = GVCLSendh.queue
    wLkrDhuFAKDCME.end();
    const Wajjk = VGnySOiLcBdRgOEkUgK.limits
    hOngfUgkM.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const tPwLoemIDxnJCjyptl = GVCLSendh.createBindGroup({
        label: "aaBhJAWDnwaJeHsbcvXt.bindGroup",
        layout: aaBhJAWDnwaJeHsbcvXt.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    const HKIqkitAzdjkAou = GVCLSendh.createCommandEncoder({
        label: "RzRPQ"
    });
    const dIynqz = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm-srgb",
        label: "dcsYNAsgPySopMc",
        size: {
            width: 120,
            height: 978,
            depthOrArrayLayers: 17
        },
        mipLevelCount: 10,
        usage: GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const OwlHttzoM = dIynqz.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "rgba8unorm-srgb",
        label: "kPecdxT"
    });
    const uZOIHHLhgWGKz = xOlsyrCDwRTBAirxMXK.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.7757897261987101,
                g: 1.5358730391150783,
                b: 0.7787142267923126,
                a: 1.7311643524125309
            },
            loadOp: "load",
            storeOp: "store",
            view: OwlHttzoM,
            depthSlice: 1
        }],
        label: "hJoGfgEtMkbVTI",
        maxDrawCount: 2918497674,
        occlusionQuerySet: OLLZBb
    });
    uZOIHHLhgWGKz.setPipeline(VFcbZSlLRCsbfQlDOHT);
    uZOIHHLhgWGKz.draw(2);
    TAbrwNJRPaoW.setBindGroup(0, xxwtiHVizEvRSBUdhvm);
    const OBknCcuAOCGNFb = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rg16float",
        label: "qpNZPFcCvCkrnNpFJtI",
        size: {
            width: 3201,
            height: 2529,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["rg16float"]
    });
    const zzJzqDNGAYeXanCiLnC = OBknCcuAOCGNFb.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg16float",
        label: "yUegjqZMqA"
    });
    const uzuwTbizwEqnUkO = MfGWKvorOugwjZmuuZGv.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.3300731343954255,
                g: 1.492378112553029,
                b: 0.11895235066124199,
                a: 0.8445474129054882
            },
            loadOp: "load",
            storeOp: "discard",
            view: zzJzqDNGAYeXanCiLnC
        }],
        label: "DnMpwMD",
        maxDrawCount: 1728361604,
        occlusionQuerySet: OLLZBb
    });
    const fCOxTRO = JpefASHLncXm.getBindGroupLayout(0);
    const mUENL = IjrKBa.label
    JislWCf.writeBuffer(vOMmNSn, 96956952, ocVhplcrXqgqR);
    const UcQZLleu = GVCLSendh.queue
    const OyfmeZpAmqWV = rzhzUYKTWdnQay.type
    const KvGFymEhxqfRH = navigator.gpu.wgslLanguageFeatures
    TAbrwNJRPaoW.setPipeline(zbieMHXJnAEWWEpG);
    const lpUZEkmdz = SBSIkisrObnuKdQ.count
    const QpQWZ = rzhzUYKTWdnQay.type
    uZOIHHLhgWGKz.setPipeline(VFcbZSlLRCsbfQlDOHT);
    const BUCTTNVpfrQesixqL = TkIWPCTMpnaBayPX.type
    ZUYXxHNTqLlfbM.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const zCbMikhksdTzxWVtrSJ = GVCLSendh.createBindGroup({
        label: "aaBhJAWDnwaJeHsbcvXt.bindGroup",
        layout: aaBhJAWDnwaJeHsbcvXt.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    cZsqQlya.writeBuffer(tQQiOKqRCnuUnFGV, 28, dwmNlDWqXEgiqCBXp);
    const AYxzCljjYgbzDR = GVCLSendh.queue
    const dzJODchIMaArxxwPcQP = OBknCcuAOCGNFb.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg16float",
        label: "lubAqPzLiHDQQnCyl"
    });
    const gmiFSGCcPCvfoqC = zzJzqDNGAYeXanCiLnC.label
    const xvunYWlkAZRjhsgAe = EfctWJn.label
    const JxSQozkKDTi = TAbrwNJRPaoW.label
    const eFLSozdKkvtAeylWXPz = GVCLSendh.createQuerySet({
        count: 2279,
        label: "YjuROEQqFnZTEdZLU",
        type: "occlusion"
    });
    const rKCqQBwCKjrMp = SBSIkisrObnuKdQ.type
    const WDvaVSxyr = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const jJnnqMqfFjlIib = GVCLSendh.label
    const FZIRmvClyGaTT = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba32float",
        label: "pOPPqgypWITXD",
        size: {
            width: 226,
            height: 639,
            depthOrArrayLayers: 9
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgba32float"]
    });
    const NVPkulNIDKU = GVCLSendh.createQuerySet({
        count: 2465,
        label: "ztnsPdsFHAtfGby",
        type: "occlusion"
    });
    const GlAiddxijlQJJeGJB = BZdxcKdZWq.label
    const vPJBNJMFravOtOwsaIX = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm-srgb",
        label: "KEKHmUYjRdBXbayVMlm",
        size: {
            width: 3637,
            height: 160,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["bgra8unorm-srgb"]
    });
    const SjMPpLiN = vPJBNJMFravOtOwsaIX.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm-srgb",
        label: "LLOhVFxiePqhZOGMprU"
    });
    const TvFdeqd = CubCHaHssiwfRcfmwC.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.16153057721312036,
                g: 0.3559917133095285,
                b: 1.7542695179106769,
                a: 0.4819459716781387
            },
            loadOp: "load",
            storeOp: "store",
            view: SjMPpLiN
        }],
        label: "oMflSYSOfrkQeWwXGnMq",
        maxDrawCount: 1519170996,
        occlusionQuerySet: gnNKRbNGmzAwAUPpbvc
    });
    const VscAjjRtANDiBrJj = WDvaVSxyr.isFallbackAdapter
    const QElAdobIzmS = navigator.gpu.wgslLanguageFeatures
    uZOIHHLhgWGKz.end();
    const iBMbGlDcpqQSI = xOlsyrCDwRTBAirxMXK.finish();
    const MVkYktHAQnsZhpDsOQwV = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "bgra8unorm-srgb",
        label: "VCVKVOgJJDTWADNgR",
        size: {
            width: 19,
            height: 826,
            depthOrArrayLayers: 42
        },
        mipLevelCount: 6,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["bgra8unorm"]
    });
    const OecbgBNeo = MVkYktHAQnsZhpDsOQwV.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 5,
        format: "bgra8unorm",
        label: "ueqHEJeWWGb"
    });
    const dvQNZVkUVJPrOdoEcL = EfctWJn.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.6866696066126396,
                g: 0.5538254132314722,
                b: 1.6255732534855465,
                a: 0.6416422623299349
            },
            loadOp: "clear",
            storeOp: "store",
            view: OecbgBNeo,
            depthSlice: 0
        }],
        label: "bfWcusIjBfLQqh",
        maxDrawCount: 3367084629,
        occlusionQuerySet: cSygoqXxPqLbTH
    });
    const zYFgFklKPhoBSWB = cSygoqXxPqLbTH.count
    TAbrwNJRPaoW.end();
    const kPubg = HKIqkitAzdjkAou.beginComputePass({
        label: "RbTQQUQNHnGrpXoi"
    });
    kPubg.setBindGroup(0, xxwtiHVizEvRSBUdhvm);
    const mxsPXOYNzYo = RgWMROlIoR.getBindGroupLayout(0);
    const XKWESRrSQMfd = gnNKRbNGmzAwAUPpbvc.type
    const xtAYlWySFP = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r8unorm",
        label: "PTwCbsiuyhgdNn",
        size: {
            width: 206,
            height: 549,
            depthOrArrayLayers: 20
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["r8unorm"]
    });
    const PMLTu = xtAYlWySFP.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r8unorm",
        label: "QCIebjepgTafHAAOxyGN"
    });
    const elyiiiAvgeeZ = HKIqkitAzdjkAou.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.6695871516812348,
                g: 0.9984011815087352,
                b: 0.4434704678379513,
                a: 1.7246769757756522
            },
            loadOp: "clear",
            storeOp: "store",
            view: PMLTu,
            depthSlice: 17
        }],
        label: "rmrVqcxQwCppVTfaXg",
        maxDrawCount: 1494175092,
        occlusionQuerySet: rzhzUYKTWdnQay
    });
    const PKeKKFStDuaSLVUyK = GVCLSendh.createQuerySet({
        count: 3772,
        label: "DUBOglju",
        type: "occlusion"
    });
    const bIHmlabVRK = navigator.gpu.wgslLanguageFeatures
    hOngfUgkM.writeBuffer(vOMmNSn, 98121652, OGJckqbe);
    elyiiiAvgeeZ.end();
    const aXwzKzCEPitSRrmizKqF = GVCLSendh.createQuerySet({
        count: 1192,
        label: "ZSIorQusVd",
        type: "occlusion"
    });
    TvFdeqd.end();
    const PDHDxMw = CubCHaHssiwfRcfmwC.finish();
    uzuwTbizwEqnUkO.setPipeline(EZjqZjrnbOpuT);
    uzuwTbizwEqnUkO.draw(4);
    const jkUKjpournhxxxT = iQyLOJA.getBindGroupLayout(0);
    const oFsHgtRznyAFhou = RWhtVUzyUAHJ.beginComputePass({
        label: "IDepg"
    });
    eINnfUEO.submit([PDHDxMw]);
    const JnIpUVoCpH = GQHBSVme.label
    const FuZpVuPy = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rgba16sint",
        label: "akAqPqLfykLVvBZFP",
        size: {
            width: 1098,
            height: 2028,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgba16sint"]
    });
    const hjaEQ = GVCLSendh.features
    const iUwbCliSrouMD = await navigator.gpu.getPreferredCanvasFormat();
    const BJyZyHSJDsty = oFsHgtRznyAFhou.label
    pbQCQMMSUPqjoeeMf.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const skWCuAxTObtaaMKqgD = GVCLSendh.createBindGroup({
        label: "fkSrp.bindGroup",
        layout: fkSrp.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    oFsHgtRznyAFhou.setPipeline(ptaKt);
    UcQZLleu.submit([iBMbGlDcpqQSI]);
    const MnEwFbYFV = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rgba8uint",
        label: "juwQQgPGgUzEGjeBBZ",
        size: {
            width: 2710,
            height: 2030,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["rgba8uint"]
    });
    const xIpLqJ = VGnySOiLcBdRgOEkUgK.limits
    const LkVJpu = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const MMdwDcPSDIwZYGI = rzhzUYKTWdnQay.count
    const eEwIQVWGY = VGnySOiLcBdRgOEkUgK.features
    const bMXdaCEpiqJpWI = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "bgra8unorm",
        label: "ZdRkACAzVmBRIYDgPr",
        size: {
            width: 645,
            height: 892,
            depthOrArrayLayers: 52
        },
        mipLevelCount: 3,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["bgra8unorm"]
    });
    const KpQHSc = GVCLSendh.queue
    dvQNZVkUVJPrOdoEcL.end();
    const hqUApfILkFoLVlvyU = EfctWJn.finish();
    pbQCQMMSUPqjoeeMf.submit([hqUApfILkFoLVlvyU]);
    const viVsASUWNMqjKBDCSuZq = GVCLSendh.limits
    KpQHSc.writeBuffer(heyKuxhZe, 78917584, YRsvlFlSWDqNC);
    const JYYtFIlepIt = WDvaVSxyr.features
    const HmHrXEqklN = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: HLccYdDhMedtyaxK
        },
        label: "HSoGgRn",
        layout: "auto"
    });
    const BrZrgHurKCGaeW = dNnmwufPBfM.label
    uzuwTbizwEqnUkO.setVertexBuffer(0, tQQiOKqRCnuUnFGV);
    const FgOMloVgc = oIKmbpA.label
    const oHtVsQPVLjffJswqb = PwNQAHGzwrKDBHrhq.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 4,
        baseMipLevel: 1,
        format: "rg8unorm",
        label: "eFNIVkk"
    });
    const NpZoFloqyH = EZjqZjrnbOpuT.label
    const hIbGpjtMVZzf = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8sint",
        label: "jEkRMfVlelcpEynDS",
        size: {
            width: 1011,
            height: 561,
            depthOrArrayLayers: 26
        },
        mipLevelCount: 8,
        usage: GPUTextureUsage.STORAGE_BINDING,
        viewFormats: ["rgba8sint"]
    });
    const KnpkKxxMHREkqFstP = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "bgra8unorm-srgb",
        label: "fJzsjATiWH",
        size: {
            width: 1490,
            height: 2018,
            depthOrArrayLayers: 23
        },
        mipLevelCount: 11,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["bgra8unorm"]
    });
    const BegoGrvO = KnpkKxxMHREkqFstP.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm-srgb",
        label: "rMnxRpjmErzLcKGWqL"
    });
    const UupbPGBFC = HKIqkitAzdjkAou.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.41241453272071915,
                g: 0.17069597516282498,
                b: 0.43877706979037856,
                a: 0.8029187302618268
            },
            loadOp: "load",
            storeOp: "discard",
            view: BegoGrvO
        }],
        label: "gSMBhTxXNLipLCCN",
        maxDrawCount: 4069838133,
        occlusionQuerySet: eFLSozdKkvtAeylWXPz
    });
    const RwqQFLNQlpz = GVCLSendh.queue
    const eUGfQp = gUASMPtzsyntF.label
    const sliPZIIY = NXKwESwkj.type
    UcQZLleu.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const nazbgHZJMNd = GVCLSendh.createBindGroup({
        label: "oIKmbpA.bindGroup",
        layout: oIKmbpA.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    UupbPGBFC.end();
    kPubg.end();
    const SfvHVeXmNKRwAXQf = HKIqkitAzdjkAou.finish();
    ZUYXxHNTqLlfbM.submit([SfvHVeXmNKRwAXQf]);
    const TiPhlIU = MfGWKvorOugwjZmuuZGv.beginComputePass({
        label: "TflJnivsxuiSyynhsD"
    });
    oFsHgtRznyAFhou.end();
    const TANIDmGELEbGJXlMURKA = RWhtVUzyUAHJ.finish();
    cZsqQlya.submit([TANIDmGELEbGJXlMURKA]);
    nLVJkPuoNhFhWjBKuaM.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const ZxHkIY = GVCLSendh.createBindGroup({
        label: "qNOuiHqxJfYOwsrLuU.bindGroup",
        layout: qNOuiHqxJfYOwsrLuU.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    const mGBenHwWTmAU = TiPhlIU.label
    TiPhlIU.setPipeline(JpefASHLncXm);
    const vicqjgJrHN = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: HLccYdDhMedtyaxK
        },
        label: "xdsugr",
        layout: "auto"
    });
    const uAvhWTDVnV = GVCLSendh.createBuffer({
        label: "obWjjR",
        mappedAtCreation: false,
        size: 143691308,
        usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.INDEX | GPUBufferUsage.INDIRECT
    });
    const NhwkDelZFrszTJZvYZyG = WDvaVSxyr.info
    const yXYRbbbBpvVNRs = VMTSCaFOxDhKWx.label
    const MTEduSSgGnHKeDg = eMmetjwJz.label
    const hbVBGzuHqNWzFx = navigator.gpu.wgslLanguageFeatures
    const EQdgoIRttgJEF = iQyLOJA.getBindGroupLayout(0);
    const JwXOQxd = MfGWKvorOugwjZmuuZGv.label
    const avmPmdUf = JislWCf.label
    const OdgdzpLwLhrnzdEG = GVCLSendh.queue
    const zpnrSKLXxDbQHGYbzlY = GVCLSendh.createQuerySet({
        count: 1279,
        label: "rCqLGTfZZlDycZYkv",
        type: "occlusion"
    });
    const QRwBevLxeLDEwdX = ptaKt.label
    const sOkfdGCiecsHmTrJFE = OLLZBb.type
    GQHBSVme.writeBuffer(vOMmNSn, 112228540, wyUjAC);
    const FpYCslEp = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    uzuwTbizwEqnUkO.end();
    const plsdRcgAM = GVCLSendh.createQuerySet({
        count: 3757,
        label: "bALLUfMURdGyrgFW",
        type: "occlusion"
    });
    const IaptrSbJtkk = JislWCf.label
    IjrKBa.writeBuffer(heyKuxhZe, 83555624, qLcQGbUSBYpyr);
    const XcvzxOsXK = WDvaVSxyr.limits
    const tnyjzSzDylCao = zaDTgIPvf.label
    const UIUgFyZ = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm-srgb",
        label: "apqAyfoNqLlgh",
        size: {
            width: 2776,
            height: 3728,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["bgra8unorm"]
    });
    const BTCYMDCAEF = UIUgFyZ.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm-srgb",
        label: "egHTPXYvgf"
    });
    const KEZjIdnGkIiFkAMIltg = MfGWKvorOugwjZmuuZGv.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.1733232823851263,
                g: 0.8100861948917419,
                b: 0.9278259278492922,
                a: 1.365898110799065
            },
            loadOp: "load",
            storeOp: "discard",
            view: BTCYMDCAEF
        }],
        label: "fbaFF",
        maxDrawCount: 2315896808,
        occlusionQuerySet: TkIWPCTMpnaBayPX
    });
    KEZjIdnGkIiFkAMIltg.setPipeline(iQyLOJA);
    TiPhlIU.end();
    AYxzCljjYgbzDR.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const xseedYBVnnsQPv = GVCLSendh.createBindGroup({
        label: "aaBhJAWDnwaJeHsbcvXt.bindGroup",
        layout: aaBhJAWDnwaJeHsbcvXt.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    const KARjQfqjbdMayu = GVCLSendh.createCommandEncoder({
        label: "eozmvLgiDPqDzYK"
    });
    const UMTWGONctfkZhNgnSDMs = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgba16float",
        label: "YYkujneYXuQFu",
        size: {
            width: 1155,
            height: 2112,
            depthOrArrayLayers: 9
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba16float"]
    });
    const tJHUYEaIOzSobP = UMTWGONctfkZhNgnSDMs.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba16float",
        label: "vBMXjslD"
    });
    const IVXtosGOzziiuPqrr = KARjQfqjbdMayu.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.3111769761430556,
                g: 1.6560026517107915,
                b: 1.610567354282699,
                a: 0.5434486036653783
            },
            loadOp: "clear",
            storeOp: "store",
            view: tJHUYEaIOzSobP
        }],
        label: "dYjOxWfstRl",
        maxDrawCount: 2224914023,
        occlusionQuerySet: eFLSozdKkvtAeylWXPz
    });
    const sApFowhA = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: XqZPYCTcim
        },
        label: "tlbfJFATUnzNwfRTy",
        layout: "auto"
    });
    const xCAhjcyzQHW = GVCLSendh.createTexture({
        dimension: "1d",
        sampleCount: 1,
        format: "r8uint",
        label: "KrNgCEtFPldSiFSC",
        size: {
            width: 3109,
            height: 1,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.COPY_DST,
        viewFormats: ["r8uint"]
    });
    const Pqrodsqc = FpYCslEp.info
    cZsqQlya.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const XWqllQuOHYX = GVCLSendh.createBindGroup({
        label: "sYsEYdiVfmLmm.bindGroup",
        layout: sYsEYdiVfmLmm.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    const dfdrWGVEJMzyFSWT = GVCLSendh.label
    cZsqQlya.writeBuffer(tQQiOKqRCnuUnFGV, 16, DUfxwvj);
    const IroRFuvSdu = zZVHWKlQNwISwJtMcq.createView({
        aspect: "all",
        dimension: "1d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r8snorm",
        label: "RHpfAvtS"
    });
    const PSPuWenUG = VGnySOiLcBdRgOEkUgK.info
    const SQABxDTMVJmwJ = GVCLSendh.limits
    const qjhFAVorhQVWQmIlr = zaDTgIPvf.label
    const QiGZdXGrGqo = cZsqQlya.label
    const pEQCFHtJA = VFcbZSlLRCsbfQlDOHT.label
    const pyYkZBpjsTlqOHoPr = KARjQfqjbdMayu.beginComputePass({
        label: "TlKWsbbgYjz"
    });
    pyYkZBpjsTlqOHoPr.end();
    const BNGXIa = MfGWKvorOugwjZmuuZGv.beginComputePass({
        label: "IEDoysGse"
    });
    const udxnOuoitLbobDuqb = tgSCmnkyeyOBAM.type
    const pVNDRoOCLaY = GVCLSendh.createBuffer({
        label: "FYeTUoGGIKM",
        mappedAtCreation: true,
        size: 175835476,
        usage: GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST
    });
    const EqLXOsfQjZv = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: UadQYw,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "one",
                        srcFactor: "src-alpha"
                    }
                },
                format: "rgba8unorm-srgb",
                writeMask: GPUColorWrite.RED
            }]
        },
        label: "kskmeEy",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "cw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: PYJroeklvLmXzgvaM
        }
    });
    const iSDVvJsFhhghHwfBd = GVCLSendh.queue
    const NTcNruMJPBe = AYxzCljjYgbzDR.label
    const KlybkVBBQDutKIevoJGN = GVCLSendh.createBuffer({
        label: "tEzVUBSwOVWzdgkwnY",
        mappedAtCreation: false,
        size: 27288624,
        usage: GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_SRC
    });
    const PmMeNPI = XPfnVs.getBindGroupLayout(0);
    IVXtosGOzziiuPqrr.end();
    const ibMrYzLYsqgJcqRwJGs = KARjQfqjbdMayu.finish();
    pbQCQMMSUPqjoeeMf.submit([ibMrYzLYsqgJcqRwJGs]);
    const BkpRJLUsHHNg = GVCLSendh.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: HLccYdDhMedtyaxK
        },
        label: "jaHErUdaafoJUlyrEFA",
        layout: "auto"
    });
    KEZjIdnGkIiFkAMIltg.end();
    UcQZLleu.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const tndtrDRpiWBkJys = GVCLSendh.createBindGroup({
        label: "sApFowhA.bindGroup",
        layout: sApFowhA.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    const xyvDywUXoyel = GVCLSendh.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "WEsCPuTFwf",
        size: {
            width: 1349,
            height: 2593,
            depthOrArrayLayers: 44
        },
        mipLevelCount: 7,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rg8unorm"]
    });
    const MemkWTneBKdgRs = xyvDywUXoyel.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 4,
        format: "rg8unorm",
        label: "OhgQRMeLzArXysw"
    });
    const ZpgffXPcPorlANGNoWM = MfGWKvorOugwjZmuuZGv.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.2344936803638955,
                g: 1.4766372152364466,
                b: 0.0982089492609366,
                a: 1.3162834420872636
            },
            loadOp: "load",
            storeOp: "store",
            view: MemkWTneBKdgRs
        }],
        label: "KEsUuUFCZrIRgHMhKO",
        maxDrawCount: 3201481969,
        occlusionQuerySet: OLLZBb
    });
    ZpgffXPcPorlANGNoWM.setPipeline(VMTSCaFOxDhKWx);
    ZpgffXPcPorlANGNoWM.draw(6);
    const EaXdr = aHuSQZfGrDlv.info
    const iTnvOSCGrLCkLQRwhPWk = aaBhJAWDnwaJeHsbcvXt.label
    const dusNQiSVryJnhYKJK = wRIRRnveXVjnHZbENuY.label
    const bmmaLRmWCBYQVMqPpaJF = aHuSQZfGrDlv.limits
    const LjPOiijrKEdy = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: qkBDZdBuMbi,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "one-minus-constant",
                        srcFactor: "one-minus-src"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "one-minus-dst",
                        srcFactor: "one-minus-constant"
                    }
                },
                format: "rgba16float",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.RED
            }]
        },
        label: "dbIOkdhfMzZAVJFR",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "back",
            frontFace: "cw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: tXFZYHxvCUYb
        }
    });
    BNGXIa.end();
    ZpgffXPcPorlANGNoWM.end();
    const TmkSifwpg = MfGWKvorOugwjZmuuZGv.finish();
    RwqQFLNQlpz.submit([TmkSifwpg]);
    const kPayPWlHB = GVCLSendh.createCommandEncoder({
        label: "wxabYIWTSe"
    });
    const EAcdPpEwteBNKQ = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgb10a2unorm",
        label: "cVADpFhKWVYAeAbQk",
        size: {
            width: 663,
            height: 562,
            depthOrArrayLayers: 59
        },
        mipLevelCount: 8,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgb10a2unorm"]
    });
    const wXHhLC = EAcdPpEwteBNKQ.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "rgb10a2unorm",
        label: "JCfwwcoEjUA"
    });
    const iEUCYTyB = kPayPWlHB.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.6435649938278032,
                g: 1.5699297311059808,
                b: 1.760207432178989,
                a: 0.9662826269074589
            },
            loadOp: "clear",
            storeOp: "discard",
            view: wXHhLC,
            depthSlice: 11
        }],
        label: "tRUTGJYanWRXClulPE",
        maxDrawCount: 3437634485,
        occlusionQuerySet: tgSCmnkyeyOBAM
    });
    iEUCYTyB.setPipeline(gUASMPtzsyntF);
    iEUCYTyB.draw(9);
    iEUCYTyB.end();
    const qwyaKJKpRsO = kPayPWlHB.finish();
    const ygkbcaooTNTSuVYgExc = await navigator.gpu.getPreferredCanvasFormat();
    const yONyiKVZiAAYMNemA = navigator.gpu.wgslLanguageFeatures
    const lLcJeNFpBItIz = SBSIkisrObnuKdQ.count
    const ipQcTJbKgDB = navigator.gpu.wgslLanguageFeatures
    const UalJVGmsxvLW = GVCLSendh.createCommandEncoder({
        label: "REQsPkRVekGtWgkKBCC"
    });
    const OkDLlctjFjSGtTB = UalJVGmsxvLW.beginComputePass({
        label: "vLqepvKiQRGt"
    });
    const CPOaUDFyiYPn = OkDLlctjFjSGtTB.label
    const jUjFWghDztnc = GVCLSendh.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: qkBDZdBuMbi,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rgb10a2unorm",
                writeMask: GPUColorWrite.ALPHA
            }]
        },
        label: "wRaXjSqzEnCcakp",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "back",
            frontFace: "ccw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: tXFZYHxvCUYb
        }
    });
    const lLnSCZQxpEzhi = FpYCslEp.info
    const vLrcTFP = VGnySOiLcBdRgOEkUgK.isFallbackAdapter
    const ZlLuIDWd = VMTSCaFOxDhKWx.label
    const VMZSAJDBa = QKIabGzHBVQWBWqu.label
    OkDLlctjFjSGtTB.setPipeline(sYsEYdiVfmLmm);
    const ByrqR = GVCLSendh.label
    OkDLlctjFjSGtTB.end();
    const pTPwUEP = aHuSQZfGrDlv.limits
    const Fjdgh = UalJVGmsxvLW.beginComputePass({
        label: "vDAON"
    });
    const MXAMCz = Fjdgh.label
    Fjdgh.setPipeline(JpefASHLncXm);
    const wDjzsEVuADjlKjyxCs = HmHrXEqklN.label
    Fjdgh.end();
    const KPokX = UalJVGmsxvLW.finish();
    const eYyunNFeS = GVCLSendh.createCommandEncoder({
        label: "ASfzAKyK"
    });
    const BMFlwlVQiHHkGqHuBJnK = eYyunNFeS.beginComputePass({
        label: "dtlmQvqVNkTfMkQMV"
    });
    BMFlwlVQiHHkGqHuBJnK.end();
    const QPeJDVDvGmtJTCT = TkIWPCTMpnaBayPX.count
    const wlnMnqWBez = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm-srgb",
        label: "ELuaHdiS",
        size: {
            width: 419,
            height: 986,
            depthOrArrayLayers: 23
        },
        mipLevelCount: 6,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const xiJuvybkTRlGdFORCA = wlnMnqWBez.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 1,
        format: "rgba8unorm-srgb",
        label: "hFgFsWRelp"
    });
    const WYGBkPAxOoOEkzoKeUlP = eYyunNFeS.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.9451489632453252,
                g: 1.7021785975156072,
                b: 1.223752520426683,
                a: 1.0059488190540968
            },
            loadOp: "load",
            storeOp: "store",
            view: xiJuvybkTRlGdFORCA,
            depthSlice: 6
        }],
        label: "BpvSzarbqDzNmB",
        maxDrawCount: 1258512375,
        occlusionQuerySet: NVPkulNIDKU
    });
    WYGBkPAxOoOEkzoKeUlP.setPipeline(EqLXOsfQjZv);
    WYGBkPAxOoOEkzoKeUlP.draw(4);
    const mRpcHIA = GVCLSendh.createBuffer({
        label: "kwgMtuegQBPzOoi",
        mappedAtCreation: false,
        size: 52564296,
        usage: GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST
    });
    const DzaxrR = gnNKRbNGmzAwAUPpbvc.type
    const usAWcJPllXiGknH = GVCLSendh.limits
    const mHQiI = GVCLSendh.limits
    const hqYrfaCmwyDINQQbKG = await navigator.gpu.getPreferredCanvasFormat();
    const ficgArhdFUCe = navigator.gpu.wgslLanguageFeatures
    WYGBkPAxOoOEkzoKeUlP.end();
    const gmHalVgpibpYPnJALl = eYyunNFeS.finish();
    const NZYENkGEnNaSAXUhANd = GVCLSendh.createCommandEncoder({
        label: "AVNpdUFy"
    });
    const QpQUmtUZwQ = LkVJpu.limits
    const EQrJFDC = rzhzUYKTWdnQay.count
    const VmMOlBaUaD = GVCLSendh.features
    const cNBRvzhjLRGwFx = GVCLSendh.limits
    const SAkQz = vuUECsooSdFYEG.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 3,
        baseMipLevel: 2,
        format: "rgba8unorm",
        label: "rtHqEtd"
    });
    const QgOoLJfvH = RgWMROlIoR.getBindGroupLayout(0);
    const tZMHPakAzTZaGfKkwzPG = navigator.gpu.wgslLanguageFeatures
    IjrKBa.writeBuffer(0, 0, tQQiOKqRCnuUnFGV);
    const yXQkaIPUfIbwL = GVCLSendh.createBindGroup({
        label: "oIKmbpA.bindGroup",
        layout: oIKmbpA.getBindGroupLayout(0),
        entries: [{
            binding: 0,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            },
            binding: 1,
            resource: {
                buffer: tQQiOKqRCnuUnFGV
            }
        }]
    });
    const uevtWQrXljLqZ = NZYENkGEnNaSAXUhANd.beginComputePass({
        label: "CKfFZl"
    });
    uevtWQrXljLqZ.setPipeline(oIKmbpA);
    const gqfhHhJybkXwHqk = GVCLSendh.createQuerySet({
        count: 3286,
        label: "rodxWcozeQEVwjyLg",
        type: "occlusion"
    });
    const bWRfmRmK = WDvaVSxyr.features
    const VKJykDKNclBFgzLB = GVCLSendh.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm",
        label: "JqkhLequtyjjppGIJ",
        size: {
            width: 213,
            height: 894,
            depthOrArrayLayers: 38
        },
        mipLevelCount: 6,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const lxASutCuPp = VKJykDKNclBFgzLB.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 4,
        format: "rgba8unorm-srgb",
        label: "rvFBAcGsjtRXNBlTXj"
    });
    const fndDuHCvi = NZYENkGEnNaSAXUhANd.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.8452158300727857,
                g: 1.8032450699294813,
                b: 0.30644328149040634,
                a: 1.9897382514846524
            },
            loadOp: "clear",
            storeOp: "discard",
            view: lxASutCuPp,
            depthSlice: 1
        }],
        label: "ifmpMHxUrpSaDXWZlexM",
        maxDrawCount: 452894255,
        occlusionQuerySet: aXwzKzCEPitSRrmizKqF
    });
    fndDuHCvi.setPipeline(VFcbZSlLRCsbfQlDOHT);
    fndDuHCvi.draw(2);
    const vwjvyLScbEHsoP = FpYCslEp.limits
    JislWCf.writeBuffer(tQQiOKqRCnuUnFGV, 12, VliLtdVXkrKGr);
    const gsXhtZBgxbmbcIVjhBu = yqhzdzeMVYnGqi.features
    const BXJmmz = gqfhHhJybkXwHqk.label
    uevtWQrXljLqZ.setBindGroup(0, ZxHkIY);
    const nDiHajxx = PKeKKFStDuaSLVUyK.type
    const GKinLqPoPieGsaPXi = sApFowhA.label
    const pnxamMI = SBSIkisrObnuKdQ.count
    fndDuHCvi.setVertexBuffer(0, FHEAeJkRiaBNoeuAs);
    const HoIYegT = VGnySOiLcBdRgOEkUgK.limits
    uevtWQrXljLqZ.setBindGroup(0, OvZCqFqQmFDh);

}
main().catch(console.error);