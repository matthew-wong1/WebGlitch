const {
    create,
    globals
} = require('../../dawn/out/Debug/Debug/dawn.node');
const fs = require('fs');
Object.assign(globalThis, globals);
let navigator = {
    gpu: create([]),
};

if (!navigator.gpu) {
    throw new Error("WebGPU not supported on this browser");
}

function loadShader(file) {
    try {
        const data = fs.readFileSync(file, 'utf8');
        return data;
    } catch (err) {
        console.error('Failed to load shader:', err);
    }
}
const uXcVcCeP = new Int8Array([8403, -7825, 2050, 1023, -4058, -9184, 7133, 449, -9018, -9247, 3318, 1362, 7044, 6770, -6873, 6514, -4970, 1331, 2136, 1943, -9893, -7066, 6382, 9241, 5697, 4906, -202, 8780, 3606, -7969, 1314, 7765, 8534, -3821, -9304, 6145, 8983, -3083, 3395, -7350, 3958, -4089, -9283, 6432, -8636, 3966, 750, 9541, 5506, -5480, -7584, -9469])
const YihziPdYxkCeCtESA = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const HMHNCoIhkIWfua = new Int8Array([-2523, -9951, 1123, -2378, 329, -6808, 4697, -3386, 7979, 3651, -6718, -8608, 9719, 9704, -5493, 6764, -8823, 4794, 9656, 9848, 9159, 4365, -8959, 877, 5948, -4303, -3021, 9219, -7882, 8763, -2536, -680, -5573, 3734, -1384, -3883, 2753, 261, 375, -1177, 9040, 8117, -1886, -4876, -8612, 5068, 4911, -5860, 2546, -5476, 4861, -5280, 302, -5280, -8072, 5518, 5409, -490, -9288, -3061, -1184, 9904, -7933, 8712, -3396, -3847, -7046, 4471, 4182, 982, 1375, 8513, 8352, -2125, 9383, -3008, -1839, 2451, 1063, -7372, -533, -3320, -5856, -3374, 3227, 494, 4632, -6268, -6788, -3887, 5118, 5332, -1623, 9901, 9393, -8036, 784, 2737, 5854, -7222, 9405, -6087, -3781, -565, -1822, 6259, -8000, -3630, -300, -1442, -3374, 8347, 8346, 5147, -9533, -8483, 6076, -2307, 1543, -3408, -1329, 3711, 3812, 7969, 7339, -8145, -3622, 4028, -8490, -8125, -8320, 3262, 3641, -9058, 7467, -5171, -5774, 6109, 7770, 6481, 1712, 1739, 9224, -508, 3191, -5220, -2349, 905, 8915, -7993, -849, 6424, -9210, 225, -6759, 6288, 1081, -7181, 5182, 5329, 4010, -4454, 5741, -5709, -2725, 5012, -8536, -9919, -6127, 8271, -9202, -6828, -7241, 8335, 1002, 8178, -1402, 8205, -9130, 7589, -6776, 8629, -6580, 8149, -3362, -1153, 9454, -4828, -2201, 3113, 7599, -306, 9741, 136, -4240, 4044, 2608, 1029, 9057, 8501, 3230, 5786, -3486, 2590, 7431, -7641, -8743, 7168, -1276, -5227, -8154, -8608, -8342, -1848, -512, 3154])
const vDyENvXcgUetquS = new Int8Array([9695, -8713, 5140, -6605, -7448, -2456, -8501, 6871, -4514, -3653, -6681, 7780, -6327, -7382, -4285, 2903, 4862, -1274, 5079, 1880, -9727, 3325, 3659, 1575, -8827, 3883, 6159, 467, -7995, 9945, -5755, -9727, -9272, -1291, 6425, -7302, 4960, -4933, -5605, 6448, 8547, -4573, -2613, -1136, -2157, 767, -5249, -219, 3846, -7391, -1578, 6485, 512, -5013, 197, 5306, 1632, 9736, -1020, 1200, 5540, -4071, -6354, 2693, -4825, -86, -3800, 5151, 1248, 3383, -5902, 5980, -2091, 7526, -5859, -9535, -2998, 9492, -8807, -6090, -9622, 1079, -7591, -8235, 3801, 9481, -1669, 4505, 546, 9976, 7647, -9773, 1241, 9435, -7639, 784, -4741, 6210, 6487, 9377, 1710, 9220, 3161, -2932, 9048, 9002, 1143, 1419, 4472, -8984, -1309, -2146, -518, 1729, -2320, -4160, 9208, -243, -3241, 231, 7918, 3310, -1680, 6897, 1600, 4378, 6875, 9416, -5140, 1922, -8878, -3255, 3552, -95, 6612, -4315, 9056, 4248, 1500, 9036, 8185, -4676, -1072, -7186, -9156, -1294, -401, -3470, -8299, -6487, 3137, -5285, -6452, -5483, 8516, -994, -8160, 1808, -1963, 2259, -3693, 1858, 9128, 2186, 4197, -1275, 2534, -8614, 4863, 2151, 8407, 2321, 8002, 3869, 6365, 3039, -5784, 473, -5054, 5006, -8918, 7321, -5832, 3154, -10000, -4172, 4101, 2769, 2952, 4218, -2276, 4085, -6144, 2335, -936, -8714, 666, -2219, -5123, 5799, -8414, 8374, -2418, 1652, -2347, 3033, -3468, -2889, -5590, 318, -9383, -1167, 7337, -6977, -1019, -8144, -3967, 7735, 7813, 3532, 8067, 5772, 8721, 295, 1074, -7954, 872, -2154, -5889, 2039, 584, -9620, -9238, -7224, -5649, 4205, 1308, -5675, -9772, -2709, -4343, -623, 5524, 2119, -6875, -8982, -46, 9047, -5074, 5973, -9343, -9955, -4795, -5037, 3627, -6537, -1132, -3520, 787, -3215, 2055, -1687, -8723, 3219, -9207, 559, -3006, 8391, -1512, 6649, -2444, -6574, 6502, -8999, -367, 6004, 7352, -5125, 5667, -9146, -7889, 504, -521, -2152, 1285, 5738, -216, 1057, -265, -3862, -2297, -3654, -5612, -9669, -4219, -6064, 6128, 3663, 8693, 1721, 5013, 2964, -6337, 717, -3383, 8115, -1716, 6476, -1591, -1342, 4095, 6008, -6258, -4457, -31, -5891, -1692, 5695, 9501, 1100, -3614, -8206, -2285, -2258, -8039, -4992, 8355, 3919, 3762, -5970, 5746, 1178, -4230, -3516, -8922, -6323, 5772, 276, -6115, 4859, 6198, 4412, -9754, 836, -5200, 8098, -1369, -6075, -5241, -6769, -3941, 1818, -6898, -7607, 7324, -8224, -4560, 157, -9679, -8149, 3359, -8458, 429, -2999, -9964, 4988, 9799, 7681, 7987, 2572, -831, -4145, -7589, -3447, -1296, -4473, 6743, -4067, -7706, -3331, -575, -2198, -8453, -9626, -1334, 6261, 1337, 9413, 1404, -2180, 2071, 7611, 2370, 7306, -8254, -8230, 6060, -9080, 6287, -6098, -9374, -8102, -7296, 8029, 5882, -9170, -3815, -697, 5854, -4333, 3074, -7141, -8884, -4835, 1392, 472, -1684, 3796, 588, 6534, 7786, 1830, 5188, 3551, -584, -4896, 6648, 3848, -3211, -7807, 4417, 4645, -149, -7736, 4813, 4405, -7528, 427, -3787, 1956, 3931, 7511, 890, -4259, 3836, 8547, 2342, -6989, -9944, 2081, 2962, -4795, 1437, 3787, 1006, -9574, -5692, -1336, -8075, -5056, -8832, 4816, 1138, -4228, 8436, -2265, -547, -3095, -1376, -5692, 1253, -4518, 9431, -4757, 2601, 2458, 7613, 7105, -3073, 1653, -7911, 967, -9259, -3431, -1252, 7677, 5338, 947, -7632, -6869, -7148, 8554])
const PRvhpBtcTwbvZ = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const nJGeXyX = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const PZRSPajc = new Float32Array([-4402, -8847, -9270, 268, -6139, 5438, -3316, 6815, 9860, 7311, 1381, -7047, 2205, -7841, 7860, -2683, -2105, -2554, 9840, -1741, -7631, -7403, 8120, -3553, -2888, 3122, 820, -3088, -1312, -1890, -5644, 6944, 1141, 6517, -336, 5825, 4031, 7538, -5149, 9414, 7981, 5759, 7053, 4053, -1753, -8319, 5940, 3462, -2972, 8984, 7416, 4687, 5088, -4971, -4700, -9597, 121, -9510, 4085, 8877, -8398, -8088, 633, 5078, 1745, -1239, 2618, 9844, -3698, -6580, 9316, 6000, 3140, -5443, -5577, -3804, -2116, 5160, 4046, -3932, -3153, 7429, -8916, -4311, -8224, -5441, 5223, 8915, -9813, -7013, -5708, -1474, -9690, 6922, -2918, 9857, 8279, 100, -494, -6346, 4901, 7069, -9111, 222, -9317, -6045, 9836, -7997, 4912, 5752, -970, 1404, -2065, -6698, -4083, -7883, 2400, -3999, 5342, 565, -7343, 3915, -9519, -3545, -7259, -3355, 1818, 9596, 6677, 9638, 2874, 9733, 6196, 8984, -7046, 5836, 1249, -924, 2025, -8410, 8020, 2792, -50, 2738, 1547, -724, -4173, 7576, -7121, 714, -9998, -5182, -5338, 2519, 1423, 4912, 6372, 2148, -7850, -1670, -4818, -6942, -2758, -6219, 8890, -9194, 1176, -6626, 1556, 6089, -5309, -5733, -207, -5307, 9217, -4436, 2488, 8638, -5471, 2156, -3926, -7811, -9947, 7991, 8831, 7741, -5925, -3779, -8417, -5963, -8216, 1710, -3714, 5852, -7443, -2281, 4100, 5763, 9708, -5558, 4488, -8372, -4798, 2462, 419, 3201, 9498, -7982, 2139, 884, 1173, 8574, -7931, -9631, 1412, -1648, -4525, -5137, -1487, -3880, -8520, 8692, -6593, -8505, -7126, 4011, -2471, -853, 2542])
const MBZUlKYhqKgDTaoW = loadShader('../WebGlitch/rsrcs/shaders/compute/3.wgsl');
const EwfRVG = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const vVgvSMNYdYvIZetr = new Int8Array([5530, 1890, -7351, 4965, 308, 9612, -8112, -468, 288, -7360, 7637, 7876, 8082, 2412, 5183, 8602, -3735, -9026, -6251, -5447, 3847, -5986, 8389, 9362, -1248, 7136, 910, 7314, -5059, 3313, 8247, -9391, -6638, -6925, -7016, 1754, -6927, 9071, 8292, -4770, -8343, 5807, -9205, -2263, 1998, -7631, -8638, -6919, 1624, -7063, -8513, 9569, 8698, -4990, 3071, -6679, -4999, -4441, 4049, 8016, 4074, -9452, -1535, 5163, 4972, 2633, -7286, 6684, -1428, 9909, 8679, -9781, -4301, -1671, -4972, -7631, -7308, -1170, 2047, 290, -1350, 5518, -9882, 9723, 7190, -5244, 9278, -2837, -7592, 2391, -5206, 7208, -5536, -7448, 9829, 3738, 216, 6725, -2743, -1463, 1099, -1216, 4359, -303, 1062, -8130, -1532, -7080, -7810, -1644, -7682, -2415, -7804, -8602, 5790, -8382, -7236, -1689, -9171, 4891, -5523, -5782, 3916, 7667, -9088, 9745, 7636, -9188, -1492, -9144, -8447, -7233, -8682, 6480, 4081, -674, 3401, -4939, 1184, 2364, -1062, 5997, -1015, 7652, -4330, 906, -7443, -8779, -8208, -7966, -2712, -6245, 1147, -1878, 3684, -6551, -3011, -3741, -10, -1126, 6710, 4367, -1616, -1287, -2440, 7994, -61, -9824, -8493, 6803, 1246, 7507, 2472, -4349, 1631, -6420, 3223, 4115, 8081, 1221, -2418, 3031, -7721, -6953, -9759, -680, 691, 8523, 5998, 5675, 900, -6870, -9781, 7774, -2325, 2627, 1322, -4766, -3560, -8686, -3661, -5298, 311, -3026, -9390, 9712, -443, -6145, -5197, -8942, -8642, -7779, 2914, -5663, 5809, 653, 4037, 8244, 8798, 5224, 1328, 7302, -2017, 2295, 1457, 9505, 1900, -6975, 2353, 681, 1570, 9570, -3303, -425, -567, 540, -1511, 4729, 6245, -3680, 9636, -7186, -1244, -4784, 7605, 5841, -403, -2863, 7231, -8768, 7517, -6542, -5190, 2574, 5490, 9166, 9221, -4525, -108, -6756, 7024, -4956, -8752, -7242, -8009, 3902, -5368, -4405, 8506, -9901, -4474, 2982, -2319, -9305, 4160, -8384, -1910, 4900, -5917, 8749, 2593, -506, 1452, 9510, 1904, 845, 7049, 9142, 320, -8228, 7927, -3677, 4867, 9384, 6945, -842, -3706, -9931, -103, 2408, -1, 3705, -2168, -4798, 9293, 3986, -3493, 8273, 5759, 1763, 4741, 510, 3131, -9477, 7968, -1857, -7436, 9233, 7447, -2172, 2089, -4923, -5662, -3139, -423, 1457, -9596, -9565, 3216, -4860, -8665, 4188, 6124, -9216, 700, -6561, -3203, -6772, -7411, 62, -6427, 9111, -8798, -5486, 544, -9887, -6648, -9411, -2450, 472, 5308, -8761, -6560, -6141, -8611, 7987, -2982, 6530, -1016, -1966, 3688, 6560, 7607, -329, 8836, -218, 8202, 4814, -7115, -6781, -1599, -1140, -871, -4297, -564, -6821, -8416, -4343, 8379, 1886, 1561, -7965, 2229, 9039, -6910, 1032, -4432, -6093, -8594, -6667, 3205, 8372, 2940, 6949, -3854, -4606, -4986, 1425, -7922, 2909, 2324, 6667, 2045, 3565, 3206, -7490, 5561, -7165, -5806, -3676, -2533, 8274, 5785, -7445, -4384, 1539, 7492, 8550, 3978, 3857, 6176, 4964, -3919, 8927])
const vkTonIbkolzfbQe = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const wlxRBWojFpK = loadShader('../WebGlitch/rsrcs/shaders/compute/3.wgsl');
const SoeWEEHeuVuRdoaZzv = new Int8Array([8623, 7691, -9448, -6703, 4438, 5705, 397, 4806, -3384, -8359, 9242, 5256, -1544, -5260, 4630, -8060, -9462, 982, -235, -4886, 8251, 6191, -4985, 7119, -7643, -9514, 5675, -6493, 8853, 9055, 6993, -5676, 4240, -9348, 8408, -5271, 7654, 573, 2681, 5083, 2763, -411, -841, 8480, -3106, 5217, 9051, 7395, 4974, 1538, 798, -2639, -600, -1228, -8979, -8729, 322, -7753, 886, 2562, 3132, -1595, -9308, -5124, -3637, -5828, 1903, -9617, -548, 5124, -5, -2320, -8233, 2821, 9625, 1627, 7673, 6327, 7565, 1919, 1084, 2768, 4823, 7432, -4023, 5124, 8874, -4991, 2615, -8478, -8152, -1317, 1464, 7142, 2304, 216, -142, 4283, -4992, -7225, 7819, -5017, -5774, 4261, 762, -733, 5370, -9181, -6541, 1682, 7542, 8562, 4483, 6453, -7033, -564, -6457, 6029, 4954, 3636, 5471, -2886, -7891, -5248, 8725, -5717, -4762, -9120, 7714, -2557, 824, 4673, -4406, -2281, -6727, -2650, 9393, 5472, -8396, -1986, 8225, 2691, 5891, -4987, 8028, 5679, -3916, 7278])
const srgGAyJsJiod = new Float32Array([-2043, 5492, -7872, -3625, 6481, 7553, -2254, -3976, -3891, -4626, 4834, -2848, 1422, -8102, -560, 7183, -6569, 8860, -9657, 7690, -9190, -3551])
const PAxhQBXTNTALQydpX = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const GqVZFSWJgtLSBjc = new Float32Array([9598, 8752, -7199, -6678, -7270, 4057, -1354, 9031, 927, -2648, 9791, 6879, -9988, 9881, 6576, 6554, 3382, -2790, 5965, -7540, 7215, -5849, 170, 5443, -2336, 8933, 6947, 6976, 4012, 7166, 571, 5489, 1227, -4092, 9200, 3502, 5726, 9779, 4209, 521, -543, -8613, -2610, -8272])
const rbzLJkPMqgJ = loadShader('../WebGlitch/rsrcs/shaders/compute/exemplar1.wgsl');
const sfEBQvGSwAqVuTK = loadShader('../WebGlitch/rsrcs/shaders/compute/1.wgsl');
const wiskV = loadShader('../WebGlitch/rsrcs/shaders/compute/exemplar1.wgsl');
const FtaaVkIjouZxaNIDtNj = new Float32Array([3781, 9401, 9301, 6128, 2200, 5708, 9807, -340, -1072, -3110, -3968, 4140, 3205, -6430, -9284, 4040, -1582, -2420, 9914, 951, 9106, 1841, -9019, -1513, 3151, -3504, -2211, 4605, 5904, 2827, -2233, 3965, 8349, 2907, 3225, -6115, -2221, -4234, 7727, -7276, -7648, -5738, -4215, 2263, -941, 1724, -9788, 7433, 3817, 2114, -4543, 6692, 393, -8630, -8748, -7110, -4048, 1462, 5997, 5332, 7196, -1838, 5363, 7064, -8385, -662, -5280, 9116, -1787, -1010, -9696, 8714, -3794, -8019, 1617, -4387, 8543, -7159, -9176, 5030, -2237, -1027, 5352, 8657, -2870, 2177, 4663, -5589, 7181, 9656, 6662, 7684, 2539, 5517, -5370, -3014, -2092, 3164, -8832, -9393, -5297, -4962, -5829, -3047, -2612, 2858, -361, 755, -1799, 8367, 6311, 6383, 5594, 3548, -3687, 591, -6682, -9128, 6070, 657, -8491, 8893, 4065, -927, 5127, 8074, -3985, 3338, 906, 1811, -4465, -5807, 4676, -3333, -6543, -8456, 8788, -69, -5884, 4489, -7043, 421, 7488, -9928, -1310, 7518, 6561, -1296, -9335, 4645, 1828, -3123, -4856, 8636, -4775, -5031, 5029, 7139, 1543, 5016, 1454, 6153, -8963, 9024, -910, 1236, -9294, -155, -6193, 9160, -9086, -3810, 4354, 2301, 7015, -3376, 9839, 5112, -2137, 7619, -7892, 7695, -8267, -1478, 567, -3448, 9889, 8097, 702, -9205, 4428, 7644, -2130, -1243, -7629, -5464, -3238, 5977, -1150, 5573, -5722, -7882, 5825, 325, -5186, 1742, 5172, 9005, -8309, -6498, 300, -1466, -99, -1699, 9351, -1919, 1969, 5435, -1007, 8854, -4278, -6883, -3681, 8937, -8215, -1996, 7446, 6259, 811, -6698, 2395, -689, 1971, -9893, 1711, 9835, -3693, 1375, 8978, 1869, 861, -3122, 5570, -8546, 1297, -7916, 8410, 5261, -6044, -9750, 6259, 3702, 5130, -8837, -373, 5255, -949, -1664, 9407, -2805, 3052, 5925, 2228, -6120, -3714, 592, -1087, -7753, 2703, -366, -9077, 9560, 2781, 8385, -6751, -1542, -1202, 7064, -3099, 5384, -9984, -265, -6620, -354, -451, 1365, -655, -2271, 2676, 9170, -5945, -8237, 4469, -1935, 1960, 598, -5619, 6226, -5065, -2406, -8594, 9089, 105, -3669, 815, 8290, 9314, 3601, -2232, 9790, -8348, 6017, -1090, 1380, 905, 8080, 2657, -9093, -8188, 7938, -3114, -6344, 3828, -3287, -5213, -6788, 4399, 8072, 966, -9849, 5757, 920, 2415, 4995, -9823, 4404, -6431, 12, -8903, -2657, 7451, 4678, -5450, 3214, 9896, -1370, 5035, 9618, 2700, -2653, -4706, -338, 4383, 4716, 2288, 4598, 4414, -6215, 8166, 4210, 4488, -1232, -5894, 4725, -3118, -2687, 1119, -4587, 2969, -6449, -1528, 2961, -1587, 8130, -516, -5402, 1917, 7988, -9891, -318, 1067, 5995, -171, -959, -1343, -2806, 2624, -3457, 2918, -6369, 1883, -154, -8412, -5497, 760, 6235, 2871, 853, -2202, -4278, 4020, -8109, 4022, 7252, 5501, -1589, 9311, -504, 5354, 7869, 7253, -6325, -3675, -7235, -3425, 7779, 5564, 2413, 6659, 2697, 7546, -5951, 3618, -3504, 9345, -3956, -5110, 9731, 4333, 7496, 6080, -9521, -5827, 8523, 8039, -9343, -7676, -3626, 8647, -7580, 6804, 1306, 2189])
const VwnVuIWazrOoAxDwf = loadShader('../WebGlitch/rsrcs/shaders/compute/1.wgsl');
const efaEVKEI = loadShader('../WebGlitch/rsrcs/shaders/compute/1.wgsl');
const cWjbYdvOw = loadShader('../WebGlitch/rsrcs/shaders/compute/1.wgsl');
const GzTwByjxOQhzAJKngplt = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const HwLhxbpKapMd = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const MqKyl = new Float32Array([7884, 7614, 9838, -3266, 7590, -2789, 9287, 5337, -4655, 2286, 9155, 420, 5024, 4606, -9493, 9961, 1344, 7187, -7386, -3708, -2109, -4960, 9698, -3636, -1589, 9527, 2733, 1547, 5824, 3418, 2390, -7681, 4758, -4720, 5809, -6155, -9710, -8079, -9647, -274, 4380, 6153, 5376, 1023, 7670, 96, 2784, 6819, -8859, -6887, -705, -5597, -9311, 1235, 7877, 5140, 61, 274, 3817, 4328, -6371, 963, -9730, -2470, -9726, 7620, 5395, 549, 1268, -4354, -8124, -9960, 8685, 4629, -8723, -9811, 1635, 1405, -1947, -4716, -4868, -278, -3245, -2843, 8949, -6307, -4483, 7174, -7597, -5136, -885, 885, 7211, 1678, 8251, -4695, -8540, 9865, 3683, -9812, -8413, -4565, -1973, -9425, -8413, 8059, -8317, 5438, -178, 3602, 4473, 3999, -281, -8365, 2951, -2378, 6347, 5887, -3194, -8334, -6434, 9921, 4028, -9086, -9021, 251, 9839, -2265, 7358, 4619, -4932, 4435, -4738, -5910, 6254, -7532, -3149, -6606, 2853, -1671, 4609, -9811, 9570, 6167, 5075, 8708, -5618, -9384, -3125, -3469, 4467, -908, 3272, -8252, -6109, -6981, 5718, 3485, -9800, -4749, -339, -383, -3337, -4014, 7996, -1430, 5613, 8759, -8250, -4377, -2744, 6212, 919, 9869, 3609, -999, 1044, 6205, 4588, -5236, -8775, 975, -622, 5372, -2939, 6657, -3058, 7194, -3656, -4401, -6292, 6095, -5487, 3989, -1202, -1236, -2344, 5460, 6219, 9243, 4270, -2609, -3476, -6727, 8162, 4268, 9615, -6626])
const kegdOkUTTyV = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const PTaKCdsUzuUyro = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const ipwjXXjskNxaClXqoU = new Int8Array([7144, -5358, -4754, -6299, 1565, 6696, 8693, -1974, -6460, 472, -534, 9692, 7369, 9067, -7009, -2752, 3415, -5458, -6434, 2429, -4681, 8062, -7190, 9249, -9402, -8891, 3053, 5201, -6421, -330, 5885, 6354, 893, 5396, -8770, 4461, -2112, -1142, -7197, -182, 750, 143, 6555, -4699, 5628, -4997, -9490, 9505, 1959, -5331, 5125, -9207, -240, 978, 9190, -5860, 5707, -7473, 5583, 5858, -3707, 1949, -1654, -5514, -5016, -2005, -7480, 3275, -3706, 8218, 7554, -7468, 6743, 3209, 7572, -6811, 9789, -5754, 713, 2274, -740, -7908, -9025, 5509, -1371, -6949, -7838, -7428, -5179, 6691, -6048, 6501, -7456, -1035, -7053, -8008, 3081, -8119, 825, -8326, 6595, 5802, 9809, -4257, 9896, -3349, -1618, -1341, -7117, -6456, -7481, 779, -1276, 6510, -4355, -5423, -654, -2824, -1397, -1934, 7238, 6111, -2750, 8884, 7304, -2168, 4145, 1356, 2587, -4095, 6831, -2207, -9571, -4022, 555, -5972, 6685, -4728, -3059, 9163, -2501, 9113, 7636, -3663, -9015, -3230, -5603, -5610, 9256, 2051, 1727, 8068, -8709, 8450, -3360, 2838, -8591, 5735, 6878, 9517, 8942, -9925, 1583, 8977, 609, -6540, -503, -8938, 2666, -8835, -6736, -38, 1494, 5718, -8734, -568, -6146, 7593, -1890, -5415, -6320, -8074, -8799, -6929, 2017, -1166, 543, 902, 8190, 7072, -7121, -2436, 8369, 6022, 628, -5572, 8301, 6211, -7741, -7216, 2581, -5607, -5812, 5110, -2686, -6312, -1615, -8907, 7353, -3274, 7539, -1594, 6376, 8405, -6802, -9483, 8270, -1854, -2719, -6957, 6123, 3986, 9423, 264, -432, -6643, 9030, 896, -8207, -1601, -3063, -1533, -2078, 9758, 2214, -1130, 8879, -7095, -6972, -9030, -5686, 474, 1378, 1578, -7404, -4559, -7073, -7028, -2329, 8208, -3881, -1101])
const sNfxKbhTxzticu = new Int8Array([-1486, 2161, 6270, -8463, 7173, -5740, -15, -9259, -6880, 8968, 1395, -9118, 1704, 5, -8066, 7413, -3199, 6642, -9643, 7840, 2972, 6268, -8917, 7263, 4326, 7739, -606, 4575, -2802, -248, 5723, 1743, 3405, 604, 9446, -8500, -7410, 5603, -5977, -1134, -9214, -7330, -7353, 6616, 3590, 4634, -4189, 1605, -8993, 8788, -6685, -4931, -9253, 3405, 1547, -6763, 1316, 7746, -3552, 1353, 5356, -7903, 32, 4702, 9174, -4455, 7478, 6469, -3350, -5658, -2502, -3370, 9175, -5484, 9391, -2330, 4553, 5797, -9457, 5613, 9427, 8316, -2780, 7380, 1069, 8844, 1538, 1123, -9723, -2218, -8099, 6327, -3620, -8213, 6603, 4525, -9361, -4360, -6387, 1023, 2428, -1600, 4626, 6129, -5954, -6373, 569, 6859, 1849, -5305, -6844, -1838, 9490, 8145, -1204, 8727, -2516, 489, 9411, -1594, -1641, -8535, -6084, 615, -7890, -7578, 9786, 5499, 4827, 9391, -6230, -4969, -8475, 9073, 9538, 3560, 9221, -4938, -6080, -3433, -1575, -1464, -3700, -8604, 3243, 1555, 9490, 7494, 1329, 3476, -6589, 8393, -3630, -8842, -5490, 9973, 1612, 5594, 3455, -9255, -7861, -6462, -3670, -2809, 7222, 6513, -4049, 4073, 2900, -6287, -9114, 1683, 4969, -305, -14, 2537, -5198, -6574, -9335, 8203, -9502, 3021, 8306, -8420, -6660, 497, -1679, 5853, 3355, -2135, -2776, 8294, 3292, -339, -1518, -7478, -2578, -4056, 6041, 1008, -5182, 5655, -4069, -3592, 3324, 1157, -4278, 1743, -1200, -5071, -340, -8991, -7666, -8152, 3657, -5668, -7295, 1941, 1494, -6732, 7259, -1920, 5651, -8174, -3576, -2639, 7976, -3397, -499, -3064, -7052, 5328, 7228, -6776, -5074, -2931, -6166, 6815, 24, 111, 4249, 260, -4692, -4028, 3394, 2198, 8632, -3308, 3387, 2357, -7943, 4762, 4258, -9865, -8179, -2732, 8349, -9466, -897, -5077, 9606, 5520, 2247, 9684, -504, -2439, -6945, 1135, 8252, 7097, -1981, 9672, -7120, 1469, -4747, 2546, 1935, -9926, 83, -3651, -6102, -7553, -513, -3949, 3181, 1183, -8403, -4558, 8534, -9763, 1290, 6651, -2436, -4122, 4959, 4760, 9809, -1170, -9381, -5211, -8781, 868, 9899, 4005, 5694, -8149, 5293, -3368, 2181, 2690, -6786, -4539, 8788, 6785, 1579, 1742, 9114, -9820, 7120, -4536, 4900, -3088, -4127, 957, 1603, -5139, 9291, -9513, 4654, -1218, -701, 9276, -3849, -8971, 5145, 5738, -1135, 3705, -9255, 2633, -6151, 3263, -4484, -8933, -741, -7436, -9261, 154, 2549, 6766, -2744, 4198, 5836, -794, -1950, 1477])
const yyohBTRFUvWqUjj = new Int8Array([4314, -7662, 8718, -8489, 7708, -699, -7014, 2181, 3325, -8634, 1808, -1283, -4365, 6662, -2696, 6016, 8442, -6413, -8204, -7334, -4627, 8580, 4559, -3866, -2252, -623, -3460, 9098, 7488, -4426, -3368, 4191, 649, -4128, -648, 2174, -8300, 809, -7177, -169, 2814, 5222, 9076, 448, -7715, 8509, 4753, 9310, -9877, -4384, -2708, -4695, -7809, 278, 3837, 8331, -895, -9741, 798, 7558, 7628, 5063, -7051, -8823, 7674, 4837, -4703, 8164, -8088, -9801, -3172, -8071, 4447, -5282, 1133, 8545, -216, -9198, -2427, 6082, 2505, 3857, -5774, -8470, 3970, -8891, 855, -4686, -5758, -2474, -6885, -1174, -527, -9771, -4982, -1253, 4952, -2219, -4805, 4785, 808, -5917, 1362, -8975, -8013, -4201, 1004, 2938, -8873, -4907, 5849, -3300, -4670, 4527, -3503, -4820, 6264, -5807, -8714, 6668, -4112, -4113, -7186, 7082, 961, 7360, 9421, -4038, -2443, -3510, -4361, -4009, -340, 8623, 4510, -875, 6918, 6387, -6669, -5281, -5863, 5383, -8372, -1751, 8180, -5429, 6154, 681, -6862, 9728, 7002, -9191, -3909, -5418, -3920, -8407, 7531, 1648, 6872, 7192, -309, -3571, -5875, 8707, -8341, -2790, -6996, 3288, -203, 7635, -8582, -1948, 9997, 2712, 9667, -651, -6346, 9984, 4340, 3117, 4999, 6010, -498, 6803, -9981, -7232, -4725, 1812, 1989, -7003, -3689, -3637, 414, 1267, -1129, 3713, -3251, -2920, -5548, -4317, 9000, 8735, -1716, -12, 2510, -5334, -8220, -3425, 2558, -2365, 4333, -8498, -4755, 5551, 1580, 3285, 1909, 2995, 6084, 9767, 8460, 2212, 3898, -9629, -2257, 4040, -1740, 1477, -4158, -9551, 1614, -5411, -829, -2149, -5495, 4243, -735, 4704, -2136, 5253, -5925, 1065, 3633, -2659, 3869, 1167, -4672, -2229, 2714, 8126, 4600, 6539, 1856, 8504, -1930, 4, 9737, -8996, 7382, 7334, -9276, 9240, 8509, 8922, 566, 7764, 3784, -4344, 5848, -8250, -9482, 9073, 7000, 7454, -8372, 1494, -5478, 2300, -9533, -3428, 8511, -6198, -3100, -5336, -2284, 8794, 4625, -6477, -2322, 9801, -4393, -6061, -2006, -1730, -4216, -6524, -8190, 1592, 5311, 6982, -6186, -5750, 58, -1962, -4023, -1682, -4606, -1337, -8906, 6197, -2140, 6705, -8011, 855, 8785, -5165, 4994, -7023, 3677, -3396, 2519, -2480, 4731, -2035, -7360, 4602, 9305, 3973, 6347, 8121, 2449, 327, 4978, 9619, 1972, -2223, 3672, 7909, 8497, -7247, 2872, 9539, 4972, 5635, 5876, 3016, 564, -5428])
const dWPkJoNZF = loadShader('../WebGlitch/rsrcs/shaders/compute/2.wgsl');
const LFDuUylmxoo = new Int8Array([-1712, 2872, 2617, 8245, -1122, 8681, 4314, -1033, 5101, 9114, -4855, 7160, -7750, -8017, 8010, 5092, 7392, 1129, 1389, -7681, -5173, -1838, -4964, 7773, 7952, 7861, -9788, -6740, 6330, 2195, 5494, 3419, 5727, 6697, 4227, 2614])
const ycFSVHYdqatJ = loadShader('../WebGlitch/rsrcs/shaders/compute/1.wgsl');
const hltZEAsTwEuvLjPVp = new Int8Array([7841, 9087, 3783, -3928, 8394, 1388, -8181, -3013, -8462, -8718, 1752, -6010, -4068, -8993, -9474, -4558, 1377, 5297, -8812, -8433, -8924, 1841, -5932, 4265, 268, 9407, -5071, -6624, 8698, 3746, -815, -130, -9382, -8259, 5268, -3120, 4083, -8391, -7619, 6267, -6079, -3260, 6008, -576, 5915, -2001, -4506, -5326, 654, 1782, -8724, 608, -3215, 7254, -4841, 1809, -5423, 7645, -3245, 1638, 6677, -6675, 3449, -3994, -4609, -4598, -3454, -3342, 7043, 8459, -370, -6498, 4313, 4772, -9287, -7269, -5980, 2754, -5035, 5133, 1069, -9569, -6844, -1508, -2134, -2892, -6368, -1759, -118, 2173, -445, 593, -9571, 4028, 4207, 7863, 896, -988, 3512, 3155, -2610, 7626, 4564, -7717, -2435, -3298, 585, 7544, 7262, 9344, 3634, 1738, -4248, -7193, 1912, -7393, 5334, 2763, -5307, 6519, 5628, -4225, 951, -6863, -5778, -5364, 210, -8, 2972, 3571, 2718, -1223, -8248, 3734, 4708, 8330, 318, 5279, 4483, -1027, -9300, -9211, -9442, 5391, 4659, 1, 1423, -5529, 9185, 8159, -209, -9936, 4446, 2674, 8550, -7046, 223, -8922, 5355, 9239, 9415, -8530, -1909, 2401, -8338, 5448, 3133, -3427, -4588, -3944, -4983, 3791, 7276, -2558, 1048, 2852, 6139, 251, 3196, 7007])
const EgjIVDC = new Int8Array([9636, 6937, 1002, -4856, -8445, -9333, 8416, -4418, 4325, 2339, 8704, 3187, 9802, 5169, 4247, 9760, 3108, 9986, -7509, -9315, -7680, -5561, 8764, -4497, 7089, -3548, -1068, 1736, 5527, 9636, -6605, 2849, 4789, 3909, 7831, 3526, 9482, 738, 7252, 9198, 5247, -7793, 1347, -85, 3348, -2574, 7609, 62, -544, 8020, 6945, -1385, -5886, -4983, 7148, -1180, 4190, 3066, 5642, -3793, 5547, 205, 2544, -8184, 942, -9167, -4237, -2016, 5238, -9149, 8216, -8187, -1072, 3588, 5158, 7247, -8814, -6489, 9365, -7873, -3840, -6344, 4569, -437, -7750, 9701, 4479, 2486, 791, -6501, 8403, -4654, -9125, -262, 8151, 2062, 7236, -5035, -7337, 5639, -9307, -6681, -4435, 6379, -2425, -5586, 9771, 8251, 2231, 9079, -5931, -1769, 8561, -1405, -9464, 7982, 5201, -7756, 5705, -2070, -5194, -5718, -7317, 2750, -7410, -937, -3817, 6043, 6126, 8176, 6904, 8622, 8266, -1175, 5752, -5668, 6125, 8906, 9425, 376, -6839, 8061, -3513, 3825, -2432, 368, -9819, 3549, -6910, -3598, -4697, -1835, -3489, -4639, -5592, -8781, -9997, -5260, 3198, -2217, 8891, -416, -5220, 6674, 7056, 9586, 989, -6873, 7533, 4116, 9323, 9689, -9811, -7404, -6398, 6231, -6949, -5123, -4024, -4486, 3852, -9262, 2667, 2855, -3087, 5837, 7353, -2458, -29, 2008, 4427, -5797, -8287, -2276, -8126, 3173, 6159, -1919, 1033, 5076, -1404, 3637, -177, 7545, 7933, 6830, 8972, -64, -8828, 1629, -3997, -3135, -8913, -9949, 6048, 3885, -6949, -4647, 2448, 2394, 3667, -8754, 623, -338, -7876, 8080, -2118, 5057, -8551, 4135, -1465, 9815, -678, -1759, 577, 3889, -9215, 9708, 3143, -594, -4315, -8350, -3741, -8663, -3546, -2878, 2735, 3284, -6759, -7932, 1099, -3019, 9681, 2169, -1259, -5569, 3702, 1562, -2508, -6387, 3270, 6399, 8885, -8197, -7638, -7710, -8907, 9974, -4878, -6712, 5258, -5452, -5875, 6232, 5853, 5602, 6085, -3564, 2933, 3258, -752, -2558, -9832, -3810, 7141, 2458, -2112, -6163, 4621, -5378, -3401, 9167, -1492, -9203, -96, 4013])
const hZvkbKXUMLy = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/vertex.wgsl');
const SHhBYHPKN = loadShader('../WebGlitch/rsrcs/shaders/graphics/helloTriangle/fragment.wgsl');
const KzqKcWJKJzxqVlzm = loadShader('../WebGlitch/rsrcs/shaders/compute/3.wgsl');

async function main() {
    const QBDkzLo = navigator.gpu.wgslLanguageFeatures
    const MrBSCwvM = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const eYcQC = await MrBSCwvM.requestDevice();
    const hgyLY = eYcQC.createShaderModule({
        label: "compute",
        code: KzqKcWJKJzxqVlzm
    });
    const QueibGvEh = MrBSCwvM.limits
    const eEbhOqlGwOFkJoKg = navigator.gpu.wgslLanguageFeatures
    const IvDVRq = eYcQC.queue
    const bLzCiukVAaj = eYcQC.features
    const tUFwzYdfXWyZTzyASj = eYcQC.label
    const CQlzBavhrGtDkCHyL = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const ldUlL = eYcQC.createCommandEncoder({
        label: "cSlDeEJaiEg"
    });
    const Djtrd = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rg16float",
        label: "RDcRBnrUTzZ",
        size: {
            width: 3943,
            height: 2665,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rg16float"]
    });
    const teTvNVyPAmpdtdJAk = Djtrd.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg16float",
        label: "mokyuJghYMjhExcpDdjT"
    });
    const vFwIZDAkPOXDYfT = eYcQC.createQuerySet({
        count: 2594,
        label: "CIoDrdjQV",
        type: "occlusion"
    });
    const nrTahoENF = ldUlL.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.422804950319872,
                g: 0.6720243140155819,
                b: 0.2606006139083774,
                a: 1.5271722919175206
            },
            loadOp: "load",
            storeOp: "discard",
            view: teTvNVyPAmpdtdJAk
        }],
        label: "hgmYWzMVRVZOnUgZitlI",
        maxDrawCount: 1400248850,
        occlusionQuerySet: vFwIZDAkPOXDYfT
    });
    const JoSydoRsErE = eYcQC.limits
    const KQfEUGcxCkQ = eYcQC.limits
    const aPtQuvOwwcb = CQlzBavhrGtDkCHyL.info
    nrTahoENF.end();
    const MhHXarXTXrtKwLx = eYcQC.limits
    const kPgXkOuef = eYcQC.createShaderModule({
        label: "fragment",
        code: SHhBYHPKN
    });
    const yLpQQNnkhtLfclz = eYcQC.createShaderModule({
        label: "vertex",
        code: hZvkbKXUMLy
    });
    const GvWJyllC = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "zero",
                        srcFactor: "zero"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "one-minus-constant",
                        srcFactor: "src-alpha-saturated"
                    }
                },
                format: "rgba8unorm-srgb",
                writeMask: GPUColorWrite.ALL | GPUColorWrite.GREEN | GPUColorWrite.BLUE
            }]
        },
        label: "gkrGVnJyfzuqcnzKp",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "cw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const xLHnovuaAGVyR = teTvNVyPAmpdtdJAk.label
    const CyFvrInHcY = ldUlL.finish();
    IvDVRq.submit([CyFvrInHcY]);
    const yfChKZKJZvmisShIK = eYcQC.createBuffer({
        label: "omkyuBylyVzKcIssvF",
        mappedAtCreation: false,
        size: 42663532,
        usage: GPUBufferUsage.MAP_READ
    });
    const HFdaNSQHelkUPYyKUhtA = navigator.gpu.wgslLanguageFeatures
    const UcrbDCRTGWiAVAsNp = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r8unorm",
        label: "fMwQe",
        size: {
            width: 1015,
            height: 786,
            depthOrArrayLayers: 52
        },
        mipLevelCount: 9,
        usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["r8unorm"]
    });
    const LrQcmtZbefjPoHqMQDb = eYcQC.createCommandEncoder({
        label: "PNYAcXzFws"
    });
    const pGDSKgNJZXtFbRFekno = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm-srgb",
        label: "YLCiqbrNIhWqwcaSLQX",
        size: {
            width: 562,
            height: 1559,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["bgra8unorm"]
    });
    const TsCszGVRPXpbWbXpAgy = pGDSKgNJZXtFbRFekno.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "CppIVVxWCFrYRGcZbm"
    });
    const CNEEMDXVOVb = LrQcmtZbefjPoHqMQDb.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.07346611469580866,
                g: 0.1009881390389431,
                b: 0.6771996146633941,
                a: 0.21488288352288265
            },
            loadOp: "load",
            storeOp: "discard",
            view: TsCszGVRPXpbWbXpAgy
        }],
        label: "SbJftC",
        maxDrawCount: 2231893973,
        occlusionQuerySet: vFwIZDAkPOXDYfT
    });
    CNEEMDXVOVb.end();
    const hKNhGC = eYcQC.limits
    const bIRWkRt = eYcQC.createBuffer({
        label: "YdkwQvHanwrOcK",
        mappedAtCreation: false,
        size: 136656716,
        usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.COPY_SRC
    });
    IvDVRq.writeBuffer(bIRWkRt, 79063520, EgjIVDC);
    const ygKEcpEy = eYcQC.createCommandEncoder({
        label: "SpBkQBrLBi"
    });
    const cyIlaHoZvPxKy = MrBSCwvM.info
    const HCdVS = await navigator.gpu.getPreferredCanvasFormat();
    const kJHPWYNaWTeSUPn = CQlzBavhrGtDkCHyL.limits
    const bhqwhhj = CQlzBavhrGtDkCHyL.limits
    const MOvjqzScPeUkpNt = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const TkmUM = teTvNVyPAmpdtdJAk.label
    const TPqJZblj = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba16float",
        label: "vTkgPphdYk",
        size: {
            width: 188,
            height: 53,
            depthOrArrayLayers: 29
        },
        mipLevelCount: 2,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgba16float"]
    });
    const spVbBFsxxIIOubHWo = TPqJZblj.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba16float",
        label: "zPuZMyDoTDMbugBhpliJ"
    });
    const JHQlglaLUTDcJrLnPonV = ygKEcpEy.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.45307122321545834,
                g: 0.5505965469047343,
                b: 0.5993008241043984,
                a: 1.5327773301836534
            },
            loadOp: "clear",
            storeOp: "discard",
            view: spVbBFsxxIIOubHWo,
            depthSlice: 3
        }],
        label: "eZsvBvUdNiQeoVSSy",
        maxDrawCount: 1682142750,
        occlusionQuerySet: vFwIZDAkPOXDYfT
    });
    JHQlglaLUTDcJrLnPonV.end();
    const iYlTkzsAwtcLE = vFwIZDAkPOXDYfT.label
    const dUrdff = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "add",
                        dstFactor: "one-minus-src-alpha",
                        srcFactor: "one-minus-constant"
                    },
                    color: {
                        operation: "subtract",
                        dstFactor: "zero",
                        srcFactor: "one-minus-src-alpha"
                    }
                },
                format: "rgba8unorm-srgb",
                writeMask: GPUColorWrite.BLUE
            }]
        },
        label: "RGkneXvg",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "back",
            frontFace: "cw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const VYZQkdUN = vFwIZDAkPOXDYfT.count
    const XyvVKHvNGXszxbXJnQbu = vFwIZDAkPOXDYfT.type
    const wePoXheiWjkKJRo = MOvjqzScPeUkpNt.features
    const NheWIPrYZJGLd = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm",
        label: "VPTwOjzDypHRtyG",
        size: {
            width: 133,
            height: 844,
            depthOrArrayLayers: 56
        },
        mipLevelCount: 10,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgba8unorm"]
    });
    const DlKugCZdVvt = NheWIPrYZJGLd.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 2,
        format: "rgba8unorm",
        label: "joMLv"
    });
    const htUTRuryZkKYsLmWzb = LrQcmtZbefjPoHqMQDb.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.1510013848358898,
                g: 0.5550318238103304,
                b: 0.18079733369492113,
                a: 1.0579681224343054
            },
            loadOp: "clear",
            storeOp: "store",
            view: DlKugCZdVvt,
            depthSlice: 1
        }],
        label: "FYScluYUJohjrpkPFG",
        maxDrawCount: 3412304479,
        occlusionQuerySet: vFwIZDAkPOXDYfT
    });
    const lRnppHwGZumeoh = eYcQC.queue
    const HxjJfEtbUpgkByZtCTSI = MrBSCwvM.features
    const gqKZJVFKCjfDQo = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "one-minus-constant",
                        srcFactor: "dst"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rg16float",
                writeMask: GPUColorWrite.RED | GPUColorWrite.BLUE | GPUColorWrite.GREEN
            }]
        },
        label: "FYgCxtrQDMcfNItzYcj",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const loxUHMAHwYr = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "one-minus-src-alpha",
                        srcFactor: "one-minus-dst-alpha"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "one-minus-dst-alpha",
                        srcFactor: "one-minus-constant"
                    }
                },
                format: "bgra8unorm",
                writeMask: GPUColorWrite.RED
            }]
        },
        label: "iSeGUYc",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const OacloMPGqEVsAIF = eYcQC.label
    const kobzgqmelVu = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba16float",
        label: "YrHdoIuaNxIhVOfG",
        size: {
            width: 182,
            height: 575,
            depthOrArrayLayers: 63
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.COPY_SRC | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING,
        viewFormats: ["rgba16float"]
    });
    const AjCzlwHZUJiQqbvsdK = kobzgqmelVu.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba16float",
        label: "uTkvmvVGAmvMM"
    });
    const FHsTXbxeXKSyPNi = ygKEcpEy.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.6279126485828586,
                g: 0.10047199718487465,
                b: 1.472913719017032,
                a: 1.14415152330351
            },
            loadOp: "load",
            storeOp: "store",
            view: AjCzlwHZUJiQqbvsdK,
            depthSlice: 27
        }],
        label: "UfXsMMrJsJFDV",
        maxDrawCount: 1586485585,
        occlusionQuerySet: vFwIZDAkPOXDYfT
    });
    const HDfHPwiAmmRjpuyya = TsCszGVRPXpbWbXpAgy.label
    const kalPhrQEoC = htUTRuryZkKYsLmWzb.label
    const tnIaUKfpqGwaKeouCG = ygKEcpEy.label
    const SPimzvQV = eYcQC.label
    const GQgmntUkolnAk = eYcQC.queue
    const dgmSKlmISwhkwxjM = MrBSCwvM.limits
    const OoITqlwIn = eYcQC.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: hgyLY
        },
        label: "wTDyU",
        layout: "auto"
    });
    const FWrrUmbsYYxMByQXrvak = LrQcmtZbefjPoHqMQDb.label
    const JuVjPRQBwAUe = vFwIZDAkPOXDYfT.type
    const EWbVs = CQlzBavhrGtDkCHyL.limits
    const BXUiPWkFRfQGniAlOR = lRnppHwGZumeoh.label
    const wWITWdGyUvhZtn = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "src",
                        srcFactor: "dst-alpha"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "dst",
                        srcFactor: "one"
                    }
                },
                format: "bgra8unorm-srgb",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.RED
            }]
        },
        label: "FPmxdG",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "cw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const UygPtYqfSJBTe = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "one-minus-constant",
                        srcFactor: "src-alpha-saturated"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rgba8unorm",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.RED | GPUColorWrite.ALL | GPUColorWrite.BLUE
            }]
        },
        label: "ZRpqFsDoOxd",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    htUTRuryZkKYsLmWzb.setPipeline(UygPtYqfSJBTe);
    const EcguNjvwbtzlFoCKCgmM = eYcQC.label
    const SKiVBI = AjCzlwHZUJiQqbvsdK.label
    const yURkJokWlPZidqVlDCM = MOvjqzScPeUkpNt.limits
    const LxlhBuMKCkbTb = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rg16float",
                writeMask: GPUColorWrite.GREEN
            }]
        },
        label: "AKGyEguESqXRVrfA",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const vfmobLmuTdYZC = spVbBFsxxIIOubHWo.label
    const BRTNqctnaUahSzvruDfR = teTvNVyPAmpdtdJAk.label
    htUTRuryZkKYsLmWzb.end();
    const yfrbsxEUd = LrQcmtZbefjPoHqMQDb.finish();
    GQgmntUkolnAk.submit([yfrbsxEUd]);
    GQgmntUkolnAk.writeBuffer(bIRWkRt, 133549680, hltZEAsTwEuvLjPVp);
    const VuPbxWqHrotLGYWIMEpN = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "subtract",
                        dstFactor: "one-minus-constant",
                        srcFactor: "src-alpha"
                    }
                },
                format: "rgba16float",
                writeMask: GPUColorWrite.GREEN | GPUColorWrite.ALL | GPUColorWrite.BLUE | GPUColorWrite.RED
            }]
        },
        label: "DfSjMaPkJvxCsFSbC",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    FHsTXbxeXKSyPNi.setPipeline(VuPbxWqHrotLGYWIMEpN);
    FHsTXbxeXKSyPNi.draw(5);
    const kZtBtwUarydVLx = vFwIZDAkPOXDYfT.count
    const gbqlaQVMXLgnROHDIS = eYcQC.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: hgyLY
        },
        label: "jePEwKc",
        layout: "auto"
    });
    const gIKsrfMapYJHKkbOXcl = GQgmntUkolnAk.label
    const PaqqNatWkWVZua = eYcQC.createCommandEncoder({
        label: "BJdbTenGJ"
    });
    const ledwgqAS = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "r8unorm",
        label: "srDiMwMDcBCZxjY",
        size: {
            width: 3568,
            height: 2718,
            depthOrArrayLayers: 11
        },
        mipLevelCount: 10,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,
        viewFormats: ["r8unorm"]
    });
    const uikXPMiQQYFdFd = ledwgqAS.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 2,
        format: "r8unorm",
        label: "zjsGvoYXgiZaQyQznedx"
    });
    const LQSpEHWHmhYdr = PaqqNatWkWVZua.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.0391061680025486,
                g: 1.5644275015920468,
                b: 1.2180884570224275,
                a: 0.25860602303158853
            },
            loadOp: "load",
            storeOp: "store",
            view: uikXPMiQQYFdFd
        }],
        label: "AuAiguAyVozfuISHn",
        maxDrawCount: 965025290,
        occlusionQuerySet: vFwIZDAkPOXDYfT
    });
    FHsTXbxeXKSyPNi.end();
    const WvUInRVRjTDYvnIaj = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "constant",
                        srcFactor: "one-minus-constant"
                    }
                },
                format: "r8unorm",
                writeMask: GPUColorWrite.BLUE | GPUColorWrite.GREEN
            }]
        },
        label: "UhNYorV",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    LQSpEHWHmhYdr.setPipeline(WvUInRVRjTDYvnIaj);
    LQSpEHWHmhYdr.draw(3);
    const Kqwed = CQlzBavhrGtDkCHyL.isFallbackAdapter
    const WoiQBGOcIVk = vFwIZDAkPOXDYfT.label
    const hoBHSVBdfudY = teTvNVyPAmpdtdJAk.label
    const henVeM = pGDSKgNJZXtFbRFekno.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "UyVHOxv"
    });
    const uGkfIB = eYcQC.createQuerySet({
        count: 873,
        label: "YCeThpXCHSgszkP",
        type: "occlusion"
    });
    const lraNrxPzU = CQlzBavhrGtDkCHyL.features
    const VkBqPDTtE = MOvjqzScPeUkpNt.limits
    const NweifYYtmLuCI = vFwIZDAkPOXDYfT.label
    const rtPOaMEGBvVBDyZNQxdr = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "dst-alpha",
                        srcFactor: "src-alpha-saturated"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "bgra8unorm",
                writeMask: GPUColorWrite.ALL
            }]
        },
        label: "SsVFT",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const ihWISB = eYcQC.createShaderModule({
        label: "compute",
        code: ycFSVHYdqatJ
    });
    const qLooUwBZTOoiTCFVUCM = MOvjqzScPeUkpNt.isFallbackAdapter
    const hDDAplCFFCiJYEXC = LQSpEHWHmhYdr.label
    const iSvLRyyXgAzQjvmSGOp = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgba8sint",
        label: "BhxnbpXtJftgSrjcnG",
        size: {
            width: 3965,
            height: 298,
            depthOrArrayLayers: 17
        },
        mipLevelCount: 2,
        usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rgba8sint"]
    });
    const xDUwB = CQlzBavhrGtDkCHyL.limits
    const RIOtW = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rgb10a2uint",
        label: "VineD",
        size: {
            width: 2928,
            height: 999,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rgb10a2uint"]
    });
    const tqzSUgTiPuwa = vFwIZDAkPOXDYfT.type
    const gtxSNJpTMRGSinjKO = uGkfIB.label
    const jYLwfbzLYDTWmtoQqdJ = eYcQC.createCommandEncoder({
        label: "SaqZmiM"
    });
    const MWlFkJFR = vFwIZDAkPOXDYfT.type
    const HZzTqmEdDIYUWnSsOc = GQgmntUkolnAk.label
    const inQHsTblpUznsPCAIco = pGDSKgNJZXtFbRFekno.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "IRqwFGGvPIsJchmlNb"
    });
    const GeuncUJVmpYnvfDUijyu = vFwIZDAkPOXDYfT.count
    const MILBwlNEjCXpJzWyx = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "bgra8unorm-srgb",
                writeMask: GPUColorWrite.BLUE
            }]
        },
        label: "pQUFkBWntkZADdsc",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "back",
            frontFace: "cw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const VUXaCNpXMEA = eYcQC.queue
    const CbOmarwfiewi = MrBSCwvM.limits
    const TpazgaLpHlSBjMHwfv = DlKugCZdVvt.label
    const cDpHhZQN = jYLwfbzLYDTWmtoQqdJ.label
    const UahqGqIcHmGoIiOAaSmo = VUXaCNpXMEA.label
    IvDVRq.writeBuffer(bIRWkRt, 5012252, LFDuUylmxoo);
    const QQWjClTqsDtjt = uGkfIB.label
    const XomTdI = vFwIZDAkPOXDYfT.type
    LQSpEHWHmhYdr.setPipeline(WvUInRVRjTDYvnIaj);
    LQSpEHWHmhYdr.draw(1);
    const FSEpTiDlSNs = uGkfIB.count
    const bQEAm = eYcQC.createQuerySet({
        count: 2573,
        label: "mSRZZpsFClhEotM",
        type: "occlusion"
    });
    const oienKACBmEFeKFGMh = navigator.gpu.wgslLanguageFeatures
    const hPAYOeda = jYLwfbzLYDTWmtoQqdJ.finish();
    lRnppHwGZumeoh.submit([hPAYOeda]);
    const hwxdswwJgRxmbczDNPB = uikXPMiQQYFdFd.label
    const NDPCXhlaWQXCKV = eYcQC.createCommandEncoder({
        label: "kbtLIxyDBONsOJXNW"
    });
    const dGfyXGgGhyO = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "constant",
                        srcFactor: "one-minus-src"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "one-minus-dst-alpha",
                        srcFactor: "one-minus-src-alpha"
                    }
                },
                format: "r8unorm",
                writeMask: GPUColorWrite.BLUE
            }]
        },
        label: "KWFaWcdTjOXDzHqEaMj",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const dLCCl = ygKEcpEy.label
    const pnEIqTXeEbWjJmIzt = eYcQC.createCommandEncoder({
        label: "rxlUTl"
    });
    const uSzQGGMZiNQT = CQlzBavhrGtDkCHyL.isFallbackAdapter
    const WaSWwFFHRnJcfKND = MrBSCwvM.info
    const QinckEWSHuASd = MrBSCwvM.info
    const wyuKQq = eYcQC.label
    const lPqhCbA = GQgmntUkolnAk.label
    const qGxkRHMzzNdbBVsePQD = bQEAm.count
    LQSpEHWHmhYdr.setPipeline(WvUInRVRjTDYvnIaj);
    const jMJfKQXHdn = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rgba16float",
        label: "TeDtSFMRQDpcPczrWr",
        size: {
            width: 2958,
            height: 2219,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba16float"]
    });
    const bXAfUsjEweKDgyEbGTYh = jMJfKQXHdn.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba16float",
        label: "NxSihYKGXevJsjqrlOAB"
    });
    const dzbxICQZhwdIbCBgBkAJ = pnEIqTXeEbWjJmIzt.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.669331568149083,
                g: 0.6453460091688425,
                b: 0.6886246297652716,
                a: 1.0048903204262627
            },
            loadOp: "load",
            storeOp: "store",
            view: bXAfUsjEweKDgyEbGTYh
        }],
        label: "cTQlOkp",
        maxDrawCount: 664216585,
        occlusionQuerySet: uGkfIB
    });
    const eLSQbAS = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "one-minus-dst",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "dst",
                        srcFactor: "src"
                    }
                },
                format: "rg16float",
                writeMask: GPUColorWrite.RED
            }]
        },
        label: "bWmRciWgdiQOFYlMmf",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const WLREaXg = MrBSCwvM.features
    const maCfdTSvgIuECz = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r8unorm",
        label: "PjXIwwdEv",
        size: {
            width: 364,
            height: 494,
            depthOrArrayLayers: 6
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC,
        viewFormats: ["r8unorm"]
    });
    const lBwsMrLBFgtDvCzEjcOQ = maCfdTSvgIuECz.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r8unorm",
        label: "PnCjRWpcFcwbsuQE"
    });
    const GhmZAeHGW = ygKEcpEy.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.4986495695065041,
                g: 0.17788634346855647,
                b: 0.9922719507818671,
                a: 1.7873968472936903
            },
            loadOp: "load",
            storeOp: "store",
            view: lBwsMrLBFgtDvCzEjcOQ,
            depthSlice: 3
        }],
        label: "ZRjrWAbsFFpx",
        maxDrawCount: 2623607577,
        occlusionQuerySet: uGkfIB
    });
    const JVEWG = eYcQC.createQuerySet({
        count: 365,
        label: "oJkvHiFT",
        type: "occlusion"
    });
    const YsLhU = eYcQC.createShaderModule({
        label: "compute",
        code: dWPkJoNZF
    });
    const yoSMiVxyqvKTLJLU = eYcQC.queue
    const EaDdBzuOUBDCC = eYcQC.label
    LQSpEHWHmhYdr.setPipeline(WvUInRVRjTDYvnIaj);
    const IXUfmnfwMSyxcOcUrM = eYcQC.label
    const QOaIj = dzbxICQZhwdIbCBgBkAJ.label
    const OpkQF = eYcQC.features
    dzbxICQZhwdIbCBgBkAJ.end();
    const QqHErLThA = vFwIZDAkPOXDYfT.count
    const vgxeiyAOmMA = navigator.gpu.wgslLanguageFeatures
    const NXgiV = MrBSCwvM.limits
    const jnCfYcrBEFRwG = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "one-minus-dst-alpha",
                        srcFactor: "src-alpha"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "src",
                        srcFactor: "one-minus-src"
                    }
                },
                format: "rg16float",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.GREEN | GPUColorWrite.RED
            }]
        },
        label: "OMnOyJwNLV",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const FxtTeCouWnnKI = vFwIZDAkPOXDYfT.label
    const yslKVyRSHlAL = MrBSCwvM.features
    const zKXTGzekWddkwlxGBIAd = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg8uint",
        label: "EbNxOb",
        size: {
            width: 242,
            height: 306,
            depthOrArrayLayers: 30
        },
        mipLevelCount: 4,
        usage: GPUTextureUsage.COPY_SRC,
        viewFormats: ["rg8uint"]
    });
    const cIisjUiWeDg = eYcQC.createTexture({
        dimension: "1d",
        sampleCount: 1,
        format: "rgba32sint",
        label: "RnJpj",
        size: {
            width: 2987,
            height: 1,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST | GPUTextureUsage.STORAGE_BINDING,
        viewFormats: ["rgba32sint"]
    });
    const MmkpJELzyhGiKXh = MOvjqzScPeUkpNt.info
    const hkWzoOprVUx = eYcQC.createBuffer({
        label: "axooILvnqTCmUNepAtDL",
        mappedAtCreation: false,
        size: 134070972,
        usage: GPUBufferUsage.VERTEX | GPUBufferUsage.INDEX | GPUBufferUsage.INDIRECT | GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST
    });
    LQSpEHWHmhYdr.setVertexBuffer(0, hkWzoOprVUx);
    const IqhjohdcgMhkWk = eYcQC.queue
    const BNyXFxgqHfq = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm-srgb",
        label: "fvkMLWEgsfgCZwbgBw",
        size: {
            width: 1889,
            height: 1019,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["bgra8unorm"]
    });
    const ORYIVBnCIZG = eYcQC.label
    const hePvWjDsgaXEjUbpHasY = eYcQC.createQuerySet({
        count: 275,
        label: "SXLzdBQjhi",
        type: "occlusion"
    });
    VUXaCNpXMEA.writeBuffer(hkWzoOprVUx, 51705616, yyohBTRFUvWqUjj);
    const FDdiBF = eYcQC.limits
    LQSpEHWHmhYdr.end();
    const KSHHcyG = PaqqNatWkWVZua.finish();
    const FaSVsTkIS = VUXaCNpXMEA.label
    const NnDzeOLsKN = uGkfIB.label
    const ZbxEysSlJj = eYcQC.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: hgyLY
        },
        label: "gUClLmctw",
        layout: "auto"
    });
    const wPyrYZJlDSsBpjPi = pnEIqTXeEbWjJmIzt.label
    const kWjEoVIuBuIRmCpmqFsb = eYcQC.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: YsLhU
        },
        label: "flBKvDBknILZEpZCGR",
        layout: "auto"
    });
    const rpYPgVxaoAwxl = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "src-alpha-saturated",
                        srcFactor: "one-minus-src"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "dst-alpha",
                        srcFactor: "dst-alpha"
                    }
                },
                format: "rgb10a2unorm",
                writeMask: GPUColorWrite.ALL | GPUColorWrite.RED | GPUColorWrite.BLUE
            }]
        },
        label: "aQgMjNwYQccNt",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "back",
            frontFace: "cw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const kxPZFKeybmJFmSx = navigator.gpu.wgslLanguageFeatures
    GhmZAeHGW.setPipeline(WvUInRVRjTDYvnIaj);
    const oRrlR = eYcQC.createQuerySet({
        count: 865,
        label: "fHPSNU",
        type: "occlusion"
    });
    const SzhMQzvuW = uGkfIB.label
    const WbBXFquGCyrDbPfR = eYcQC.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: hgyLY
        },
        label: "KEIQU",
        layout: "auto"
    });
    const kIpodEIDdIz = oRrlR.type
    const HlAxHSy = GhmZAeHGW.label
    const xBsmsvpoJjdIEzQ = oRrlR.label
    const uFwfPaOSVRViPC = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm-srgb",
        label: "yRyYfI",
        size: {
            width: 134,
            height: 777,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["bgra8unorm-srgb"]
    });
    const hjkFEQPAAZR = uFwfPaOSVRViPC.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm-srgb",
        label: "izGvwIkFRYbUvuDGk"
    });
    const QevCD = pnEIqTXeEbWjJmIzt.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.3885761397029248,
                g: 0.37190472572004984,
                b: 0.26116969863556805,
                a: 1.0036639890358832
            },
            loadOp: "load",
            storeOp: "discard",
            view: hjkFEQPAAZR
        }],
        label: "bAqHEsfZOMhnxEpdc",
        maxDrawCount: 4188790109,
        occlusionQuerySet: oRrlR
    });
    const ouVOpxAlzYSdvC = CQlzBavhrGtDkCHyL.features
    const pxkWZsqrXgcf = eYcQC.createCommandEncoder({
        label: "uqffdVaSREueHNG"
    });
    const lyRPxZxlswyBGFyUf = await navigator.gpu.getPreferredCanvasFormat();
    const dYcJVWsDMmEFvRP = eYcQC.label
    const vxGzZdqkFYCBNzS = MOvjqzScPeUkpNt.limits
    const EdPYEtHxHSLXpALlhVeM = eYcQC.queue
    const HyAOEgZ = eYcQC.features
    const OweIRFlxnan = IvDVRq.label
    const dDgCctY = MOvjqzScPeUkpNt.isFallbackAdapter
    const cAfeYGEIf = eYcQC.createTexture({
        dimension: "1d",
        sampleCount: 1,
        format: "rgba8unorm-srgb",
        label: "blElZnCwhm",
        size: {
            width: 3994,
            height: 1,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgba8unorm-srgb"]
    });
    VUXaCNpXMEA.writeBuffer(hkWzoOprVUx, 118317380, sNfxKbhTxzticu);
    const IMJig = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "DVyDde",
        size: {
            width: 3107,
            height: 3296,
            depthOrArrayLayers: 39
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rg8unorm"]
    });
    const tKHseDjuArKYRdvjIUYn = IMJig.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg8unorm",
        label: "wtocYtyLZ"
    });
    const KCZzwVcJO = pxkWZsqrXgcf.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.3986872620857906,
                g: 1.3989593812605123,
                b: 1.215450786768236,
                a: 1.853630953026599
            },
            loadOp: "clear",
            storeOp: "discard",
            view: tKHseDjuArKYRdvjIUYn
        }],
        label: "zIJuWHce",
        maxDrawCount: 1234134962,
        occlusionQuerySet: uGkfIB
    });
    VUXaCNpXMEA.writeBuffer(bIRWkRt, 66300968, ipwjXXjskNxaClXqoU);
    const FSNcpXqLYYI = NDPCXhlaWQXCKV.finish();
    const YyCktuFUHtsFYaLouZB = eYcQC.queue
    GQgmntUkolnAk.submit([KSHHcyG]);
    const rjtVHTADdJRapQpzn = lRnppHwGZumeoh.label
    const pjpjXlVtHHp = eYcQC.createShaderModule({
        label: "fragment",
        code: PTaKCdsUzuUyro
    });
    const SuHIBSXYjf = QevCD.label
    QevCD.setPipeline(wWITWdGyUvhZtn);
    const NxDSozpgspR = CQlzBavhrGtDkCHyL.isFallbackAdapter
    KCZzwVcJO.end();
    const KJAAHihWGmCIO = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const PYdsbZICKJrYAXAUX = uGkfIB.label
    const OJzhJ = eYcQC.createComputePipeline({
        compute: {
            entryPoint: "main",
            module: YsLhU
        },
        label: "JPuzMEw",
        layout: "auto"
    });
    const aMSxkLX = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm-srgb",
        label: "cHBHWqWTUtBQjD",
        size: {
            width: 815,
            height: 99,
            depthOrArrayLayers: 59
        },
        mipLevelCount: 9,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const wcMeneZnq = eYcQC.limits
    const lKPzPfnXvGnFcsapjPH = eYcQC.features
    const XjHzbqFmQvjyRfAb = eYcQC.label
    const IASAVwmSAqdnigLwew = MOvjqzScPeUkpNt.info
    const EzcdRoXpmAzm = eYcQC.createShaderModule({
        label: "fragment",
        code: kegdOkUTTyV
    });
    YyCktuFUHtsFYaLouZB.writeBuffer(bIRWkRt, 56890596, MqKyl);
    const CCZOwxxKkqKLMtYjtqS = MOvjqzScPeUkpNt.isFallbackAdapter
    const MlPMBrkxw = pxkWZsqrXgcf.label
    const jiidzvKf = eYcQC.createShaderModule({
        label: "vertex",
        code: HwLhxbpKapMd
    });
    const eDyoedxkuE = eYcQC.limits
    const rHLRDOQxiwkh = MrBSCwvM.limits
    QevCD.end();
    const PYxelfVoMs = await navigator.gpu.getPreferredCanvasFormat();
    const XMDwnWEEnNVYJrkpUFwu = hePvWjDsgaXEjUbpHasY.label
    const yrDAUx = eYcQC.createQuerySet({
        count: 222,
        label: "gdafGZjvkbnZmKf",
        type: "occlusion"
    });
    const utwhw = EdPYEtHxHSLXpALlhVeM.label
    const tnfHcNg = navigator.gpu.wgslLanguageFeatures
    const WjitLVIt = eYcQC.createShaderModule({
        label: "fragment",
        code: GzTwByjxOQhzAJKngplt
    });
    const iyQeJtPTL = pxkWZsqrXgcf.label
    GhmZAeHGW.setVertexBuffer(0, hkWzoOprVUx);
    const TBIHuWhBrEXAJsfDZB = eYcQC.createShaderModule({
        label: "compute",
        code: cWjbYdvOw
    });
    const nABwNPoYWyOYQUsxh = uGkfIB.label
    const XfxJXyBQCXYNMjTuhwaB = eYcQC.queue
    GhmZAeHGW.setPipeline(dGfyXGgGhyO);
    const WcGOzx = eYcQC.createShaderModule({
        label: "compute",
        code: efaEVKEI
    });
    const GxUNRMngBgdMYOuyGV = Djtrd.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg16float",
        label: "weRyjFe"
    });
    const miAaIxTpVUgYpJAYmXiM = navigator.gpu.wgslLanguageFeatures
    XfxJXyBQCXYNMjTuhwaB.submit([FSNcpXqLYYI]);
    const IOskibRJngwmZkclHoK = eYcQC.createQuerySet({
        count: 3265,
        label: "rSilYpPg",
        type: "occlusion"
    });
    const yeaKjaz = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "bgra8unorm",
        label: "LWQzL",
        size: {
            width: 2411,
            height: 2435,
            depthOrArrayLayers: 43
        },
        mipLevelCount: 12,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["bgra8unorm"]
    });
    const nZnLIaNUhtTuxyqwpe = yeaKjaz.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 9,
        format: "bgra8unorm",
        label: "mlrKin"
    });
    const fXyYkz = pnEIqTXeEbWjJmIzt.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.17599760029673317,
                g: 0.011848419530308352,
                b: 1.0972689471236328,
                a: 1.4096989267801634
            },
            loadOp: "load",
            storeOp: "store",
            view: nZnLIaNUhtTuxyqwpe
        }],
        label: "dmUTSyvYXR",
        maxDrawCount: 1328509771,
        occlusionQuerySet: JVEWG
    });
    const IxeqnpoyqxLiPTDNtarc = IvDVRq.label
    const qfDnJmxhgovYGK = KJAAHihWGmCIO.info
    const DAYcUSvV = eYcQC.createShaderModule({
        label: "compute",
        code: VwnVuIWazrOoAxDwf
    });
    const AWyHBJAoZmPuiNbCM = await navigator.gpu.getPreferredCanvasFormat();
    const lfiALjra = IMJig.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 4,
        baseMipLevel: 1,
        format: "rg8unorm",
        label: "LJZprOBRC"
    });
    const ceQfxgjsTSzZJkNeJH = eYcQC.createBuffer({
        label: "YxqJqwAfofjXrv",
        mappedAtCreation: false,
        size: 53973840,
        usage: GPUBufferUsage.MAP_WRITE
    });
    fXyYkz.setPipeline(loxUHMAHwYr);
    const zuXWuLqvcIwL = GhmZAeHGW.label
    const yPngbowIF = vFwIZDAkPOXDYfT.type
    const VFHDVPMlFaFlQkaRzDTR = vFwIZDAkPOXDYfT.type
    GhmZAeHGW.setVertexBuffer(0, hkWzoOprVUx);
    GhmZAeHGW.draw(3);
    const pIJHQTfP = hjkFEQPAAZR.label
    GhmZAeHGW.setPipeline(WvUInRVRjTDYvnIaj);
    const xZfEahGIEXX = CQlzBavhrGtDkCHyL.info
    const OtfPcwlYYf = eYcQC.createCommandEncoder({
        label: "NXjZhO"
    });
    const bjPmBfoqQGM = MrBSCwvM.features
    const onGbhiFtutm = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r16float",
        label: "FUYjftcGSmrBITUX",
        size: {
            width: 160,
            height: 306,
            depthOrArrayLayers: 10
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.COPY_SRC,
        viewFormats: ["r16float"]
    });
    const ptkgIPXRCqRCsSy = MOvjqzScPeUkpNt.features
    GhmZAeHGW.draw(5);
    const OZqvsCFfGT = eYcQC.label
    const vmXOmpsObDVDh = MrBSCwvM.limits
    fXyYkz.setVertexBuffer(0, hkWzoOprVUx);
    const RaxDbfe = fXyYkz.label
    const hzIGuDxfXIgX = navigator.gpu.wgslLanguageFeatures
    IqhjohdcgMhkWk.writeBuffer(bIRWkRt, 14987284, FtaaVkIjouZxaNIDtNj);
    const xcsZKL = pxkWZsqrXgcf.label
    const SHiGhmlVnrRIyjQBcFAd = CQlzBavhrGtDkCHyL.info
    const icXHxxRPLqkzCBgVSRh = eYcQC.createQuerySet({
        count: 2228,
        label: "VwZCWuJbW",
        type: "occlusion"
    });
    const lJcLJAEWA = navigator.gpu.wgslLanguageFeatures
    const NOTZmbNroKwZqQqeUz = eYcQC.createShaderModule({
        label: "compute",
        code: wiskV
    });
    const ImadzSAsemeEbO = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: EzcdRoXpmAzm,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "r16float",
                writeMask: GPUColorWrite.BLUE | GPUColorWrite.GREEN | GPUColorWrite.ALL | GPUColorWrite.RED
            }]
        },
        label: "PIkEMe",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "triangle-strip"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const pPwThLdMQyMAnyn = navigator.gpu.wgslLanguageFeatures
    const NOPaaCfguVGXz = NheWIPrYZJGLd.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 8,
        baseMipLevel: 1,
        format: "rgba8unorm",
        label: "ApkJEXAbe"
    });
    const YFFkrk = eYcQC.limits
    const ZUCpAjQKCzTOnFXR = KJAAHihWGmCIO.isFallbackAdapter
    const DcEIHa = eYcQC.createShaderModule({
        label: "compute",
        code: sfEBQvGSwAqVuTK
    });
    const rvbfNCTKcHcCVdLUIHEr = ledwgqAS.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 10,
        baseArrayLayer: 0,
        mipLevelCount: 3,
        baseMipLevel: 2,
        format: "r8unorm",
        label: "TzFoEgporNmORnLRmaYu"
    });
    const YVdxOyPdzkCQWj = MrBSCwvM.limits
    const yLfdsGXHar = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "bbzvCW",
        size: {
            width: 720,
            height: 163,
            depthOrArrayLayers: 52
        },
        mipLevelCount: 4,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rg8unorm"]
    });
    const zuGqtyORvFoNnJheX = yLfdsGXHar.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 3,
        format: "rg8unorm",
        label: "nVRxWnPRFOcuPHmdGv"
    });
    const wQXAqwxDwVKaazTd = pxkWZsqrXgcf.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.2475995937800184,
                g: 1.2986534980828073,
                b: 0.4799820944649107,
                a: 1.22034984862312
            },
            loadOp: "load",
            storeOp: "store",
            view: zuGqtyORvFoNnJheX,
            depthSlice: 2
        }],
        label: "bycORtgDzdWIrIOhhj",
        maxDrawCount: 3209924163,
        occlusionQuerySet: hePvWjDsgaXEjUbpHasY
    });
    const PxnoqgfweqmSpV = eYcQC.createShaderModule({
        label: "compute",
        code: rbzLJkPMqgJ
    });
    const KBYCbMnD = eYcQC.features
    const syOONwnSxxQvl = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: WjitLVIt,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rg8unorm",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.GREEN | GPUColorWrite.RED
            }]
        },
        label: "nGcMOslntcwPsPtLmQ",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "back",
            frontFace: "cw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: jiidzvKf
        }
    });
    wQXAqwxDwVKaazTd.setPipeline(syOONwnSxxQvl);
    EdPYEtHxHSLXpALlhVeM.writeBuffer(hkWzoOprVUx, 40832156, GqVZFSWJgtLSBjc);
    fXyYkz.setPipeline(loxUHMAHwYr);
    const LwoItwcDaBweifpKlkpp = CQlzBavhrGtDkCHyL.isFallbackAdapter
    fXyYkz.draw(1);
    fXyYkz.end();
    const wmiskJHgmLpv = pnEIqTXeEbWjJmIzt.finish();
    const RuHhrtsyVy = eYcQC.createQuerySet({
        count: 3932,
        label: "JkHBdxeANLNEncTjaMI",
        type: "occlusion"
    });
    const WzSwRwmzIULyhGMK = CQlzBavhrGtDkCHyL.limits
    const EygiiqdF = eYcQC.createBuffer({
        label: "AKbwgW",
        mappedAtCreation: false,
        size: 76748888,
        usage: GPUBufferUsage.STORAGE
    });
    const NwRCariOcAWQxHKRoZK = eYcQC.features
    const BlTWChk = await navigator.gpu.getPreferredCanvasFormat();
    const JIIxcFQO = GhmZAeHGW.label
    wQXAqwxDwVKaazTd.draw(5);
    const rAvjKjVLP = GhmZAeHGW.label
    wQXAqwxDwVKaazTd.end();
    const fOJJwawtZXPsaHPBjaPG = pxkWZsqrXgcf.finish();
    GhmZAeHGW.draw(7);
    const ZOubMzMb = eYcQC.createShaderModule({
        label: "vertex",
        code: PAxhQBXTNTALQydpX
    });
    const wNnCRgqVdQsSz = CQlzBavhrGtDkCHyL.limits
    const FkcsKWl = CQlzBavhrGtDkCHyL.info
    GhmZAeHGW.end();
    const nbgzWVlhjwpnU = ygKEcpEy.finish();
    const pGRTKirnY = eYcQC.createBuffer({
        label: "PvSGgVVgBgH",
        mappedAtCreation: true,
        size: 166612836,
        usage: GPUBufferUsage.COPY_DST
    });
    lRnppHwGZumeoh.writeBuffer(bIRWkRt, 79556540, srgGAyJsJiod);
    const Ncuztxp = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "r8unorm",
        label: "RzdkMcIyokiV",
        size: {
            width: 1263,
            height: 3513,
            depthOrArrayLayers: 36
        },
        mipLevelCount: 6,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.COPY_SRC,
        viewFormats: ["r8unorm"]
    });
    const BDWjHy = Ncuztxp.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 5,
        format: "r8unorm",
        label: "LLOEQhEuUg"
    });
    const CljYovxnBEBSTDRq = OtfPcwlYYf.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.497722523142151,
                g: 1.2940876418227902,
                b: 1.5939005203936791,
                a: 1.7714580657723356
            },
            loadOp: "load",
            storeOp: "discard",
            view: BDWjHy
        }],
        label: "lxmdNfLykOOEeGOc",
        maxDrawCount: 2794189484,
        occlusionQuerySet: hePvWjDsgaXEjUbpHasY
    });
    CljYovxnBEBSTDRq.setPipeline(dGfyXGgGhyO);
    const YxhhGW = MrBSCwvM.features
    const gqXcavSgrAxcMk = eYcQC.createBuffer({
        label: "WmrjkKiFFiCJxqhuADh",
        mappedAtCreation: false,
        size: 132818864,
        usage: GPUBufferUsage.STORAGE | GPUBufferUsage.VERTEX | GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.COPY_DST | GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_SRC
    });
    VUXaCNpXMEA.writeBuffer(gqXcavSgrAxcMk, 30548056, SoeWEEHeuVuRdoaZzv);
    CljYovxnBEBSTDRq.end();
    const pjwJNhyUWW = OtfPcwlYYf.finish();
    const fDoCodhPPbegDuaTGDB = eYcQC.createCommandEncoder({
        label: "qoZUGmQyLXPnnckU"
    });
    const xjIXUXEPujtnFEyH = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg8unorm",
        label: "XrgtetZknoFWi",
        size: {
            width: 961,
            height: 538,
            depthOrArrayLayers: 21
        },
        mipLevelCount: 2,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rg8unorm"]
    });
    const AfkWocnGkOOEfr = xjIXUXEPujtnFEyH.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg8unorm",
        label: "FxZXCf"
    });
    const lvkPHHNgLpNoufIlNXdK = fDoCodhPPbegDuaTGDB.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.9577241892981432,
                g: 1.0646529849429605,
                b: 0.017601670280715354,
                a: 1.1936920005439595
            },
            loadOp: "load",
            storeOp: "discard",
            view: AfkWocnGkOOEfr,
            depthSlice: 15
        }],
        label: "PDNnwVQ",
        maxDrawCount: 3435022282,
        occlusionQuerySet: icXHxxRPLqkzCBgVSRh
    });
    lvkPHHNgLpNoufIlNXdK.setPipeline(syOONwnSxxQvl);
    lvkPHHNgLpNoufIlNXdK.draw(9);
    const WMZdjRJRGBWBkeuY = eYcQC.label
    const WwjtgoDp = eYcQC.createQuerySet({
        count: 694,
        label: "YrwSPbUSCe",
        type: "occlusion"
    });
    const gMVoWoOHpyEflLQZazp = onGbhiFtutm.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r16float",
        label: "RBGRdKwvoilVMi"
    });
    lvkPHHNgLpNoufIlNXdK.setPipeline(syOONwnSxxQvl);
    const JURKmyFNVkqjMMNs = eYcQC.createCommandEncoder({
        label: "FUmqJbl"
    });
    const TAyDUCltuQxYyqKs = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rg8unorm",
        label: "aDkLYVKCrCjvMFeIEI",
        size: {
            width: 3670,
            height: 2553,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rg8unorm"]
    });
    const FYLnwLnIeBGJYo = TAyDUCltuQxYyqKs.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg8unorm",
        label: "pIgyOPygES"
    });
    const IcHGKU = JURKmyFNVkqjMMNs.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.9392270534085452,
                g: 1.9188097785264777,
                b: 1.5425801346911292,
                a: 0.12265919936731162
            },
            loadOp: "load",
            storeOp: "store",
            view: FYLnwLnIeBGJYo
        }],
        label: "WwqCpQu",
        maxDrawCount: 3877686895,
        occlusionQuerySet: JVEWG
    });
    const usRnfmPCwdOIBwSL = eYcQC.createShaderModule({
        label: "compute",
        code: wlxRBWojFpK
    });
    const Yebahacg = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    lvkPHHNgLpNoufIlNXdK.end();
    const UjrTVbxG = fDoCodhPPbegDuaTGDB.finish();
    const WdFbBDYEt = MrBSCwvM.isFallbackAdapter
    const klwsPuNDdU = navigator.gpu.wgslLanguageFeatures
    const hJUbxI = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: pjpjXlVtHHp,
            targets: [{
                blend: {
                    alpha: {
                        operation: "add",
                        dstFactor: "one-minus-constant",
                        srcFactor: "constant"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "dst",
                        srcFactor: "src-alpha"
                    }
                },
                format: "rg16float",
                writeMask: GPUColorWrite.RED
            }]
        },
        label: "sDNBiDf",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "cw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: ZOubMzMb
        }
    });
    IcHGKU.setVertexBuffer(0, hkWzoOprVUx);
    IcHGKU.end();
    const SJHXIFKTxQDgXxyUa = GQgmntUkolnAk.label
    const WoGsuSkVKt = MOvjqzScPeUkpNt.isFallbackAdapter
    const vRNuKAe = eYcQC.features
    const HJGdojfCZHbq = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const TESOaGownTr = VUXaCNpXMEA.label
    const enAWYkfqqAfKLtPRrXe = eYcQC.createShaderModule({
        label: "vertex",
        code: vkTonIbkolzfbQe
    });
    const ikrgFwGH = eYcQC.queue
    const lnKCnRXQI = HJGdojfCZHbq.isFallbackAdapter
    const MzPFkLCJaITAZlgNue = await navigator.gpu.getPreferredCanvasFormat();
    const LhgfgbXKwF = MrBSCwvM.features
    const hSQzGlcvMqnn = navigator.gpu.wgslLanguageFeatures
    const AHcGTkxbiO = cIisjUiWeDg.createView({
        aspect: "all",
        dimension: "1d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba32sint",
        label: "sPMqdZzlNnwkZczq"
    });
    IvDVRq.submit([fOJJwawtZXPsaHPBjaPG]);
    const aiGjQqGdoRb = eYcQC.createQuerySet({
        count: 1641,
        label: "CJwaRHEIWYYInQDqp",
        type: "occlusion"
    });
    const DiuUPxNxyOmufihJKUd = eYcQC.createTexture({
        dimension: "1d",
        sampleCount: 1,
        format: "bgra8unorm-srgb",
        label: "EjiDuLrPGa",
        size: {
            width: 662,
            height: 1,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC,
        viewFormats: ["bgra8unorm"]
    });
    const sSzxoOciHV = JVEWG.label
    const jUZPhaiaO = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: EzcdRoXpmAzm,
            targets: [{
                blend: {
                    alpha: {
                        operation: "add",
                        dstFactor: "one-minus-src-alpha",
                        srcFactor: "one-minus-dst-alpha"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "dst",
                        srcFactor: "src"
                    }
                },
                format: "rgb10a2unorm",
                writeMask: GPUColorWrite.RED | GPUColorWrite.GREEN | GPUColorWrite.ALPHA | GPUColorWrite.ALL
            }]
        },
        label: "hJDuNOG",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "none",
            frontFace: "ccw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    VUXaCNpXMEA.submit([wmiskJHgmLpv]);
    const RitURlJBbMOry = eYcQC.label
    const txKCySO = eYcQC.createCommandEncoder({
        label: "sCEBMBqUgoRnPFsuB"
    });
    const IvtecARSmmPfTZ = await navigator.gpu.getPreferredCanvasFormat();
    const uQrQA = eYcQC.limits
    const CydutLO = eYcQC.limits
    const lMuEJX = await navigator.gpu.getPreferredCanvasFormat();
    const PypdPV = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rg8unorm",
        label: "UfIwFBNGCyKTAumLHocu",
        size: {
            width: 4032,
            height: 2059,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rg8unorm"]
    });
    const byoysCnDpHubQROx = PypdPV.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg8unorm",
        label: "pTPoC"
    });
    const NJqdsYWajgydHaXVI = JURKmyFNVkqjMMNs.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.14967128172162192,
                g: 0.3302321178112788,
                b: 0.6433836223138085,
                a: 0.19136118784261313
            },
            loadOp: "clear",
            storeOp: "discard",
            view: byoysCnDpHubQROx
        }],
        label: "MlftouMCfrpaEQllPsF",
        maxDrawCount: 3784069114,
        occlusionQuerySet: RuHhrtsyVy
    });
    NJqdsYWajgydHaXVI.setVertexBuffer(0, gqXcavSgrAxcMk);
    IvDVRq.submit([nbgzWVlhjwpnU]);
    EdPYEtHxHSLXpALlhVeM.submit([UjrTVbxG]);
    const aqaVEyAnE = MOvjqzScPeUkpNt.limits
    const isUzaSnZEamhMGuYd = eYcQC.features
    EdPYEtHxHSLXpALlhVeM.writeBuffer(bIRWkRt, 5264988, vVgvSMNYdYvIZetr);
    const JzPPSwtAcAmm = eYcQC.label
    const eADiaGBmTmaNr = txKCySO.label
    const SDsRXESOLGOdnHExAi = HJGdojfCZHbq.isFallbackAdapter
    const QtMNeCNNeplZDF = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: EzcdRoXpmAzm,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "subtract",
                        dstFactor: "one-minus-src",
                        srcFactor: "one-minus-dst-alpha"
                    }
                },
                format: "rg8unorm",
                writeMask: GPUColorWrite.ALPHA
            }]
        },
        label: "zrEzAltZhy",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: ZOubMzMb
        }
    });
    NJqdsYWajgydHaXVI.setPipeline(QtMNeCNNeplZDF);
    NJqdsYWajgydHaXVI.draw(6);
    const OgXXkai = txKCySO.finish();
    const KvZJzvoSKdQqyJ = eYcQC.createCommandEncoder({
        label: "YVdyPnVEFcFaUY"
    });
    const yOoTdnezCDyyWeG = lRnppHwGZumeoh.label
    const zPQLcVRFORhEb = hePvWjDsgaXEjUbpHasY.label
    const OckKNIlgTJZnIIthibg = MrBSCwvM.isFallbackAdapter
    const wIvOOQddsPILEwbv = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "bgra8unorm",
        label: "nKmTeu",
        size: {
            width: 1305,
            height: 4044,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["bgra8unorm"]
    });
    const HilGOkbvK = wIvOOQddsPILEwbv.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "kYnZiWoZB"
    });
    const wDGpJ = KvZJzvoSKdQqyJ.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.1409835012488156,
                g: 0.8005418616790823,
                b: 1.7480055248122204,
                a: 1.6763552111525533
            },
            loadOp: "clear",
            storeOp: "discard",
            view: HilGOkbvK
        }],
        label: "BzotjCgEv",
        maxDrawCount: 2363095084,
        occlusionQuerySet: vFwIZDAkPOXDYfT
    });
    const ygeLm = CQlzBavhrGtDkCHyL.isFallbackAdapter
    const xTxqTtqFYTJyfrFyfRZ = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const nMurFaNootEldZNw = bQEAm.type
    wDGpJ.end();
    const jYFqkFbCT = KvZJzvoSKdQqyJ.finish();
    const IudvaFIjv = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const JChdR = NJqdsYWajgydHaXVI.label
    const zLVRwOaxFwXLddCZb = RuHhrtsyVy.label
    const xyeUfvIXDkLzFiuexedF = eYcQC.queue
    const iykgdaOSt = HJGdojfCZHbq.limits
    const jtKbiQZpa = NJqdsYWajgydHaXVI.label
    NJqdsYWajgydHaXVI.end();
    const fMbRXXwHLWuGZDzBp = eYcQC.label
    const txSXajEJep = JURKmyFNVkqjMMNs.label
    const eCzDZKwsreJikecCCerb = bQEAm.label
    const enMAcFsWYi = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba8unorm",
        label: "JqVQmi",
        size: {
            width: 808,
            height: 726,
            depthOrArrayLayers: 14
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const xlZQYdBXVahP = enMAcFsWYi.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba8unorm-srgb",
        label: "bJzAHRMdRB"
    });
    const hEYfdLBamn = JURKmyFNVkqjMMNs.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.26778932331264294,
                g: 0.38171070026810816,
                b: 1.0321454366365133,
                a: 1.0894115269527413
            },
            loadOp: "clear",
            storeOp: "discard",
            view: xlZQYdBXVahP,
            depthSlice: 11
        }],
        label: "LGVHUSiXjFtsM",
        maxDrawCount: 3039887663,
        occlusionQuerySet: RuHhrtsyVy
    });
    const IhGJPBJjrmwbdAGGS = hEYfdLBamn.label
    const MywEMdAq = eYcQC.createQuerySet({
        count: 73,
        label: "dYYQY",
        type: "occlusion"
    });
    const nEJyEbMaYTFCYi = navigator.gpu.wgslLanguageFeatures
    const nDMfpNwqXdqAttUOFmc = eYcQC.createShaderModule({
        label: "fragment",
        code: EwfRVG
    });
    const tkBdTtpOsKScTtmKkJK = IMJig.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 5,
        baseMipLevel: 0,
        format: "rg8unorm",
        label: "WAymYyhkqsHmd"
    });
    hEYfdLBamn.end();
    const nQyKFhsiFN = MOvjqzScPeUkpNt.limits
    const xbGhZbUrfdO = eYcQC.queue
    const KdPBGQrLAtmMhmM = eYcQC.createQuerySet({
        count: 1051,
        label: "FERncOBBPvmdCBCHuPT",
        type: "occlusion"
    });
    const hMcVBamaKhRlYnvvASWd = xTxqTtqFYTJyfrFyfRZ.features
    const JHOdHnRDknuQKUSQZZwv = eYcQC.limits
    const HmwJMyzrJzdv = eYcQC.limits
    const gwtbtdbaVVhTSEnsx = IOskibRJngwmZkclHoK.type
    const KOpqoZZRBxEJOMe = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r8unorm",
        label: "YMuFJnFiGLrkSP",
        size: {
            width: 867,
            height: 312,
            depthOrArrayLayers: 22
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["r8unorm"]
    });
    const lZrzDgcqDQBu = KOpqoZZRBxEJOMe.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "r8unorm",
        label: "PRoUXhmTclIPG"
    });
    const kIIUWRQSvRu = JURKmyFNVkqjMMNs.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.708630402206196,
                g: 1.3085448069025145,
                b: 0.651397463730508,
                a: 0.9157525341114396
            },
            loadOp: "clear",
            storeOp: "store",
            view: lZrzDgcqDQBu,
            depthSlice: 16
        }],
        label: "bKqqFYF",
        maxDrawCount: 678684345,
        occlusionQuerySet: oRrlR
    });
    kIIUWRQSvRu.setVertexBuffer(0, hkWzoOprVUx);
    const mVeiQvze = eYcQC.label
    const UqKNBSTrHxhxGtV = kIIUWRQSvRu.label
    const uudom = eYcQC.queue
    const EADpe = eYcQC.limits
    const KFdUqsAiUgFOdDIfEDW = lZrzDgcqDQBu.label
    const gsFRMYpKTXLMNmi = eYcQC.limits
    const rcoUCxeojKwxeUiS = eYcQC.createQuerySet({
        count: 3093,
        label: "tNwJacJn",
        type: "occlusion"
    });
    const vAccWmZuIChe = eYcQC.features
    const HmjZHLTFphuvztFFk = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    kIIUWRQSvRu.setPipeline(dGfyXGgGhyO);
    const TrqaoRjwvgY = eYcQC.createCommandEncoder({
        label: "gRFREdphDoBP"
    });
    const uhcKbkkOhOcnREk = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r8unorm",
        label: "NHGMkcvPwMEAHsDsogLF",
        size: {
            width: 584,
            height: 842,
            depthOrArrayLayers: 46
        },
        mipLevelCount: 9,
        usage: GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["r8unorm"]
    });
    const uhNHcIUKkYVzAgl = uhcKbkkOhOcnREk.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 6,
        format: "r8unorm",
        label: "eKPlhffrVuBygh"
    });
    const UTXjavZTS = TrqaoRjwvgY.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.8801890285640819,
                g: 1.399564967219129,
                b: 1.2636882426292064,
                a: 0.5652172231927854
            },
            loadOp: "load",
            storeOp: "discard",
            view: uhNHcIUKkYVzAgl,
            depthSlice: 0
        }],
        label: "VDeYmsuelQoYJ",
        maxDrawCount: 2432336163,
        occlusionQuerySet: icXHxxRPLqkzCBgVSRh
    });
    const JbryoQttbIiFQ = eYcQC.queue
    const kGUOyvdefbT = eYcQC.queue
    const bNqVWENzklTxYeTzvoh = rcoUCxeojKwxeUiS.label
    const huexFzjub = bQEAm.count
    const ISjWgexiO = eYcQC.createShaderModule({
        label: "compute",
        code: MBZUlKYhqKgDTaoW
    });
    const DeOTi = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: EzcdRoXpmAzm,
            targets: [{
                blend: {
                    alpha: {
                        operation: "subtract",
                        dstFactor: "src",
                        srcFactor: "one-minus-dst-alpha"
                    },
                    color: {
                        operation: "reverse-subtract",
                        dstFactor: "one-minus-src-alpha",
                        srcFactor: "constant"
                    }
                },
                format: "rg8unorm",
                writeMask: GPUColorWrite.ALPHA
            }]
        },
        label: "DLKCIi",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "back",
            frontFace: "cw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const TaDjkgmwrqUNT = TrqaoRjwvgY.label
    const XPakRfdyAcABOmPN = eYcQC.label
    const oWNYlnNxkhV = kIIUWRQSvRu.label
    const uXobIJXuX = yrDAUx.type
    kIIUWRQSvRu.draw(3);
    const ELgKhyIksIkYsESbyc = kIIUWRQSvRu.label
    const hxlpDEucud = eYcQC.features
    VUXaCNpXMEA.writeBuffer(gqXcavSgrAxcMk, 98762788, PZRSPajc);
    const IsfafrExWluD = NOPaaCfguVGXz.label
    const EGrqZEDIEwvuxcZ = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: nDMfpNwqXdqAttUOFmc,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "src-alpha",
                        srcFactor: "one-minus-dst-alpha"
                    },
                    color: {
                        operation: "add",
                        dstFactor: "one-minus-src",
                        srcFactor: "one-minus-src-alpha"
                    }
                },
                format: "rgba16float",
                writeMask: GPUColorWrite.ALL
            }]
        },
        label: "NwkhYZc",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "triangle-list"
        },
        vertex: {
            entryPoint: "main",
            module: ZOubMzMb
        }
    });
    const wJPennljRNqBKYEOc = HJGdojfCZHbq.isFallbackAdapter
    const XBQaSDGnyuRGoQN = eYcQC.createShaderModule({
        label: "vertex",
        code: nJGeXyX
    });
    const AILvYGhmQpqIISJfgCDY = navigator.gpu.wgslLanguageFeatures
    const Deyxg = MrBSCwvM.limits
    const aLzeVgNtiLnSRpxaQ = eYcQC.createShaderModule({
        label: "fragment",
        code: PRvhpBtcTwbvZ
    });
    const ejdvVBBKOf = eYcQC.createCommandEncoder({
        label: "KaBKZmv"
    });
    const SOJbirn = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 4,
        format: "rgba16float",
        label: "MBbYPszpkkzlMRkbWQyK",
        size: {
            width: 1149,
            height: 1324,
            depthOrArrayLayers: 1
        },
        mipLevelCount: 1,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC,
        viewFormats: ["rgba16float"]
    });
    const kqmwSOZtZUfRPaPS = SOJbirn.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba16float",
        label: "MhHrGkpKQKfSuxtYmcm"
    });
    const NvNZHfaXbqX = ejdvVBBKOf.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.47286960732760064,
                g: 1.0215330313441078,
                b: 1.2387188130506226,
                a: 0.11673662744166702
            },
            loadOp: "load",
            storeOp: "discard",
            view: kqmwSOZtZUfRPaPS
        }],
        label: "KTAiDzAbwNcFJqFRaKyd",
        maxDrawCount: 431245123,
        occlusionQuerySet: uGkfIB
    });
    const SBcdywVIPkrGtjfYyC = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: WjitLVIt,
            targets: [{
                blend: {
                    alpha: {
                        operation: "max",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rgba8unorm",
                writeMask: GPUColorWrite.ALL | GPUColorWrite.ALPHA | GPUColorWrite.BLUE
            }]
        },
        label: "RkqreWyLzcVevW",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "back",
            frontFace: "ccw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: ZOubMzMb
        }
    });
    EdPYEtHxHSLXpALlhVeM.submit([jYFqkFbCT]);
    const Xccjw = rcoUCxeojKwxeUiS.label
    const xZoZNezyIsG = hePvWjDsgaXEjUbpHasY.type
    const pNZEthrUMAPql = JURKmyFNVkqjMMNs.label
    const DUMFzYxDU = XfxJXyBQCXYNMjTuhwaB.label
    const xDZjrMpbZwUqkiCEToWX = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "src-alpha-saturated",
                        srcFactor: "dst-alpha"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rg16float",
                writeMask: GPUColorWrite.BLUE
            }]
        },
        label: "FEvQhNDOJYowP",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "front",
            frontFace: "cw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: XBQaSDGnyuRGoQN
        }
    });
    kIIUWRQSvRu.end();
    const KogQEhgvIpQnegsz = JURKmyFNVkqjMMNs.finish();
    const clqxD = eYcQC.features
    const migIyAO = await navigator.gpu.getPreferredCanvasFormat();
    const VXxAgQL = CQlzBavhrGtDkCHyL.limits
    const jzYjHDTpitpVhunP = eYcQC.limits
    const mlFLwqdwgLszD = icXHxxRPLqkzCBgVSRh.label
    const gbZFMzpUS = PypdPV.createView({
        aspect: "all",
        dimension: "2d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rg8unorm",
        label: "uIHJtGsC"
    });
    const FrSSZaIfBnVvoZWG = UTXjavZTS.label
    const AbDoCA = await navigator.gpu.getPreferredCanvasFormat();
    const jEcrHGQNlPNK = eYcQC.createBuffer({
        label: "BYKhuDeoJcOcNu",
        mappedAtCreation: false,
        size: 93342056,
        usage: GPUBufferUsage.STORAGE
    });
    const JCGZm = aiGjQqGdoRb.type
    const mcjJXmsccOb = await navigator.gpu.getPreferredCanvasFormat();
    const iEHvGdd = eYcQC.createBuffer({
        label: "TNHle",
        mappedAtCreation: false,
        size: 256817044,
        usage: GPUBufferUsage.STORAGE | GPUBufferUsage.INDEX
    });
    const recmZXesoGDNkvJT = oRrlR.type
    xyeUfvIXDkLzFiuexedF.writeBuffer(hkWzoOprVUx, 126249220, vDyENvXcgUetquS);
    const GKTwHWPCGJ = Yebahacg.features
    const rDnYLX = icXHxxRPLqkzCBgVSRh.label
    const JkwwdbLTw = await navigator.gpu.getPreferredCanvasFormat();
    const FvjdUceU = eYcQC.createCommandEncoder({
        label: "FbsCmhKJgV"
    });
    const XqOpWRUZpfBCDztS = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rgba16float",
        label: "rCSCIdVgcDovkPz",
        size: {
            width: 331,
            height: 799,
            depthOrArrayLayers: 48
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.STORAGE_BINDING,
        viewFormats: ["rgba16float"]
    });
    const UnkzGI = XqOpWRUZpfBCDztS.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 4,
        format: "rgba16float",
        label: "VHdfIGeaEwySSXiGQFt"
    });
    const qjzDkZZcO = FvjdUceU.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.13582043804290556,
                g: 0.8988802471613537,
                b: 0.30780639320969616,
                a: 0.5671529303372917
            },
            loadOp: "load",
            storeOp: "discard",
            view: UnkzGI,
            depthSlice: 2
        }],
        label: "irhamdWVGHzLVTGHK",
        maxDrawCount: 2243846993,
        occlusionQuerySet: KdPBGQrLAtmMhmM
    });
    qjzDkZZcO.setPipeline(EGrqZEDIEwvuxcZ);
    qjzDkZZcO.draw(8);
    const bsXhXlItG = navigator.gpu.wgslLanguageFeatures
    const piaqURW = eYcQC.createCommandEncoder({
        label: "knnjFDKqTiIZcsl"
    });
    qjzDkZZcO.setVertexBuffer(0, hkWzoOprVUx);
    const juZxZvOgXKQaTuZ = rcoUCxeojKwxeUiS.count
    const tygLGvQ = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "add",
                        dstFactor: "one",
                        srcFactor: "src-alpha-saturated"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "r8unorm",
                writeMask: GPUColorWrite.ALPHA | GPUColorWrite.BLUE | GPUColorWrite.RED | GPUColorWrite.ALL
            }]
        },
        label: "nBNLbRXjYSNMlpxb",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "none",
            frontFace: "cw",
            topology: "line-list"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const MKYAvduIQWKs = navigator.gpu.wgslLanguageFeatures
    const GNbwWMuXEdYK = qjzDkZZcO.label
    const clbidOaCzWdWJIVXSX = await navigator.gpu.getPreferredCanvasFormat();
    const OcsNsAq = oRrlR.type
    const AIEReOZBnqrNCR = KdPBGQrLAtmMhmM.type
    const IQGcCFKcge = zuGqtyORvFoNnJheX.label
    const wPzSkMuAqeSwmj = uGkfIB.count
    const AEVwYDuUxlDDEA = eYcQC.createCommandEncoder({
        label: "cNsHOQVe"
    });
    const uPvHXZacHLPQqrysXNic = ikrgFwGH.label
    YyCktuFUHtsFYaLouZB.writeBuffer(hkWzoOprVUx, 40691252, HMHNCoIhkIWfua);
    const hyoOpc = UTXjavZTS.label
    const wxtVpw = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const OZGVNijasAACFmb = eYcQC.features
    UTXjavZTS.setPipeline(WvUInRVRjTDYvnIaj);
    UTXjavZTS.draw(7);
    const iwBBTSLtyhQmlseEhw = eYcQC.createQuerySet({
        count: 3213,
        label: "gAwIHWQlSYCrBM",
        type: "occlusion"
    });
    const tPwaeeVLyRrOYYf = Yebahacg.info
    const zhTtkgMEVdm = UTXjavZTS.label
    const mlSypwBAHIlZBfFHdCR = TrqaoRjwvgY.label
    const QWtOiKpiaRrcWuy = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "reverse-subtract",
                        dstFactor: "one-minus-dst-alpha",
                        srcFactor: "src-alpha-saturated"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "rg8unorm",
                writeMask: GPUColorWrite.RED | GPUColorWrite.BLUE
            }]
        },
        label: "WmwxMxQhGIUQiJ",
        layout: "auto",
        multisample: {
            count: 1
        },
        primitive: {
            cullMode: "back",
            frontFace: "ccw",
            topology: "point-list"
        },
        vertex: {
            entryPoint: "main",
            module: jiidzvKf
        }
    });
    uudom.submit([KogQEhgvIpQnegsz]);
    const cWQXFvJUqOQfOtSj = eYcQC.createRenderPipeline({
        fragment: {
            entryPoint: "main",
            module: kPgXkOuef,
            targets: [{
                blend: {
                    alpha: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    },
                    color: {
                        operation: "min",
                        dstFactor: "one",
                        srcFactor: "one"
                    }
                },
                format: "bgra8unorm-srgb",
                writeMask: GPUColorWrite.GREEN | GPUColorWrite.ALL
            }]
        },
        label: "ZUQTBoMzpKjIHHIEB",
        layout: "auto",
        multisample: {
            count: 4
        },
        primitive: {
            cullMode: "front",
            frontFace: "ccw",
            topology: "line-strip"
        },
        vertex: {
            entryPoint: "main",
            module: yLpQQNnkhtLfclz
        }
    });
    const VomBqcW = CQlzBavhrGtDkCHyL.info
    const qjBKICGzq = eYcQC.label
    const bKmrIqpk = eYcQC.createQuerySet({
        count: 1476,
        label: "mzyHJWkJd",
        type: "occlusion"
    });
    const YSCzlPC = qjzDkZZcO.label
    const djqGRCFIUYAFfTJoaEP = eYcQC.features
    const NDbLqUXtVFPHAo = piaqURW.label
    qjzDkZZcO.setPipeline(EGrqZEDIEwvuxcZ);
    const zzjED = navigator.gpu.wgslLanguageFeatures
    const fWHbpcwKhwzF = eYcQC.createCommandEncoder({
        label: "yYFww"
    });
    const xVowPtUruoM = eYcQC.createCommandEncoder({
        label: "xHoofTgTqed"
    });
    qjzDkZZcO.end();
    const NCVmB = navigator.gpu.wgslLanguageFeatures
    const lodGZjxARxlIYBgLwB = eYcQC.label
    const OXkPJ = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgba16uint",
        label: "qurWYtLHQxlwGyrTz",
        size: {
            width: 1383,
            height: 2479,
            depthOrArrayLayers: 45
        },
        mipLevelCount: 10,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.COPY_DST,
        viewFormats: ["rgba16uint"]
    });
    NvNZHfaXbqX.setVertexBuffer(0, hkWzoOprVUx);
    const bHQBVCUXGU = XfxJXyBQCXYNMjTuhwaB.label
    UTXjavZTS.end();
    const gNgQvRIQltHYcvuTXYv = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "bgra8unorm",
        label: "RbUbpSEeTpvWNBr",
        size: {
            width: 681,
            height: 645,
            depthOrArrayLayers: 6
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,
        viewFormats: ["bgra8unorm-srgb"]
    });
    const PavNBnqRNPSD = gNgQvRIQltHYcvuTXYv.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "bgra8unorm",
        label: "DJNwdnpbCpax"
    });
    const wRUaAIJAPPa = piaqURW.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.028310841508579987,
                g: 1.695297836685845,
                b: 1.636530138480169,
                a: 1.0737619143157218
            },
            loadOp: "load",
            storeOp: "store",
            view: PavNBnqRNPSD,
            depthSlice: 2
        }],
        label: "jekhAHKiHPnqhC",
        maxDrawCount: 3455582965,
        occlusionQuerySet: vFwIZDAkPOXDYfT
    });
    const oVRtuS = vFwIZDAkPOXDYfT.type
    const tpMhxp = eYcQC.createShaderModule({
        label: "vertex",
        code: YihziPdYxkCeCtESA
    });
    const KSpMWuKcrm = uhNHcIUKkYVzAgl.label
    const yrpzyjAdAYSbbXi = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    wRUaAIJAPPa.setVertexBuffer(0, hkWzoOprVUx);
    const ADLzRoFO = RuHhrtsyVy.type
    xbGhZbUrfdO.writeBuffer(gqXcavSgrAxcMk, 60711140, uXcVcCeP);
    wRUaAIJAPPa.setPipeline(loxUHMAHwYr);
    NvNZHfaXbqX.setVertexBuffer(0, gqXcavSgrAxcMk);
    const NduUBLWGOUSrbxlCBh = aiGjQqGdoRb.count
    const UXdlF = eYcQC.createTexture({
        dimension: "2d",
        sampleCount: 1,
        format: "rgba8unorm-srgb",
        label: "QSYVWZLTkcU",
        size: {
            width: 1789,
            height: 1593,
            depthOrArrayLayers: 5
        },
        mipLevelCount: 3,
        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,
        viewFormats: ["rgba8unorm-srgb"]
    });
    const kqeaFnFBuGUxIRX = UXdlF.createView({
        aspect: "all",
        dimension: "2d-array",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 0,
        format: "rgba8unorm-srgb",
        label: "DLUKx"
    });
    const BNAEPUUAtYSi = AEVwYDuUxlDDEA.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 1.504530375306678,
                g: 1.518786440924259,
                b: 0.3280503560990977,
                a: 1.269543101749141
            },
            loadOp: "load",
            storeOp: "store",
            view: kqeaFnFBuGUxIRX
        }],
        label: "YWfvZooQHTDNLV",
        maxDrawCount: 3516996174,
        occlusionQuerySet: vFwIZDAkPOXDYfT
    });
    const kwXxeWjBcqVC = eYcQC.createCommandEncoder({
        label: "oxvZrAKyhXw"
    });
    const rwrvmaKj = await navigator.gpu.requestAdapter({
        powerPreference: "low-power"
    });
    const dnGuQ = JVEWG.label
    const GpDTNkGeRzhiKMRTCH = FvjdUceU.finish();
    const jzAQLXdxCrx = eYcQC.createCommandEncoder({
        label: "YzwniG"
    });
    NvNZHfaXbqX.end();
    const OpnTrhOwKa = await navigator.gpu.requestAdapter({
        powerPreference: "high-performance"
    });
    const ZvnIiGEDVXAvUqIkshf = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "r8unorm",
        label: "mymclnYBgvQLZnTXgH",
        size: {
            width: 29,
            height: 141,
            depthOrArrayLayers: 56
        },
        mipLevelCount: 6,
        usage: GPUTextureUsage.RENDER_ATTACHMENT,
        viewFormats: ["r8unorm"]
    });
    const wXjWyiZwRgKGjeTvK = ZvnIiGEDVXAvUqIkshf.createView({
        aspect: "all",
        dimension: "3d",
        arrayLayerCount: 1,
        baseArrayLayer: 0,
        mipLevelCount: 1,
        baseMipLevel: 3,
        format: "r8unorm",
        label: "tIItXlbHgUlkHVdV"
    });
    const SedhEheSVpD = jzAQLXdxCrx.beginRenderPass({
        colorAttachments: [{
            clearValue: {
                r: 0.7164852135842319,
                g: 1.2578958693483837,
                b: 1.469293772683024,
                a: 0.19133272059217332
            },
            loadOp: "clear",
            storeOp: "discard",
            view: wXjWyiZwRgKGjeTvK,
            depthSlice: 1
        }],
        label: "EeMvUZxwcAKWdePYLJ",
        maxDrawCount: 234576469,
        occlusionQuerySet: vFwIZDAkPOXDYfT
    });
    const XzTsyJskgkrsmp = eYcQC.createTexture({
        dimension: "3d",
        sampleCount: 1,
        format: "rg8snorm",
        label: "FUsFNeihzfJ",
        size: {
            width: 856,
            height: 243,
            depthOrArrayLayers: 24
        },
        mipLevelCount: 5,
        usage: GPUTextureUsage.COPY_SRC,
        viewFormats: ["rg8snorm"]
    });
    const QEdkeWCQxiJamhWYzcuF = wxtVpw.isFallbackAdapter
    const KpUyi = eYcQC.createQuerySet({
        count: 3188,
        label: "hHRAx",
        type: "occlusion"
    });
    SedhEheSVpD.setPipeline(tygLGvQ);
    SedhEheSVpD.draw(3);
    console.log("reached end");
}
main().catch(console.error);